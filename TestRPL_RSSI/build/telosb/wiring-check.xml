<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f280c130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f0e40800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f85f28005a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f85f0e41600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f85f27f77a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f85f0e40e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f85f0e40e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f85f0dd0d60"/></to>
    </wire>
    <wire loc="67:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f85f28b6750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f85f2ad9640"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f85f2ad9640"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f85f291b590"/></to>
    </wire>
    <wire loc="68:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f28798b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f183d510"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f183d510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f0f02440"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f28a20d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27bca70"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7f85f2897820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f2554640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2554640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f85f28836b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f85f222e320"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f85f222e320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f85f2148a10"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f85f28809f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f85f222f080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f85f222f080"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f85f2149880"/></to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f85f287dd90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f222f9e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f222f9e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f2148270"/></to>
    </wire>
    <wire loc="76:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7f85f2872a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f85f0a9c020"/></to>
    </wire>
    <wire loc="15:../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f85f0a9c020"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f85f0a9aa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f85f2810b50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f192d020"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f192d020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f85f187a4b0"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2894c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f23a4020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f23a4020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f281ab60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f23934e0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f095e5a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0988cc0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0a90020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85efd79ca0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0dcb540"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85efe76900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85efe96620"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85efeb3900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85efed0690"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85efee3af0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0ff1dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f107ab70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f109d430"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f11f5620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f12eb020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f1fd67e0"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f166a720"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f01a1140"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f1d5b020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2080610"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f20c4c50"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2399a90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2542400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f85f291bc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f85f2fcf3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f85f2fcf3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f85f2b79140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f85f290e6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2adbab0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f2adbab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2ad5cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f290edc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f85f2ad2430"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f85f2ad3390"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f85f2ad3390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2ab1280"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f85f2ad2b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2acb020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f85f2ad1380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f27942e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f2ab1280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2a9a020"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f85f2aaa850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f85f2a9a6d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f85f2c514c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f85f2a999a0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f85f2a56730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f29936d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f85f2a440c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f298bb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f85f2a4d890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f2998160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f85f2a31a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f2972cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f85f2a54c10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f2999480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f85f2a38020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f2972020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f85f2a2ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f295acb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f85f2a3f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f296c220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f85f2a58d60"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f29e89d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f85f2a34a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f29812f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f85f2a3a3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f2982610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f85f2a435a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f2983220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f85f2a4c890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f29917a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f85f2a30a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f29692f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f85f2a42be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f297b6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f85f2a53a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f2992ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f85f2a5f1b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29f6540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f85f2a38da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f296a610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f85f2a5e220"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f299a020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f85f2a3ea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f29646d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f85f2a488d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f29a1a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f85f2a33a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f29797a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f85f2a50e60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f29a2de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f85f2a391f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f297aac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f85f2a2fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f29627a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f85f2a400c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f2974b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f85f2a37b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f2963ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f85f2a35a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f2989cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f85f2a36a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f295a020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f85f2a3b570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f85f2989020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f85f2a3c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f85f295db30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f85f29f4450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29f5d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f85f29f4aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f85f2955a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f85f29f3120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f85f2952260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f29a0930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29f6540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f299e020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29f5d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2997020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29f6540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f29967a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29f5d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2990610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29f6540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f298fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29f5d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f85f29ed2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f85f29ed940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f85f29529f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f85f29ec020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f85f2951240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2988b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f29862f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2980160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f297f7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2978610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f2977c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2971b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f296f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2968160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f29677a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2961610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f2960c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2959b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f85f29572f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f2b77040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f85f2b71490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f85f2f663b0"/></to>
    </wire>
    <wire loc="224:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f85f27d2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f27942e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f27bc470"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f85f27b9060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f85f27bdae0"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f85f27bdae0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f2586020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f85f27b8340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f85f2797ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f85f2797ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f2569b90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f85f27b3660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f85f2795020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f85f2795020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f2563710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f256c2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f85f273d9a0"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f85f273d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2619d10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f2568de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f85f273b9a0"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f85f273b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2614740"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f2562930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f85f27399a0"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f85f27399a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f260f100"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f85f277e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26b3740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f85f276a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2682100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f85f2720ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2674100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f85f26fccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e9740"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f85f271ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2670d10"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f85f2766810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2679740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f85f27519a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2649460"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f85f272d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25f2100"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f85f2718cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2666100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f85f2708cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2606740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f85f26f3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e4100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f85f2778810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26a4740"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f85f2716cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2661d10"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f85f2774810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f269bd10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f85f2760810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f266b740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f85f274b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f263a100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f85f27379a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f260bd10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f85f27269a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e4100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f85f2782810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26bc100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f85f276e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f268dd80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f85f275a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f265c740"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f85f2722cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2674100"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f85f2702cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25f8740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f85f26f5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e4100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f85f270ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f261e100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f85f2755810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2653e60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f85f27419a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2623740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f85f27319a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25fdd10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f85f2700cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25f2100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f85f2714cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f262c100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f85f277c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26ad100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f85f2768810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f267ed10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f85f27359a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2606740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f85f2764810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2674100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f85f274f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2645e00"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f85f272b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25eed10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f85f2710cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2623740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f85f2785870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26ecd10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f85f2772810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2696740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f85f275e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2666100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f85f27499a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2636d10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f85f270ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f265c740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f85f2706cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2601100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f85f26f9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e4100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f85f27459a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f262c100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f85f270acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2657100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f85f2780810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26b8d10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f85f276c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2687740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f85f2757810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2657100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f85f2712cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2628d10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f85f26fecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25eed10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f85f27539a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f264e9f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f85f273f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f261e100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f85f272f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25f8740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f85f277a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26a9d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f85f27339a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2601100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f85f2776810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f269f100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f85f2762810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2670d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f85f274d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f263f740"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f85f27289a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e9740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f85f278e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f26c1740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f85f2770810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2691100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f85f275c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2661d10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f85f27479a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2631740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f85f271aca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f266b740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f85f2704cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25fdd10"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f85f271ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f266b740"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f85f27439a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2628d10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f85f26f7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f25e9740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f85f26f1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f260bd10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f85f27249f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f85f2679740"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f25411d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f85f25411d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f23cb690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f2542400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2447760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f85f2538a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f85f23bdcf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f2447760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f047c490"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f85f23c6c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f241acf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f85f24141d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f2446020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f85f2446020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f0475140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f23b2020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f24c4020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f24c4020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f24880f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f047c490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0461e60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f85f046fb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f047cce0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f85f047cce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f045f720"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f0472690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f24c4020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f045c910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f0466c50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f0466c50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f045a020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f04642b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f04642b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f0459440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f04635d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f04635d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f85f2a440c0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f85f2a3b570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f85f2a42be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f85f2a391f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f85f2a400c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f85f2a38020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f85f2a3f5a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f85f2a38da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f85f2a3ea50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f85f2a37b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f85f2a3c020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f85f2a36a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f85f2485540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f85f24bb020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f85f24bb020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f24b60a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f24a72c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f85f2411490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f85f23c0e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f85f2397370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f85f2394390"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f239d4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f2399a90"/></to>
    </wire>
    <wire loc="97:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7f85f2375e60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f2339800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f85f2374a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f0a31980"/></to>
    </wire>
    <wire loc="98:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f2382bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f2336570"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f85f23803b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f85f2336dc0"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f85f2332c70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f85f2374a80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7f85f2333760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f85f222e320"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f2324a50"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f2108020"/></to>
    </wire>
    <wire loc="104:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f2318720"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f18396e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f85f232dcc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f85f0ee3020"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f23078a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f1788020"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f1788020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f177c7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f85f23105f0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f85f0ea2540"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f85f0ea2540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f85f0e9d360"/></to>
    </wire>
    <wire loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7f85f22bd380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f85f2146310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f85f23803b0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7f85f2146ab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f0e5c840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f85f21453d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f2124140"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f2124140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7f85f2140730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f211eb00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f211eb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f2136e00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f21355e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7f85f2375e60"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f2132270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7f85f21312b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f2382bb0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f2131a10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f192d020"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f85f213bae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f21174e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f21174e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f85f2130590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f85f0ea2540"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f212fa40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f1788020"/></to>
    </wire>
    <wire loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7f85f212eac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f85f212dad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7f85f212c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7f85f212d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7f85f212cad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f210c020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f21074a0"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f2101800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f210b690"/></to>
    </wire>
    <wire loc="9:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f210b690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f20c1300"/></to>
    </wire>
    <wire loc="12:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f20c0da0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f209e020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f85f20b1b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f85f20947e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f85f20947e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f85f207f9f0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f85f20861b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f85f207ccd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f85f2087d90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f85f207d8d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f208f980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f2080c80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f85f207ae40"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fd2220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fd2220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fccaf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f85f20750e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f85f1f8de60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f85f1f8de60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f7fb60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f85f2074380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f85f1f896a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f85f1f896a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f71d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f85f20736a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f85f1f87ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f85f1f87ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f66710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f85f20710e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f85f1f50d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f85f1f50d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f85f1e32a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f85f20591d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f19dbe20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f19dbe20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f85f205a2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f85f19d87b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f85f19d87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f85f205a9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f85f19d7ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f85f19d7ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f85f205ca40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f85f19d9ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f85f19d9ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f205c120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f19d5160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f19d5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f85f2060b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f85f19cd870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f85f19cd870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f85f20633d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f85f19cb880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f85f19cb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f85f2063c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f85f19ca0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f85f19ca0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f20625f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f19d2e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f19d2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f205f020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f19d1670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f19d1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f85f206c520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f85f19bb500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f85f19bb500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f85f2064a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f85f19bcce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f85f19bcce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f205f8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f19cee50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f19cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f85f205e1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f85f19d1e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f85f19d1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f205ea70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f85f19cfe50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f19cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f85f2058d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f19a9a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f19a9a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f85f2058020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f197c9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f197c9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f85f2069810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f85f1950b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f207a450"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f209e020"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f85f204d820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f85f204e940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f1fd67e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f1fcc260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f1fcc260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0320a10"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fccaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f031f2a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f0320a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0319a10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f85f031f2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f03125f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f0319a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f02fc510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f85f030cd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f03182a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f85f03182a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f85f02fcda0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f030f9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f1fb6080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f1fb6080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f1fb1cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f02f8020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f03021b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f03021b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f02f7760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f03018f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f03018f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f02f5a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f02ffc10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f02ffc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f85f1fad0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f85f24bb020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f85f1f8b090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f7a710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f85f1f8a390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f751d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f85f1fd3b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f84020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f85f1f889b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f6cb60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f832f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f85f277e810"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f7ede0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f85f27519a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f79930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f85f2780810"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f74480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f85f2785870"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f6f020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f85f27499a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f6bde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f85f27539a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f65930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f85f274b9a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f85f1f50150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f85f1f46a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f85f1f4fa20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f85f1e23a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f1f355d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f85f2a435a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f85f1f348f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f85f2a34a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f337a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f85f27539a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f85f1e31610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f85f1f248a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f85f1f248a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f85f1f108a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f85f1e22610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f85f1f268f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f85f1f268f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f85f1f16810"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f85f1f19a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f85f1f06a30"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f85f1f218a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f85f1f0d8a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f85f1f1f8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f85f1f0b8a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f85f1f2a8a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f85f1f128a0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f85f1f1b8a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f85f1f088a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f85f1f238a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f85f1f0f8a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f85f1f18a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f85f1f05a30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f85f1f1e8a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f85f1f0a8a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f85f1f258a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f85f1f118a0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f85f1f1aa30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f85f1f07a30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f85f1f228a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f85f1f0e8a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f85f1f208a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f85f1f0c8a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f85f1f2b8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f85f1f138a0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f85f1f1c8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f85f1f098a0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f85f19d8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f19cc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f85f19c20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f85f19cb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f85f19b6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f19b8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f85f19d7490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f85f19be880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f19ba500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f85f19c6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f85f19c70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f19daa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1ddc920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f19d5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f85f19d4490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f19bdc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f85f19d4be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f19bace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f85f19be0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f19cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f19bf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f85f19c2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f19bf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f85f19b7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f19b8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f85f19c7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f85f19c10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f85f19bbce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f85f19ca880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f85f19b6ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f19d9480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f85f19d2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f19ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f85f19c50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f85f19c5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f19cc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f85f19d32f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f85f19d2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f19d57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f19bc500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f85f19b7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f19c60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f85f19c1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f85f19d8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f85f19c80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f85f19d3940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f85f19c8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f85f19bd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f85f19b59b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1dd8bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1dd6020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1dd6db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1dd9810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1dd4ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f85f1dc4b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d64770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f1d64770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f85f1dd3400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1d42c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1d42c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f022ac30"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f85f1dd1080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f85f1d418f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f85f1d418f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f85f02270c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1dc8680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1a03020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1a03020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f85f02262b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f1dcfa70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f85f1dbfbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d5bb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f85f02262b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1cd8510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f85f02270c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f85f1cdcdd0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f022ac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1ce1a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f02288f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f021d2c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f021d2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f1b658a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f85f1cdcdd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f85f1c60440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f02276d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f1cd9480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f1cd9480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f1c60a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f1cd6600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f0226a50"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f020e760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1cdc5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f85f1cd7370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f021e640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f021e640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1b665c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f1cd26a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f0218c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f0218c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f85f1b6aa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1cdc5e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1c61c40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1cd8510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1c5f700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1ce1a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1c62e80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f1c5de00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f1cd6600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f85f1c5d060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f85f1cd7370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f1c58de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f1cd26a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f85f1c5c490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f1c50860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f1c50860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f85f1c44020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f1c575a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f85f1c56c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f85f1c468a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1c3f750"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f1c493b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f85f1c40dc0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f85f1c10700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f85f2722cc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f85f1c0e670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f85f271ecc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f85f1c0c670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f85f271ccc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f85f1c0a670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f85f2716cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f85f1c08670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f85f2718cc0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f85f1c155b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f85f1abe430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f85f0217440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1b679a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f85f0217a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f85f1aca880"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f85f1aca880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f85f1abe430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f021c2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f1c50860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f021da60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1b63130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1b63130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1ad1060"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1b62020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f020e760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f1b658a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f1ad3bf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f1ad3bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f019e850"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f85f1b6aa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f85f1b605c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1b665c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1ad5e60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1ad5e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f019f970"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1b679a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1b4f020"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1ad1060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f019dc30"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1ad1930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1b62020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1b4e4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1ad1060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f85f1b4f690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f1c493b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f85f1b4fe70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f85f1c468a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f1ad2400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f019d020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f019c590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1ad1930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f85f019cd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f85f01a1750"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f85f0198020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f85f1ab7250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f85f1c44020"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f85f1ab3d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f85f2722cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f85f1ab1cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f85f271ccc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f199cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f85f19a7da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f199fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f1999670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f85f1992e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f85f1999e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f85f19852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f19882f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f85f19a4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f85f198e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f19892f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f85f199ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f199dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f85f1993670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f85f1996e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f85f1998670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f19a8760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f19a3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f85f19a2120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f198da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f85f19a2870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f1989ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f19a4dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f85f198fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f199d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f199e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f85f19a7750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f1990e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f85f1991670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f198f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f85f1987ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f1988ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f85f1995670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f85f1991e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f85f198aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f85f1997670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f85f1985ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f19a7100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f85f199f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f199c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f85f1993e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f85f1998e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f85f1992670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f85f199b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f85f19a5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f199be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f85f19a0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f85f19a0cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f85f198a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f85f198bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f19a3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f198b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f85f19872f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f1995e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f85f1990670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f85f19a5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f85f19a4770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f85f1997e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f85f19a0670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f85f1996670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f85f198ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f85f19847a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f196fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f85f197ada0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f1973b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f196d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f85f1966e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f85f196de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f85f19592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f195b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f85f1978120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f85f1961670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f195c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f85f1972c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f1970c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f85f1967670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f85f1969e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f85f196c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f197b760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f1976aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f85f1975120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f1960a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f85f1975870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f195cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f1978dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f85f1962e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f1970480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f1972480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f85f197a750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f1963e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f85f1965670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f1962670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f85f195aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f195bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f85f1968670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f85f1965e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f85f195ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f85f196a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f85f1959ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f197a100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f85f1973370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f196f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f85f1967e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f85f196ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f85f1966670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f85f196e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f85f1979450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f196ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f85f1974020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f85f1974cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f85f195e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f85f195fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f1976450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f195f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f85f195a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f1968e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f85f1963670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f85f1979aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f85f1978770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f85f196ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f85f1974670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f85f1969670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f85f1961e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f85f19587a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f85f192c020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f0a31980"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f210e6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f187ada0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7f85f1869bb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f85f192c020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f85f1879720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f1855bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f1855bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f85f186e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f184e560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f184e560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7f85f1874ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f1847020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f1847020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f1869410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f1868400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f85f185f980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f85f222e320"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f85f185c270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f85f222f080"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f185b590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f183b560"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f183b560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f1834d20"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f85f18675a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f85f0eb4ae0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7f85f18610f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85f0ead4a0"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f85f0ead4a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85efe75020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f85f185cb60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f85f0ee3020"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7f85f185a2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7f85f185aad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f18396e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f1817890"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f85f1837930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f85f1818a50"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7f85f183cd40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7f85f1816a90"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f85f18389d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f222f9e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f85f18389d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f210e6f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f183c540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f18321d0"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f0eff020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f1838130"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f85f0eff8c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7f85f18389d0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7f85f0efe1a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f168c020"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f168c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f166b6d0"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f85f0efedd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f1787980"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f1787980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f177b790"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7f85f1831ae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f1816290"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f85f18141d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f85f1787020"/></to>
    </wire>
    <wire loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f85f1787020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f85f1785da0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f85f1780720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f85f168caf0"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f85f168caf0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f85f166ad60"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f16dca80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f18321d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f16db2d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f1814b20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f85f180ec30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f85f0ee3020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f85f18302d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f85f0ee3020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f0efd5c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f85f180d790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85f0ecaa40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f85f0ecaa40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85efe96d10"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7f85f18091c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f0ec5970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f0ec5970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f85f17f5e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7f85f177a060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f16e1a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7f85f177a860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f16aa9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7f85f17790a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f16a89b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7f85f17798a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f16a69b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7f85f1778270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f16a47b0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f16a47b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f1773450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f1773c50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f1834d20"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f85f1772900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f85f1780720"/></to>
    </wire>
    <wire loc="39:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f17712d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f1770300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f210b690"/></to>
    </wire>
    <wire loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7f85f173c380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f16e1a30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f00691f0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f85f00699f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f16aa9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f005e020"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f85f005e820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f16a89b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f00546a0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f85f0053020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f16a69b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f004adb0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f85f00495e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f168a020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f1669940"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f85f1667060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f138e420"/></to>
    </wire>
    <wire loc="30:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f138e420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f1388b40"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f85f1667bd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f85f138a020"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f85f138a020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f85f1382020"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f85f16650f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f85f138ad00"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f85f138ad00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f85f1384a00"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f85f1665e20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f85f1389a30"/></to>
    </wire>
    <wire loc="34:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f85f1389a30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f85f1383820"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f85f1658020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f85f0f7b8f0"/></to>
    </wire>
    <wire loc="21:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f85f0f7b8f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f85f1375470"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f85f1659020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f85f0f76020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f85f0f76020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f85f0f71450"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f1635bc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f1684870"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7f85f163a900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f0f77e70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f0f77e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7f85f1656a10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85f0f60a40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f85f0f60a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85efee2210"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7f85f1642150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85f0f36020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f85f0f36020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85efed0d80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7f85f16465f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85f0f0e020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f85f0f0e020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f85efeb2020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f85f163fc50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f85f0f30850"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f16644e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f177c7a0"/></to>
    </wire>
    <wire loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f85f13bd6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f1388b40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f0fe5b80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f85f1383820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f104e5e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f85f1382020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f85f104b170"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f85f1384a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f104f8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f0fe5b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f85f0fe2d90"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f136d170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f1171a70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f1171a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f1161020"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f85f1375470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f85f0fd0020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f85f0fd0020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f85f0fcb080"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1376640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1167d20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f85f1382d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f85f104ec90"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f85f104ec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f85f1043a20"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f136d7f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f0fe5080"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f0fe5080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f0fdd2d0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f104e5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f85f1043370"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f137e080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f85f11736e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f85f11736e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f85f1163c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1385d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1050be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f1050be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f10457b0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f104f8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f85f10444d0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f85f104b170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f85f1041020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f1381a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f104da50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f104da50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f1042840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f85f0fe2d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f136eb20"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f136eb20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f1368d90"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f104a6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f10a5dd0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f10a5dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f109e660"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f10a2b50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f0fd12a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f0fd12a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f0fce3a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f0fd0d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f0fe9ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f0fe9ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f85f0fe3860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f0fe3860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f136a790"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f136a790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f135e8f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f85f104a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f0fe6980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f0fe6980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f85f0fe2690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f85f0fe2690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f1081aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f1081aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f107de30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f85f107e950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f1369490"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f1369490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f11f97c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f1360230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f135d650"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f11f97c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f11f3020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f135c4b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f208f980"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f85f135b1a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f85f2087d90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f85f135a3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f12fb9b0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f85f135a3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f11fc5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f11fc5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f11f5ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f12fb9b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f12eb6a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f85f1359080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f85f12f8300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f85f12f8300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f12ea020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f85f1359e00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f12f6020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f12f6020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f12eacf0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f134fb00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1347130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1162640"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f1358c60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f85f1347b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f10ac390"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f10ac390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f1350470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f85f13425d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f85f1343660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f85f1344730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f85f12f5ca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f85f12e9c90"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f85f12f4470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f85f12e84b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f85f12e6020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fd2220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f85f12d5d60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f85f1fd3b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f85f12ce080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f85f1f8de60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f85f12cc370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f85f1f889b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f85f12d51e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f85f1f50150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f85f12cb6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f122dc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f122dc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f12ca4e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f122c8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f122c8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f12c7020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f85f122a2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f122a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f85f12c7730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f85f1229cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f85f1229cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f85f12c7e60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f85f1228370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f85f1228370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f12c65c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f1227d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f1227d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f12c86b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f85f1221c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f1221c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f85f12c9020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f85f12087a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f85f12087a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f12c9d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f120d2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f120d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f12c6d00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f1222480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f1222480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f12c30c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f121ee50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f121ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f12c3990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f121d670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f121d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f85f12c5930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f85f12247b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f85f12247b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f85f12c1530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f85f120bad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f85f120bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f12c2380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f85f120c2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f120c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f12c2bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f85f120cad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f120cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f12bc780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f11fcdf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f11fcdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f11f4550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f12e3210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f12e10c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f85f12e0200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f85f1170550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f85f1170550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f85f1161a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f12cd570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f1168480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f1168480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f11598b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f12c0110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f1220c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f85f1229020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f1223c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f85f1216e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f85f121de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f85f12092f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f85f1212670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f85f1222c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f85f1217670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f85f121ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f85f121c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f85f1226370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f1210a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f85f1226ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f120dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f1227060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f85f1213e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f1221480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f85f122a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f1214e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f85f1215670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f1213670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f85f1219670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f85f1215e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f85f120ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f85f121b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f85f1209ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f85f1223490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f1220480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f85f1217e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f85f121ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f85f1216670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f85f121e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f85f1229670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f85f1224160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f85f1224e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f85f120e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f85f120fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f12276b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f120f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f85f120b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f1219e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f85f1214670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f85f12289c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f85f121be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f85f121a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f85f1212e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f85f11f8020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f85f11f37c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f11de150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f85f11f2020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f85f1f8de60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f85f11f1380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f85f1f8b090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f85f11f06b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f85f1f8a390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f85f11efa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f85f1f4fa20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f85f11ee6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f10f7520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f10f7520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f85f11ec530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f85f10d4480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f85f10d4480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f11ebad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f10f1060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f10f1060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f85f11eb3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f85f10f1d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f85f10f1d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f11ea330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11e91e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f85f11e7d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f85f1170550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f85f11e9b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f85f20947e0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f11e23e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f10e9840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f10e9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f11e2cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f10e8060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f10e8060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f85f11e3b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f85f10f0ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f85f10f0ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f85f11e06d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f85f10d5c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f85f10d5c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f11e1590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f85f10d7c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f85f10d7c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f11e1e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f85f10d6480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f85f10d6480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f11df020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f10d7480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f10d7480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f11df8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f85f10f6c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f85f10f6c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f85f11d29d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f85f116c660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f85f115daf0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f1104020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f1fb6080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f85f11573b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f85f1106cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f85f11566e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f85f2538a80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f10ff0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f10ea620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f85f10f5940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f10ed620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f85f10e1840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f85f10e8840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f85f10f4cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f85f10dc060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f10d8c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f85f10ec620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f85f10eb620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f85f10e2060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f85f10e4840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f85f10e6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f10f62b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f10f16b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f10db480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f85f10f0490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f10f29c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f85f10dd840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f10ece00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f10ede00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f85f10f52f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f10de840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f85f10df060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f10dd060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f85f10d5480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f85f10e3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f85f10df840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f85f10d8480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f85f10e5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f85f10efe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f10ebe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f85f10e2840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f85f10e6840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f85f10e1060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f85f10e9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f85f10f4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f85f10ef7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f85f10dac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f85f10da480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f10dbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f85f10d6c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f10e3840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f85f10de060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f85f10f4670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f85f10f2370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f85f10e5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f85f10ef160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f85f10e4060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f85f10dc840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f85f10d3160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f109db40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f85f10a2b50"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f10988f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1085690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f1085690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f85f1097760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1095020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f85f107e200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f85f107a570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f85f10793f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f85f107e950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1079a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f1041d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f85f104a6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f85f1040b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f85f104a020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f103f2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f103d170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f85f103db70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f85f0ff0410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f85f1011db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f85f0fe4800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f0fdf580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f0fdf580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f0fcbdd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f85f0fd0d70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f85f0fcaaf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f0f95350"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f85f0f95350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f85f0fc8650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f85f0f93750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f85f0f93750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0fc99a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f85f11736e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f0fc3a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f85f0fbf2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f138cdd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f136d7f0"/></to>
    </wire>
    <wire loc="22:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0f7a670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f137e080"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f0f71c70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f0e9a990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f183b560"/></to>
    </wire>
    <wire loc="30:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f85f0e998b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f85f222e320"/></to>
    </wire>
    <wire loc="31:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7f85f0e97260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7f85f2332580"/></to>
    </wire>
    <wire loc="32:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f85f0e979b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f192d020"/></to>
    </wire>
    <wire loc="33:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f0e96540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f2339800"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f0e5c840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85efe602e0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f85efe60ae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f0e455c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f0dcbb90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f85f0dcbb90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f0dbc7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f85f0e41600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f85f0e28300"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f0e40800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f0dd10d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0e3c800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0dcfa10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f85f0e3d020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f85f0dd16c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f85f0dcb540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f85f0dbc170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f0dc42b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f0e2b300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f85f0dce4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f0dc7790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f85f0dcd120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f0dc8c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f85f0dc0970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f85f0ab18c0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f0dc7790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f0c8dde0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f85f0dc8c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f85f0c8d6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f85f0c8cc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f85f0dc0970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f0db1020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f0dc42b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f0c8a920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f0dc42b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f0c80cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f0dc42b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f85f0c8b590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f85f0db2c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f85f0c8be80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f85f0db6720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f85f0db5020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f85f0c85e00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f85f0dab860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f0c5b080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f0c5b080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f0ac3080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f85f0c76d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f85f0c5b890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f85f0c5b890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f85f0ac9440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f85f0d566e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f85f0d8e4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f85f0d5ac70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f85f0d53a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f85f0c88020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f85f0c88800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f85f0c59020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f85f0ac8440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f85f0ac8440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f85f0c45020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f85f0ac9440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f85f0c47860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0ac7020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0ac38e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f0ac2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f0aca020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f0aca020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f0c4a7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0acac70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85efde35d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85efde35d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0b0a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0c42450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0ac7020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85efddd7c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0c49a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f85f0c431d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85efde4880"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85efde4880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f0b0c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f0c411d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85efddd020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85efddd020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f85f0b0d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0c49a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0bd6dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f85f0c45020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f85f0bd4890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f85f0c47860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f85f0bd56d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f0c4a7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f0bd6020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0bd13e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0c42450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f85f0bd35b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f85f0c431d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f0bcc5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f0c411d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f85f0bd1a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f0bbcd30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f0bbcd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f85f0bb5550"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f0bcb020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f85f0b29110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f85f0b29110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f85f24bb020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f85f0bc9120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f0bb9860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f85f0bb0130"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0bbc500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0bb8bc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f85f0bb0a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f85f2712cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f85f0bae990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f85f2710cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f85f0bac990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f85f270ecc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f85f0baa990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f85f270acc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f85f0ba8990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f85f270ccc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85efde25a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f0bbcd30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85efde3d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0b0ad20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0b0ad20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0aff060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0b09af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85efddd7c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0b0a510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0b01bd0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0b01bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f85efd753a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f85f0b0d510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f85f0b07230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f0b0c280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85f0b02e30"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f85f0b02e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f85efd76540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0aff060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85efd738b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f85f0b062f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f0bb9860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0aff930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0b09af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0b05120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0aff060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f0ae59d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f0b00400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f0b00400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85efd75b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0afab20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0bbc500"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85efd72210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0aff930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f85efd729d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f85efd78330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f85efd70c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85efd403a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0afab20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f85efd40b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f85f0ae5400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85efd3f0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f0ae59d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85efd3fd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0ae3720"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f0a977f0"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f0a90850"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f85f0a9aa20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f85f0a91020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f0a8fe20"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85f183c540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f0a8e600"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f85f0a43020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f85f2ad9640"/></to>
    </wire>
    <wire loc="20:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f85f0a43650"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f0a42620"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f210c020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f0a42c80"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f209e020"/></to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f0a403a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f1788020"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f85f0a33130"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f85f222f080"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f0a468f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f222f9e0"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f0a468f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f2382bb0"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f85f0a468f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f85f210e6f0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f85f0a31980"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f85efd30ce0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f85efd2f500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f85f0981ca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f85f09ac760"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f85f0980df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f85f09b3870"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f85f09b3870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f85efd200c0"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f85f097ea90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f85f09b2590"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f85f09b2590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f85f0e40e10"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f85f095f2a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f85f0981400"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f85f09b1270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f85f0e3d020"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f85f09b08f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0e3c800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85efd20d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f0a0dce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f85efd1f970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f85f0e3d020"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f85f0a0dce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f85f09c1580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f85f09c0400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f85f0e41600"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f85f09bf060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f85f0e3d020"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f85f09be720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f85f0e40e10"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f85f09bd480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f85f09bdc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f85f0979d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f85f095ec00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f85f095f2a0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f85f0955b90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f85f2ad9640"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f85f09523c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f85f0e455c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f62910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f62910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f62910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f85f28cf110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f62910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f62910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f85f2a28890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f85f2a28c30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f85f2a27020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f85f2a273a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f85f2a27720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f85f2a27a90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f85f2a27e20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f85f2a26200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f85f2a265d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f85f29ebe70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f85f29e7270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f85f26eb190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f85f26eb540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f85f26eb8f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f85f26ebca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f85f26ea060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f85f24f99c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f85f24f99c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f85f24b5120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f85f24b5120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f85f24a4a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f85f24a4a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f85f24a1290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f85f24a1290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f85f24a1680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f85f24a1680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f85f24a1e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f85f24a1e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f85f249f260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f85f249fa60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f85f249fa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f85f24c5ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f85f24c5ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f85f247e2d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f85f247e2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f85f247e6c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f85f247e6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f85f247d020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f85f247d020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f85f247d3f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f243f4f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f243f4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f240ed70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f240ed70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f85f240b0d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f23bb1f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f23bb1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f85f1b48020" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f85f1b3c0d0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f85f1b207e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7f85f16e0020" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f85f0f62910" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f62910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f85f0f62c80" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f85f0f5be00" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f85f0f5be00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f85f0f58180" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f85f0f32a50" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f85f0f32a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f85f0f32dd0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f85f0a2a8b0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f85f0a235d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f85f0a060d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f85f09aede0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f85f09aede0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f85f09ab1c0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f85f2ad8af0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f2ad8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ad8e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f85f2ad9640" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f85f2ad9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f85f2ad99c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2adbab0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2adbab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2adbe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f85f2ad2b10" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f85f2ad2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ad1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2ad5cd0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2ad5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ad20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f85f2ad2430" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f85f2ad2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ad27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f85f2ad1380" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f85f2ad1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ad1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2acb020" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2acb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2acb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f85f2ad3390" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f85f2ad3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ad3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f85f2aaa850" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f85f2aaa850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f85f2ab07f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f85f2aaad60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f85f2ab0020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f85f2ab01b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f85f2aaabd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f85f2ab0340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f85f2ab04d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f85f2ab0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2ab1280" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2ab1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2ab1600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f85f2a9a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f85f2a9a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f85f2a99660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f85f2a9abe0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f85f2a9ad70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f85f2a99020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f85f2a9aa50"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f85f2a991b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f85f2a99340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f85f2a994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f85f2a999a0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f85f2a999a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f85f2a99d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2a9a020" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2a9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2a9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f85f2a56730" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f85f2a56730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a56ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a56c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a56dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a55020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a551b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a55340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a554d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a55660"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f85f2a440c0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f85f2a440c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a44440"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a445d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a44760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a448f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a44a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a44c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a44da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a43020"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f85f2a4d890" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f85f2a4d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a4dc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a4dda0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a4c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a4c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a4c340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f85f2a31a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f85f2a31a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a31da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a30020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a301b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a30340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a304d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a30660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f85f2a54c10" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f85f2a54c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a53020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a531b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a53340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a534d0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f85f2a38020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f85f2a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a383a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a38530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a386c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a38850"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f85f2a2ea20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f85f2a2ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a2eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a2d020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a2d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a2d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a2d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a2d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f85f2a3f5a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f85f2a3f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a3f920"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a3fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a3fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a3fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a3e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a3e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a3e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a3e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f85f2a58d60" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f85f2a58d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a66180"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a66310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a664a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a66630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a667c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a66950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a66ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a66c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a66e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f85f2a34a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f85f2a34a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a34da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a33020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a331b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a33340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a334d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a33660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f85f2a3a3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f85f2a3a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a3a760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a3a8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a3aa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a3ac10"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a3ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f85f2a435a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f85f2a435a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a43a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a43bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a43d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a42020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a421b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a42340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a424d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a42660"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f85f2a4c890" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f85f2a4c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a4cc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a4cda0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a46020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a461b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a46340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f85f2a30a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f85f2a30a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a30da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a2f020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a2f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a2f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a2f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f85f2a42be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f85f2a42be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a41020"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a411b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a41340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a414d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a41660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a417f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a41980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a41b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a41ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f85f2a53a20" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f85f2a53a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a53da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a4e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a4e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a4e340"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f85f2a5f1b0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f85f2a5f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2a5f530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2a5f6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a5f850"/>
        <function-ref name="get" scoped="" ref="0x7f85f2a5f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a5fb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a5fd00"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2a67020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a671b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2a67340"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2a674d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2a67660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f85f2a38da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f85f2a38da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a37180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a37310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a374a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a37630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a377c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f85f2a5e220" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f85f2a5e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a5e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a5e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a5e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a5ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a5ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a5ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a56020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a561b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f85f2a3ea50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f85f2a3ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a3edd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a3d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a3d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a3d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a3d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a3d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a3d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a3d980"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a3db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f85f2a488d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f85f2a488d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a48c50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a48de0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a4d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a4d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a4d340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a4d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f85f2a33a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f85f2a33a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a33da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a31020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a311b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a31340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a314d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f85f2a50e60" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f85f2a50e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a54210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a543a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a54530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a546c0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a54850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f85f2a391f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f85f2a391f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a39570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a39700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a39890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a39a20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a39bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f85f2a2fa20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f85f2a2fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a2fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a2e020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a2e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a2e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a2e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a2e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f85f2a400c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f85f2a400c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a40440"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a405d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a40760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a408f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a40a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a40c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a40da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a3f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f85f2a46850" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f85f2a46850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2a46bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2a46d60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a45020"/>
        <function-ref name="get" scoped="" ref="0x7f85f2a451b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a45340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a454d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2a45660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a457f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2a45980"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2a45b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2a45ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f85f2a37b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f85f2a37b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a36020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a361b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a36340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a364d0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f85f2a35a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f85f2a35a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a35da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2a34020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2a341b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2a34340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2a344d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2a34660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f85f2a36a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f85f2a36a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a35020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a351b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a35340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a354d0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f85f2a3b570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f85f2a3b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2a3b8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2a3ba80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2a3bc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2a3bda0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2a3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f85f2a3c020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f85f2a3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2a3c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2a3c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2a3c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2a3c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2a3c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2a3cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2a3cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2a3b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2a3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f85f29f4aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f85f29f4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29f4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f85f29f4450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f85f29f4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29f47d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f85f29f3120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f85f29f3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29f34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f85f29f5d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f29f5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29f4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f29f6540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f29f6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f29f68c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f29f6a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f29f6be0"/>
        <function-ref name="get" scoped="" ref="0x7f85f29f6d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f29f5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29f51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f29f5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29f54d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f29f5660"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f29f57f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f29f5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f85f29ed940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f85f29ed940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29edcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f85f29ed2f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f85f29ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29ed670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f85f29ec020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f85f29ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f85f29eebf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f29eebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f29ef3e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f29ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f29ef760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f29ef8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f29efa80"/>
        <function-ref name="get" scoped="" ref="0x7f85f29efc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f29efda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29ee020"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f29ee1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29ee340"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f29ee4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f29ee660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f29ee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f29a1a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f29a1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29a1e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f29a0020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f29a01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29a0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29a04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f29a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f29e89d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f29e89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f29e8d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f29a2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f29a21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f29a2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f29a24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f29a2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f29a27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f29a2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f29a2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f299e020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f299e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f299e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f29a2de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f29a2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29a1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f29a1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f29a14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f29a1630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f29a17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f29a0930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f29a0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f29a0cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f29a0e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f299f020"/>
        <function-ref name="get" scoped="" ref="0x7f85f299f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f299f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f299f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f299f660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f299f7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f299f980"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f299fb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f299fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f2998160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f2998160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29984e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2998670"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2998800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2998990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2998b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2998cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f299a020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f299a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f299a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f299a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f299a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f299a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f299a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f299ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f299ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2999020"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f29991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f29967a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f29967a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2996b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f2999480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f2999480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2999800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2999990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2999b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2999cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2999e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2997020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2997020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f29973a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2997530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f29976c0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2997850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f29979e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2997b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2997d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2996020"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f29961b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2996340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f29964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f29917a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f29917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2991b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2991cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2991e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2990020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29901b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2990340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f29936d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f29936d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2993a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2993be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2993d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2992020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f29921b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2992340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f29924d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2992660"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f29927f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f298fc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f298fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f298d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f2992ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f2992ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2992e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2991020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f29911b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2991340"/>
        <function-ref name="fired" scoped="" ref="0x7f85f29914d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2990610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2990610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2990990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2990b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2990cb0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2990e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f298f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f298f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f298f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f298f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f298f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f298f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f298f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f2989cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f2989cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29880a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2988230"/>
        <function-ref name="captured" scoped="" ref="0x7f85f29883c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2988550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29886e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2988870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f298bb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f298bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f298a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f298a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f298a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f298a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f298a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f298a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f298a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f298ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f298aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f29862f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f29862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2986670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f2989020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f2989020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29893a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2989530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f29896c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2989850"/>
        <function-ref name="fired" scoped="" ref="0x7f85f29899e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2988b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2988b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2987020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f29871b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2987340"/>
        <function-ref name="get" scoped="" ref="0x7f85f29874d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2987660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29877f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2987980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2987b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2987ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2987e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2986020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f29812f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f29812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2981670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2981800"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2981990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2981b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2981cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2981e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f2983220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f2983220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f29835a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2983730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f29838c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2983a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2983be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2983d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2982020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f29821b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2982340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f297f7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f297f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f297fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f2982610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f2982610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2982990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2982b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2982cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2982e40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2981020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2980160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2980160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f29804e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2980670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2980800"/>
        <function-ref name="get" scoped="" ref="0x7f85f2980990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2980b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2980cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2980e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f297f020"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f297f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f297f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f297f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f29797a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f29797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2979b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2979cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2979e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2978020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29781b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2978340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f297b6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f297b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f297ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f297bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f297bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f297a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f297a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f297a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f297a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f297a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f297a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f2977c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f2977c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2976020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f297aac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f297aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f297ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2979020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f29791b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2979340"/>
        <function-ref name="fired" scoped="" ref="0x7f85f29794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2978610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2978610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2978990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2978b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2978cb0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2978e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2977020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29771b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2977340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29774d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2977660"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f29777f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2977980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f2972cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f2972cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29710a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2971230"/>
        <function-ref name="captured" scoped="" ref="0x7f85f29713c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2971550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29716e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2971870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f2974b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f2974b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2973020"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f29731b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2973340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f29734d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2973660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f29737f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2973980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2973b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2973ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f296f2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f296f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f296f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f2972020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f2972020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29723a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2972530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f29726c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2972850"/>
        <function-ref name="fired" scoped="" ref="0x7f85f29729e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2971b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2971b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2970020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f29701b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2970340"/>
        <function-ref name="get" scoped="" ref="0x7f85f29704d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2970660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29707f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2970980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2970b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2970ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2970e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f296f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f29692f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f29692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2969670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2969800"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2969990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2969b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2969cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2969e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f296c220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f296c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f296c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f296c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f296c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f296ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f296cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f296cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f296a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f296a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f296a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f29677a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f29677a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2967b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f296a610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f296a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f296a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f296ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f296acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f296ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2969020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2968160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2968160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f29684e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2968670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2968800"/>
        <function-ref name="get" scoped="" ref="0x7f85f2968990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2968b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2968cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2968e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2967020"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f29671b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2967340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f29674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f29627a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f29627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2962b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2962cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f2962e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2961020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29611b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2961340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f29646d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f29646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2964a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2964be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2964d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2963020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f29631b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2963340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f29634d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f2963660"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f29637f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f2960c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f2960c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f295f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f2963ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f2963ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2963e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f2962020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f29621b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f2962340"/>
        <function-ref name="fired" scoped="" ref="0x7f85f29624d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2961610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2961610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2961990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f2961b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2961cb0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2961e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2960020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29601b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2960340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29604d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2960660"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f29607f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2960980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f295acb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f295acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f29590a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f2959230"/>
        <function-ref name="captured" scoped="" ref="0x7f85f29593c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2959550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f29596e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f2959870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f85f295db30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f85f295db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f295b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f295b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f295b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f295b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f295b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f295b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f295b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f295bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f295bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f85f29572f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f85f29572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2957670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f85f295a020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f85f295a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f295a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f295a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f295a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f295a850"/>
        <function-ref name="fired" scoped="" ref="0x7f85f295a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2959b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2959b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2958020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f29581b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2958340"/>
        <function-ref name="get" scoped="" ref="0x7f85f29584d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2958660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f29587f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2958980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2958b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2958ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f2958e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2957020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f85f2951240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f85f2951240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29515c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f85f2955a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f85f2955a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2955e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f85f2952260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f85f2952260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f29525e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f85f29529f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f85f29529f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2952d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f85f2c514c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f85f2c514c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f85f2c51840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f85f2f663b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f85f2f663b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f85f2f66730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f85f2f668c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f85f2f66a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f85f2d8dbc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f85f2d8dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f85f2ec9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f85f2ab2b40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f85f2ab2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f85f291ab10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f85f291a1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f85f291a340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f85f291a4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f85f291a020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f85f291a660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f85f291a7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f85f291a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f85f290edc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f85f290edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f290d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f85f291b590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f85f291b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f85f291b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f85f290e6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f85f290e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f290ea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f85f291bc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f85f291bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f290e020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f85f290e1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f85f290e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f85f303e410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f85f303e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f303e790"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f303e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f85f2fcf3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f85f2fcf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2fcf720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f85f2fcf8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f85f2fcfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f85f2b77040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f85f2b77040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f2b773c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f2b77550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f85f2b71490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f85f2b71490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f85f2b71810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f85f2b719a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f85f2b71b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f85f2b79140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f85f2b79140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2b794c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f85f2b79650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f85f2b797e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f85f28809f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f85f28809f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f85f2880d70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f85f2882020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f85f28821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f85f28798b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f28798b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f2879c30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f2879dc0"/>
        <function-ref name="start" scoped="" ref="0x7f85f287e020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f287e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f85f28b6750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f85f28b6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f85f28b6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f85f27f77a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f27f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f27f7b20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f27f7cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f27f7e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f280e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f280e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f85f28005a0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85f28005a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2800a20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f2800bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f2800d40"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f284e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f284e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f85f2810b50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f85f2810b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f85f2877020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f85f28771b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f85f2877340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f85f281ab60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f281ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f2871020"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f28711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7f85f2872a20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7f85f2872a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f85f2872da0"/>
        <function-ref name="bind" scoped="" ref="0x7f85f287c020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f85f287c1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f85f287c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f85f27d2020" loc="224:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f85f27d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f27d23a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f27d2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f85f287dd90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f85f287dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f2881180"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2881310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7f85f2897820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7f85f2897820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2895cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f28a1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f28950d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f28a1c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f2894660"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f28941e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f28a1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f28b5480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f28956e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f28b5950"/>
        <function-ref name="stop" scoped="" ref="0x7f85f28b5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f85f280c130" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f280c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f280c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f28a20d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f28a20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f28a2450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f28a25e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f28a2770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f28a2900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f28a2a90"/>
        <function-ref name="get" scoped="" ref="0x7f85f28a2c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f28a2db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f28b64d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f28b6020"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f28b61b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f28b6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f85f28836b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f85f28836b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f85f2883a30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f288db10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f85f288dca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f85f288d020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f288d1b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f85f288d340"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f288d4d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f85f288d660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f85f2883d50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f85f288d7f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f85f288d980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f85f2883bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f85f2894c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2894c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f288f170"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2892720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f2890510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f2890090"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f288fa70"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f288f5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2892ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f28938a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2890b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f2893d70"/>
        <function-ref name="stop" scoped="" ref="0x7f85f28922a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f85f27c1190" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f27c1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f27c1510"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f27c16a0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f27c1830"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f27c19c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f27c1b50"/>
        <function-ref name="get" scoped="" ref="0x7f85f27c1ce0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f27c1e70"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f27c04e0"/>
        <function-ref name="set" scoped="" ref="0x7f85f27c0030"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f27c01c0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f27c0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f85f27b9060" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f85f27b9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27b93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f27b9570"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27b9700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27b9890"/>
        <function-ref name="get" scoped="" ref="0x7f85f27b9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27b9bb0"/>
        <function-ref name="set" scoped="" ref="0x7f85f27b9d40"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f27bc470" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f27bc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f27bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f85f27b8340" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f85f27b8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27b86c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f27b8850"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27b89e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27b8b70"/>
        <function-ref name="get" scoped="" ref="0x7f85f27b8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27b3020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27b31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f85f27bca70" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f27bca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f27bcdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f27bb020"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f27bb1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f27bb340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f27bb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f27bb660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f27bb7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f27bbe30"/>
        <function-ref name="set" scoped="" ref="0x7f85f27bb980"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f27bbb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f27bbca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f85f27b3660" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f85f27b3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27b39e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f27b3b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27b3d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27b2020"/>
        <function-ref name="get" scoped="" ref="0x7f85f27b21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27b2340"/>
        <function-ref name="set" scoped="" ref="0x7f85f27b24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f85f27bdae0" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f85f27bdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27bde60"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2797020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2797340"/>
        <function-ref name="get" scoped="" ref="0x7f85f27974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2797660"/>
        <function-ref name="set" scoped="" ref="0x7f85f27977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2797980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f85f2797ce0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f85f2797ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2796230"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2796550"/>
        <function-ref name="get" scoped="" ref="0x7f85f27966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2796870"/>
        <function-ref name="set" scoped="" ref="0x7f85f2796a00"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2796b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f85f27942e0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f27942e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2794660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f85f2795020" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f85f2795020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2795530"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27956c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2795850"/>
        <function-ref name="get" scoped="" ref="0x7f85f27959e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2795b70"/>
        <function-ref name="set" scoped="" ref="0x7f85f2795d00"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2794020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f85f277e810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f85f277e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f277eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f277ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f277d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f277d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f277d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f277d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f277d660"/>
        <function-ref name="get" scoped="" ref="0x7f85f277d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f277d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f277db10"/>
        <function-ref name="set" scoped="" ref="0x7f85f277dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f277de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f277c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f277c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f277c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f85f276a810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f85f276a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f276ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f276ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2769020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2769340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2769660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27697f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2769980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2769b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2769ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2769e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2768020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27682b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2768440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f85f2720ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f85f2720ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f271f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f271f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f271f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f271f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f271f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f271f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f271fa00"/>
        <function-ref name="get" scoped="" ref="0x7f85f271fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f271fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f271e020"/>
        <function-ref name="set" scoped="" ref="0x7f85f271e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f271e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f271e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f271e760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f271e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f85f26fccb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f85f26fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26fa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26fa230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26fa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26fa550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26fa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26fa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26faa00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26fab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26fad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26f9020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26f9760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f85f271ecc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f85f271ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f271d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f271d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f271d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f271d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f271d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f271d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f271da00"/>
        <function-ref name="get" scoped="" ref="0x7f85f271db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f271dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f271c020"/>
        <function-ref name="set" scoped="" ref="0x7f85f271c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f271c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f271c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f271c760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f271c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f85f2766810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f85f2766810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2766b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2766d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2765020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2765340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2765660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27657f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2765980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2765b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2765ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2765e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2764020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27642b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2764440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f85f27519a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f85f27519a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2751d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2750020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2750340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27504d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2750660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27507f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2750980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2750b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2750ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2750e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f274f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f274f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f274f440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f274f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f85f273d9a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f85f273d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f273dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f273c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f273c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f273c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f273c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f273c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f273c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f273c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f273cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f273cca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f273ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f273b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f273b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f273b440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f273b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f85f272d9a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f85f272d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f272dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f272c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f272c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f272c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f272c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f272c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f272c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f272c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f272cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f272cca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f272ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f272b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f272b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f272b440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f272b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f85f2718cc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f85f2718cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27170a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2717230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27173c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2717550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27176e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2717870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2717a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2717b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2717d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2716020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2716340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2716760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f85f2708cb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f85f2708cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27070a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2707230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27073c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2707550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27076e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2707870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2707a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2707b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2707d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2706020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2706340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2706760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f85f26f3cc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f85f26f3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26f20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26f2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26f23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26f2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26f26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26f2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26f2a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26f2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26f2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26f1020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26f11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26f1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26f14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26f1760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26f18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f85f2778810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f85f2778810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2778b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2778d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2777020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2777340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2777660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2777980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2777b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2777ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2777e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2776020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27762b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2776440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f85f2716cc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f85f2716cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2715230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27153c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2715550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2715870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2715a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2715b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2715d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2714020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2714340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2714760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f85f2774810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f85f2774810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2774b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2774d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2773020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2773340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2773660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27737f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2773980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2773b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2773ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2773e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2772020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27722b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2772440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f85f2760810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f85f2760810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2760b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2760d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f275f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f275f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f275f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f275f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f275f660"/>
        <function-ref name="get" scoped="" ref="0x7f85f275f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f275f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f275fb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f275fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f275fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f275e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f275e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f275e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f85f274b9a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f85f274b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f274bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f274a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f274a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f274a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f274a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f274a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f274a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f274a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f274ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f274aca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f274ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2749020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27491b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2749440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27495d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f85f27379a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f85f27379a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2737d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2736020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27361b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2736340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27364d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2736660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27367f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2736980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2736b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2736ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2736e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2735020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27351b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2735440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27355d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f85f27269a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f85f27269a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2726d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2725020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2725340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2725660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27257f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2725980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2725b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2725ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2725e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2724020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2724440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f85f2782810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f85f2782810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2782b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2782d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2781020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2781340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2781660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27817f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2781980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2781b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2781ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2781e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2780020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27802b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2780440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f85f276e810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f85f276e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f276ec90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f276ee20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f276d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f276d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f276d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f276d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f276d660"/>
        <function-ref name="get" scoped="" ref="0x7f85f276d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f276d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f276db10"/>
        <function-ref name="set" scoped="" ref="0x7f85f276dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f276de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f276c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f276c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f276c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f85f275a810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f85f275a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f275ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f275ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2758020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2758340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2758660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27587f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2758980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2758b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2758ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2758e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2757020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27572b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2757440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f85f2722cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f85f2722cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2721230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27213c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2721550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27216e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2721870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2721a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2721b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2721d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2720020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27201b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2720340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27204d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2720760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f85f2702cb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f85f2702cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27010a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2701230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27013c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2701550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27016e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2701870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2701a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2701b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2701d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2700020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2700340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2700760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f85f26f5cb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f85f26f5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26f40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26f4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26f43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26f4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26f46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26f4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26f4a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26f4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26f4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26f3020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26f3760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f85f270ecc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f85f270ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f270d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f270d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f270d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f270d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f270d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f270d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f270da00"/>
        <function-ref name="get" scoped="" ref="0x7f85f270db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f270dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f270c020"/>
        <function-ref name="set" scoped="" ref="0x7f85f270c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f270c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f270c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f270c760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f270c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f85f2755810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f85f2755810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2755d90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2754020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2754340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27544d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2754660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27547f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2754980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2754b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2754ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2754e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2753020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27531b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2753440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27535d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f85f27419a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f85f27419a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2741d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2740020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27401b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2740340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27404d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2740660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27407f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2740980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2740b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2740ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2740e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f273f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f273f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f273f440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f273f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f85f27319a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f85f27319a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2731d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2730020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27301b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2730340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27304d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2730660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27307f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2730980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2730b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2730ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2730e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f272f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f272f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f272f440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f272f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f85f2700cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f85f2700cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26ff0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26ff230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26ff3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26ff550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26ff6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26ff870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26ffa00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26ffb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26ffd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26fe020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26fe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26fe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26fe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26fe760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26fe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f85f2714cb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f85f2714cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27130a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2713230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27133c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2713550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27136e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2713870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2713a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2713b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2713d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2712020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2712340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2712760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27128f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f85f277c810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f85f277c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f277cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f277cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f277b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f277b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f277b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f277b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f277b660"/>
        <function-ref name="get" scoped="" ref="0x7f85f277b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f277b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f277bb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f277bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f277be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f277a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f277a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f277a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f85f2768810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f85f2768810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2768b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2768d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2767020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2767340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2767660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27677f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2767980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2767b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2767ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2767e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2766020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27662b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2766440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f85f27359a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f85f27359a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2735d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2734020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27341b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2734340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27344d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2734660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27347f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2734980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2734b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2734ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2734e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2733020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27331b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2733440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27335d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f85f2764810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f85f2764810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2764b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2764d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2763020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2763340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2763660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27637f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2763980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2763b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2763ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2763e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2762020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27622b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2762440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f85f274f9a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f85f274f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f274fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f274e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f274e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f274e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f274e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f274e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f274e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f274e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f274eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f274eca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f274ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f274d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f274d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f274d440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f274d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f85f273b9a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f85f273b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f273bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f273a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f273a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f273a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f273a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f273a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f273a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f273a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f273ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f273aca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f273ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2739020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27391b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2739440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27395d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f85f272b9a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f85f272b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f272bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2729020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2729340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2729660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27297f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2729980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2729b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2729ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2729e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2728020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27281b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2728440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27285d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f85f2710cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f85f2710cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f270f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f270f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f270f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f270f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f270f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f270f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f270fa00"/>
        <function-ref name="get" scoped="" ref="0x7f85f270fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f270fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f270e020"/>
        <function-ref name="set" scoped="" ref="0x7f85f270e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f270e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f270e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f270e760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f270e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f85f2785870" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f85f2785870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2785bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2785d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f278f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f278f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f278f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f278f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f278f660"/>
        <function-ref name="get" scoped="" ref="0x7f85f278f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f278f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f278fb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f278fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f278fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f278e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f278e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f278e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f85f2772810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f85f2772810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2772b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2772d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2771020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2771340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2771660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27717f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2771980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2771b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2771ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2771e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2770020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27702b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2770440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f85f275e810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f85f275e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f275eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f275ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f275d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f275d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f275d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f275d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f275d660"/>
        <function-ref name="get" scoped="" ref="0x7f85f275d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f275d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f275db10"/>
        <function-ref name="set" scoped="" ref="0x7f85f275dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f275de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f275c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f275c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f275c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f85f27499a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f85f27499a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2749d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2748020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2748340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27484d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2748660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27487f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2748980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2748b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2748ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2748e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2747020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27471b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2747440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27475d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f85f270ccc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f85f270ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f270b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f270b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f270b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f270b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f270b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f270b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f270ba00"/>
        <function-ref name="get" scoped="" ref="0x7f85f270bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f270bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f270a020"/>
        <function-ref name="set" scoped="" ref="0x7f85f270a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f270a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f270a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f270a760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f270a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f85f2706cb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f85f2706cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27050a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2705230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27053c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2705550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27056e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2705870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2705a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2705b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2705d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2704020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27041b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2704340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27044d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2704760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27048f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f85f26f9cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f85f26f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26f8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26f83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26f8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26f86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26f8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26f8a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26f8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26f8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26f7020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26f7760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f85f27459a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f85f27459a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2745d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2744020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2744340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27444d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2744660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27447f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2744980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2744b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2744ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2744e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2743020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27431b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2743440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f85f270acc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f85f270acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2709230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27093c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2709550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27096e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2709870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2709a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2709b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2709d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2708020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2708340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2708760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f85f2780810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f85f2780810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2780b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2780d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f277f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f277f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f277f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f277f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f277f660"/>
        <function-ref name="get" scoped="" ref="0x7f85f277f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f277f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f277fb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f277fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f277fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f277e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f277e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f277e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f85f276c810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f85f276c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f276cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f276cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f276b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f276b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f276b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f276b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f276b660"/>
        <function-ref name="get" scoped="" ref="0x7f85f276b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f276b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f276bb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f276bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f276be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f276a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f276a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f276a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f85f2757810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f85f2757810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2757b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2757d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2756020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2756340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2756660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2756980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2756b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2756ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2756e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2755020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27552b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2755440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f85f2712cc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f85f2712cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27110a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2711230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27113c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2711550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27116e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2711870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2711a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2711b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2711d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2710020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2710340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2710760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f85f26fecb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f85f26fecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26fd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26fd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26fd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26fd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26fd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26fd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26fda00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26fdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26fdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26fc020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26fc760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f85f27539a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f85f27539a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2753d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2752020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2752340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27524d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2752660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27527f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2752980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2752b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2752ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2752e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2751020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27511b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2751440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27515d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f85f273f9a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f85f273f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f273fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f273e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f273e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f273e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f273e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f273e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f273e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f273e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f273eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f273eca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f273ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f273d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f273d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f273d440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f273d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f85f272f9a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f85f272f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f272fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f272e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f272e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f272e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f272e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f272e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f272e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f272e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f272eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f272eca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f272ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f272d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f272d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f272d440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f272d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f85f277a810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f85f277a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f277ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f277ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2779020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2779340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2779660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2779980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2779b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2779ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2779e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2778020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27782b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2778440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f85f27339a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f85f27339a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2733d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2732020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2732340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27324d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2732660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27327f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2732980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2732b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2732ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2732e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2731020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27311b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2731440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27315d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f85f2776810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f85f2776810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2776b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2776d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2775020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2775340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2775660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27757f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2775980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2775b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2775ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2775e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2774020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27742b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2774440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f85f2762810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f85f2762810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2762b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2762d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2761020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2761340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2761660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27617f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2761980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2761b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2761ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2761e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2760020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27602b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2760440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f85f274d9a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f85f274d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f274dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f274c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f274c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f274c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f274c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f274c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f274c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f274c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f274cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f274cca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f274ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f274b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f274b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f274b440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f274b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f85f27399a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f85f27399a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2739d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2738020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27381b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2738340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27384d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2738660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27387f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2738980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2738b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2738ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2738e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2737020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27371b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2737440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27375d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f85f27289a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f85f27289a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2728d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2727020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2727340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27274d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2727660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27277f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2727980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2727b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2727ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2727e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2726020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2726440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f85f278e810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f85f278e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f278eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f278ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2783020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f27831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2783340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f27834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2783660"/>
        <function-ref name="get" scoped="" ref="0x7f85f27837f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2783980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2783b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2783ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2783e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2782020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f27822b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2782440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f85f2770810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f85f2770810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2770b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2770d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f276f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f276f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f276f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f276f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f276f660"/>
        <function-ref name="get" scoped="" ref="0x7f85f276f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f276f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f276fb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f276fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f276fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f276e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f276e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f276e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f85f275c810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f85f275c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f275cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f275cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f275b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f275b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f275b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f275b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f275b660"/>
        <function-ref name="get" scoped="" ref="0x7f85f275b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f275b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f275bb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f275bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f275be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f275a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f275a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f275a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f85f27479a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f85f27479a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2747d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2746020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2746340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27464d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2746660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27467f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2746980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2746b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2746ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2746e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2745020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27451b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2745440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27455d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f85f271aca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f85f271aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2719230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27193c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2719550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2719870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2719a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2719b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2719d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2718020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2718340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2718760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f85f2704cb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f85f2704cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2703230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27033c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2703550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27036e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2703870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2703a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f2703b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2703d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2702020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2702340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2702760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f85f271ccc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f85f271ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f271b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f271b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f271b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f271b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f271b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f271b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f271ba00"/>
        <function-ref name="get" scoped="" ref="0x7f85f271bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f271bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f271a020"/>
        <function-ref name="set" scoped="" ref="0x7f85f271a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f271a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f271a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f271a760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f271a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f85f27439a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f85f27439a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2743d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2742020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2742340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f27424d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2742660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f27427f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2742980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2742b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2742ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2742e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2741020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27411b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2741440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27415d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f85f26f7cb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f85f26f7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26f6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26f63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26f6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26f66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26f6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26f6a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26f6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26f6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26f5020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26f5760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f85f26f1cc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f85f26f1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26f00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26f0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26f03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26f0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26f06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26f0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26f0a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f26f0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26f0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26ef020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26ef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26ef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26ef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26ef760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26ef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f85f27249f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f85f27249f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f27231c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2723350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f27234e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2723670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2723800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2723990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2723b20"/>
        <function-ref name="get" scoped="" ref="0x7f85f2723cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2723e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2722020"/>
        <function-ref name="set" scoped="" ref="0x7f85f27221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2722340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f27224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2722760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f27228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26ecd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26ecd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26c50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26c5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26c5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26c5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26c5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26c58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26c5a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f26c5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26c5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26c4020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26c4760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26c1740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26c1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26c1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26c1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26c1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26c0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26c01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26c0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26c04d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f26c0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26c07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26c0980"/>
        <function-ref name="set" scoped="" ref="0x7f85f26c0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26c0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26c0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26bf120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26bc100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26bc480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26bc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26bc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26bc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26bcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26bcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26bcde0"/>
        <function-ref name="get" scoped="" ref="0x7f85f26bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26bb340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26bba80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26b8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26b8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26b70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26b7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26b7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26b7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26b7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26b78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26b7a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f26b7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26b7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26b6020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26b61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26b6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26b64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26b6760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26b3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26b3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26b3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26b3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26b3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26b2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26b21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26b2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26b24d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f26b2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26b27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26b2980"/>
        <function-ref name="set" scoped="" ref="0x7f85f26b2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26b2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26b2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26b1120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26ad100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26ad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26ad480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26ad610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26ad7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26ad930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26adac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26adc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26adde0"/>
        <function-ref name="get" scoped="" ref="0x7f85f26ac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26ac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26ac340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26ac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26ac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26ac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26aca80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26acc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26a9d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26a9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26a80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26a8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26a8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26a8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26a8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26a88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26a8a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f26a8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26a8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26a7020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26a7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26a74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26a7760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f26a4740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f26a4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26a4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26a4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26a4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26a31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26a3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26a34d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f26a3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26a37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26a3980"/>
        <function-ref name="set" scoped="" ref="0x7f85f26a3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26a3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26a3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26a2120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f269f100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f269f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f269f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f269f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f269f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f269f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f269fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f269fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f269fde0"/>
        <function-ref name="get" scoped="" ref="0x7f85f269e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f269e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f269e340"/>
        <function-ref name="set" scoped="" ref="0x7f85f269e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f269e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f269e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f269ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f269ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f269bd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f269bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f269a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f269a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f269a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f269a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f269a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f269a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f269aa40"/>
        <function-ref name="get" scoped="" ref="0x7f85f269abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f269ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2699020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2699340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2699760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2696740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2696740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2696ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2696c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2696de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2695020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26951b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2695340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26954d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2695660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26957f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2695980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2695b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2695ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2695e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2694120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2691100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2691100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2691480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2691610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26917a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2691930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2691ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2691c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2691de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2690020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2690340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2690660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2690a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2690c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f268dd80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f268dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f268b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f268b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f268b4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f268b630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f268b7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f268b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f268bae0"/>
        <function-ref name="get" scoped="" ref="0x7f85f268bc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f268be00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f268a020"/>
        <function-ref name="set" scoped="" ref="0x7f85f268a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f268a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f268a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f268a760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f268a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2687740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2687740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2687ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2687c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2687de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2686020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2686340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26864d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2686660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26867f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2686980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2686b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2686ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2686e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2685120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2682100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2682100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2682480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2682610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26827a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2682930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2682ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2682c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2682de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2681020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2681340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2681660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2681a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2681c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f267ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f267ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f267d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f267d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f267d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f267d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f267d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f267d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f267da40"/>
        <function-ref name="get" scoped="" ref="0x7f85f267dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f267dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f267c020"/>
        <function-ref name="set" scoped="" ref="0x7f85f267c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f267c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f267c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f267c760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f267c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2679740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2679740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2679ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2679c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2679de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2678020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2678340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26784d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2678660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2678980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2678b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2678ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2678e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2677120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2674100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2674100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2674480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2674610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26747a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2674930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2674ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2674c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2674de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2673020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2673340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2673660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2673a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2673c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2670d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2670d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f266f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f266f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f266f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f266f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f266f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f266f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f266fa40"/>
        <function-ref name="get" scoped="" ref="0x7f85f266fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f266fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f266e020"/>
        <function-ref name="set" scoped="" ref="0x7f85f266e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f266e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f266e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f266e760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f266e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f266b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f266b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f266bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f266bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f266bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f266a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f266a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f266a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f266a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f266a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f266a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f266a980"/>
        <function-ref name="set" scoped="" ref="0x7f85f266ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f266aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f266ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2669120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2666100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2666100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2666480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2666610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26667a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2666930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2666ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2666c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2666de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2664020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2664340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2664660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2664a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2664c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2661d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2661d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26600e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2660270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2660400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2660590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2660720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26608b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2660a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f2660bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2660d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f265f020"/>
        <function-ref name="set" scoped="" ref="0x7f85f265f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f265f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f265f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f265f760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f265f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f265c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f265c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f265cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f265cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f265cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f265b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f265b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f265b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f265b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f265b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f265b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f265b980"/>
        <function-ref name="set" scoped="" ref="0x7f85f265bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f265bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f265be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f265a120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f265a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2657100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2657100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2657480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2657610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26577a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2657930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2657ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2657c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2657de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2656020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2656340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2656660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2656a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2656c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2653e60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2653e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2652210"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f26523a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2652530"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f26526c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2652850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26529e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2652b70"/>
        <function-ref name="get" scoped="" ref="0x7f85f2652d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2651020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f26511b0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2651340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f26514d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2651660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f26518f0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2651a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f264e9f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f264e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f264ed70"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f264d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f264d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f264d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f264d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f264d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f264d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f264d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f264db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f264dca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f264de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f264c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f264c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f264c440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f264c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2649460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2649460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26497e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2649970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2649b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2649c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2649e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2648020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26481b0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2648340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26484d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2648660"/>
        <function-ref name="set" scoped="" ref="0x7f85f26487f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2648980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2648b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2648da0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2647020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2645e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2645e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26441c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2644350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26444e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2644670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2644800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2644990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2644b20"/>
        <function-ref name="get" scoped="" ref="0x7f85f2644cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2644e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2643020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2643340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2643760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f263f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f263f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f263fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f263fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f263fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f263e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f263e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f263e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f263e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f263e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f263e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f263e980"/>
        <function-ref name="set" scoped="" ref="0x7f85f263eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f263eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f263ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f263d120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f263d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f263a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f263a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f263a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f263a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f263a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f263a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f263aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f263ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f263ade0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2639020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2639340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2639660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2639a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2639c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2636d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2636d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26350e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2635270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2635400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2635590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2635720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26358b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2635a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f2635bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2635d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2634020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26341b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2634340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26344d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2634760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2631740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2631740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2631ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2631c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2631de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2630020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2630340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26304d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2630660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26307f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2630980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2630b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2630ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2630e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f262f120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f262f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f262c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f262c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f262c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f262c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f262c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f262c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f262cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f262cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f262cde0"/>
        <function-ref name="get" scoped="" ref="0x7f85f262b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f262b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f262b340"/>
        <function-ref name="set" scoped="" ref="0x7f85f262b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f262b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f262b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f262ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f262bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2628d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2628d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26270e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2627270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2627400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2627590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2627720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26278b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2627a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f2627bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2627d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2626020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2626340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2626760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2623740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2623740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2623ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2623c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2623de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2622020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26221b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2622340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26224d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2622660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26227f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2622980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2622b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2622ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2622e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2621120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f261e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f261e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f261e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f261e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f261e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f261e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f261eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f261ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f261ede0"/>
        <function-ref name="get" scoped="" ref="0x7f85f261c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f261c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f261c340"/>
        <function-ref name="set" scoped="" ref="0x7f85f261c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f261c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f261c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f261ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f261cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2619d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2619d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f26180e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2618270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2618400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2618590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2618720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f26188b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2618a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f2618bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2618d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2617020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2617340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2617760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2614740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2614740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2614ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2614c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2614de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2613020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2613340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26134d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2613660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2613980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2613b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2613ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2613e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2612120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f260f100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f260f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f260f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f260f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f260f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f260f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f260fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f260fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f260fde0"/>
        <function-ref name="get" scoped="" ref="0x7f85f260e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f260e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f260e340"/>
        <function-ref name="set" scoped="" ref="0x7f85f260e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f260e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f260e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f260ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f260ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f260bd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f260bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f260a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f260a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f260a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f260a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f260a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f260a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f260aa40"/>
        <function-ref name="get" scoped="" ref="0x7f85f260abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f260ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2609020"/>
        <function-ref name="set" scoped="" ref="0x7f85f26091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2609340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26094d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2609760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2606740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2606740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2606ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2606c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2606de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2605020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f26051b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2605340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f26054d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2605660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2605980"/>
        <function-ref name="set" scoped="" ref="0x7f85f2605b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2605ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2605e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2604120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f26042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f2601100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f2601100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2601480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2601610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f26017a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2601930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2601ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2601c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2601de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2600020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f26001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2600340"/>
        <function-ref name="set" scoped="" ref="0x7f85f26004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2600660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f26007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2600a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2600c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f25fdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f25fdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25fc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25fc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25fc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25fc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25fc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25fc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25fca40"/>
        <function-ref name="get" scoped="" ref="0x7f85f25fcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f25fcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f25fb020"/>
        <function-ref name="set" scoped="" ref="0x7f85f25fb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f25fb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25fb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25fb760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25fb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f25f8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f25f8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25f8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25f8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25f8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25f61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25f6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25f64d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f25f6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f25f67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f25f6980"/>
        <function-ref name="set" scoped="" ref="0x7f85f25f6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f25f6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25f6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25f5120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f25f2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f25f2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25f2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25f2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25f27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25f2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25f2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25f2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25f2de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f25f1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f25f11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f25f1340"/>
        <function-ref name="set" scoped="" ref="0x7f85f25f14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f25f1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25f17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25f1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25f1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f25eed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f25eed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25ed0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25ed270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25ed400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25ed590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25ed720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25ed8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25eda40"/>
        <function-ref name="get" scoped="" ref="0x7f85f25edbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f25edd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f25ec020"/>
        <function-ref name="set" scoped="" ref="0x7f85f25ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f25ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25ec760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f25e9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f25e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25e9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25e9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25e9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25e8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25e81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25e8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25e84d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f25e8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f25e87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f25e8980"/>
        <function-ref name="set" scoped="" ref="0x7f85f25e8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f25e8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25e8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25e7120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f85f25e4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f85f25e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25e4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25e4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25e47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25e4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25e4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25e4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25e4de0"/>
        <function-ref name="get" scoped="" ref="0x7f85f25e3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f25e31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f25e3340"/>
        <function-ref name="set" scoped="" ref="0x7f85f25e34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f25e3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25e37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25e3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f256c2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f256c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f256c670"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f256c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f256c990"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f256cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f256ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f256ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f256b020"/>
        <function-ref name="get" scoped="" ref="0x7f85f256b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f256b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f256b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f256b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f256b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f256b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f256bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f85f256bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f2586020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f2586020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f25863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2586530"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2586850"/>
        <function-ref name="get" scoped="" ref="0x7f85f25869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2586b70"/>
        <function-ref name="set" scoped="" ref="0x7f85f2586d00"/>
        <function-ref name="clr" scoped="" ref="0x7f85f256c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f2568de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f2568de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2566180"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2566310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f25664a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2566630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25667c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f2566950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2566ae0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2566c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2566e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2565020"/>
        <function-ref name="set" scoped="" ref="0x7f85f25651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2565340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f25654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f2565760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f25658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f2569b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f2569b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2568020"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f25681b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2568340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f25684d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2568660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f25687f0"/>
        <function-ref name="set" scoped="" ref="0x7f85f2568980"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2568b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f2562930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f2562930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2562cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2562e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f2561020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f25611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2561340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f25614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2561660"/>
        <function-ref name="get" scoped="" ref="0x7f85f25617f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f2561980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f2561b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f2561ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f2561e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f2560020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f25602b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2560440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f2563710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f2563710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2563a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2563c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2563db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2562020"/>
        <function-ref name="get" scoped="" ref="0x7f85f25621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2562340"/>
        <function-ref name="set" scoped="" ref="0x7f85f25624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2562660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f2554640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2554640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f23a7c40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f23a81e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f23a7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f23a8ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f23a6590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f23a6110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f23a8660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f23aa390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f23a7630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f23aa860"/>
        <function-ref name="stop" scoped="" ref="0x7f85f23aad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f85f254b610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f85f254b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2547c40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f25491e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f2547020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f2549ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f2546590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f2546110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2549660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f254a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2547630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f254a860"/>
        <function-ref name="stop" scoped="" ref="0x7f85f254ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f85f25411d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f85f25411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f253e630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2540c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f253f9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f253f550"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f253c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f253eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f253f0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f2541dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f253e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f25402e0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f25407b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f85f2538a80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f85f2538a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f253b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2542400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2542400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2542780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f2446020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f2446020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2443870"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2444840"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f2443220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2444d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f2443d30"/>
        <function-ref name="start" scoped="" ref="0x7f85f2446e30"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2444380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2447760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2447760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2447ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f047cce0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f047cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0479670"/>
        <function-ref name="fired" scoped="" ref="0x7f85f047a550"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f0479020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f047aa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f0479b30"/>
        <function-ref name="start" scoped="" ref="0x7f85f047bb60"/>
        <function-ref name="stop" scoped="" ref="0x7f85f047a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f047c490" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f047c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f047c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f85f04635d0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f04635d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f0463950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f0463ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f0463c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f0463e00"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0462020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f85f0466c50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f0466c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f0465020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f04651b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f0465340"/>
        <function-ref name="get" scoped="" ref="0x7f85f04654d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f0465660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f04657f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f0465980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f0465b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f0465ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f0465e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f0464020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f85f04642b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f04642b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f0464630"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f04647c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f0464950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f0464ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f0464c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f0464e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f0463020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f04631b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f0463340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f85f2515ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f2515ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f2514020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f25141b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f2514340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f25144d0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2514660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f85f25194d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f25194d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f2519850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f25199e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2519b70"/>
        <function-ref name="get" scoped="" ref="0x7f85f2519d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2518020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f25181b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f2518340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f25184d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2518660"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f25187f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f2518980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f85f2516280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f2516280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f2516600"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f2516790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f2516920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f2516ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f2516c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f2516dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f2515020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f25151b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f2515340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f85f0459440" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f0459440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f04597c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f0459950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f0459ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f0459c70"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0459e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f85f045c910" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f045c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f045cc90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f045ce20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f045b020"/>
        <function-ref name="get" scoped="" ref="0x7f85f045b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f045b340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f045b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f045b660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f045b7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f045b980"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f045bb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f045bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f045f720" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f045f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f045c020"/>
        <function-ref name="fired" scoped="" ref="0x7f85f045d020"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f045d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f045d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f045c4e0"/>
        <function-ref name="start" scoped="" ref="0x7f85f045e5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f045eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0461e60" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0461e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f045f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f85f045a020" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f045a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f045a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f045a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f045a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f045a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f045a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f045ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f045ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f0459020"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f04591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f85f24c4020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f24c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f24c4e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f24c3800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f24c3340"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f24c3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f85f24bb020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f85f24bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f24bbe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f24b9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f24b9340"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f24b9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f85f24a72c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f24a72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f24a7640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f24a77d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f24a7960"/>
        <function-ref name="get" scoped="" ref="0x7f85f24a7af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f24a7c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f24a7e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f24a6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f24a61b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f24a6340"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f24a64d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f24a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f85f24b60a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f24b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f24a9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f24a99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f24a94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f24a9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f85f2485540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f85f2485540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f24843d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f2484d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f2484890"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2482260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f85f24880f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f24880f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f2486020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f24869a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f24864e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f2486e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f0475140" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f0475140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0473b30"/>
        <function-ref name="fired" scoped="" ref="0x7f85f04749f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f04734e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0473020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f0472020"/>
        <function-ref name="start" scoped="" ref="0x7f85f0474020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0474530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f85f046fb90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f85f046fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f046c4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f046d4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f046de60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f046d9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f046c9a0"/>
        <function-ref name="start" scoped="" ref="0x7f85f046e9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f046d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f85f0472690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f0472690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f04715b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f046f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f0471a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f046f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f85f2411490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f85f2411490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f2411810"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f24119a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f85f24141d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f24141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2412b30"/>
        <function-ref name="fired" scoped="" ref="0x7f85f24139f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f24124e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2412020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f2411020"/>
        <function-ref name="start" scoped="" ref="0x7f85f2413020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2413530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f241acf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f241acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2416220"/>
        <function-ref name="fired" scoped="" ref="0x7f85f24187c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f2417590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f2417110"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f2416b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f24166a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2418c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f2419940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2417ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f2419e10"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2418340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f85f23c0e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f85f23c0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f23bf220"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f23bf3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f85f23c6c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f85f23c6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f23c0110"/>
        <function-ref name="fired" scoped="" ref="0x7f85f23c36a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f23c24a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f23c2020"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f23c0a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f23c0590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f23c3b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f23c4860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f23c2ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f23c4d30"/>
        <function-ref name="stop" scoped="" ref="0x7f85f23c3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f23cb690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f23cb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f23c7cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f23c9260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f23c7090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f23c9ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f23c6680"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f23c61e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f23c9700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f23ca390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f23c76c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f23ca880"/>
        <function-ref name="stop" scoped="" ref="0x7f85f23cad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f85f23bdcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f85f23bdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f23bc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f85f23b2020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f23b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f23b2e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f23b1800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f23b1340"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f23b1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f23a4020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f23a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f23a0630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f23a2a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f23a1920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f23a14a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f239f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f23a0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f23a1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f23a4c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f23a0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f23a2110"/>
        <function-ref name="stop" scoped="" ref="0x7f85f23a25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f85f239a4e0" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f239a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f239a860"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f239a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f85f2397370" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f85f2397370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f239a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f239d4f0" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f239d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f239d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f85f23934e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f23934e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f2393860"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f23939f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f85f2394390" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f85f2394390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2393020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2399a90" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2399a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2399e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7f85f2375e60" loc="72:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7f85f2375e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f85f2383210"/>
        <function-ref name="isRoot" scoped="" ref="0x7f85f23833a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f85f2383530"/>
        <function-ref name="hasParent" scoped="" ref="0x7f85f23836c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f2383850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f85f23839e0"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f2383b70"/>
        <function-ref name="getEtx" scoped="" ref="0x7f85f2383d00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f85f2382020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f85f23821b0"/>
        <function-ref name="isParent" scoped="" ref="0x7f85f2382340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f85f23824d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f2382660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f85f23828f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f85f2374a80" loc="76:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f85f2374a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2374e00"/>
        <function-ref name="recv" scoped="" ref="0x7f85f2373020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f2382bb0" loc="73:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f2382bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f2374020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f23741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f85f23803b0" loc="71:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f85f23803b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2380730"/>
        <function-ref name="recv" scoped="" ref="0x7f85f23808c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7f85f2318720" loc="91:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f2318720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f85f2318aa0"/>
        <function-ref name="initiate" scoped="" ref="0x7f85f2318c30"/>
        <function-ref name="linkResult" scoped="" ref="0x7f85f2318dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f2324a50" loc="89:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f2324a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f2324dd0"/>
        <function-ref name="changed" scoped="" ref="0x7f85f232b020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f232b1b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f232b340"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f232b4d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f232b660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f232b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f85f2332c70" loc="86:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f85f2332c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2334020"/>
        <function-ref name="recv" scoped="" ref="0x7f85f23341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f85f23078a0" loc="93:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f23078a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f85f2316660"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f85f2307db0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f85f2316020"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f85f23161b0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f85f2316340"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f85f2307c20"/>
        <function-ref name="getContext" scoped="" ref="0x7f85f23164d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f85f23105f0" loc="92:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f85f23105f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f85f2310970"/>
        <function-ref name="OCP" scoped="" ref="0x7f85f2310b00"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f85f2310c90"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f2310e20"/>
        <function-ref name="resetRank" scoped="" ref="0x7f85f231c020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f85f231c1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f85f231c340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f85f231c4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f85f231c660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f85f231c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7f85f2339800" loc="80:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f2339800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f85f2339b80"/>
        <function-ref name="isRoot" scoped="" ref="0x7f85f2339d10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f85f2337020"/>
        <function-ref name="hasParent" scoped="" ref="0x7f85f23371b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f2337340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f85f23374d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f2337660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f85f23377f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f85f2337980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f85f2337b10"/>
        <function-ref name="isParent" scoped="" ref="0x7f85f2337ca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f85f2337e30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f2336020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f85f23362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7f85f2332580" loc="83:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7f85f2332580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f2332900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7f85f2333760" loc="88:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7f85f2333760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f85f2333ae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f2331b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f85f2331ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f85f2331020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f23311b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f85f2331340"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f23314d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f85f2331660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f85f2333e00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f85f23317f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f85f2331980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f85f2333c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f85f231d580" loc="90:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f231d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f85f231d900"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f85f231da90"/>
        <function-ref name="delRoute" scoped="" ref="0x7f85f231dc20"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f85f231ddb0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f85f232a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f85f232dcc0" loc="87:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f85f232dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f85f23330a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f85f2333230"/>
        <function-ref name="findTLV" scoped="" ref="0x7f85f23333c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7f85f22bd380" loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7f85f22bd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f22bd800"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f22bd990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f2336570" loc="81:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f2336570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f23368f0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2336a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f85f2336dc0" loc="82:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f85f2336dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2335180"/>
        <function-ref name="recv" scoped="" ref="0x7f85f2335310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f85f222f080" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f85f222f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f85f222f400"/>
        <function-ref name="setRoot" scoped="" ref="0x7f85f222f590"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f85f222f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7f85f222e320" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f85f222e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f85f222e6a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f222d670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f85f222d800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f85f222eb50"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f222ece0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f85f222ee70"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f222d030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f85f222d1c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f85f222e9c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f85f222d350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f85f222d4e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f85f222e830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f222f9e0" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f222f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f222fd60"/>
        <function-ref name="stop" scoped="" ref="0x7f85f222e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f85f2149880" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f85f2149880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f85f2149c00"/>
        <function-ref name="setRoot" scoped="" ref="0x7f85f2149d90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f85f2148020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7f85f2146ab0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7f85f2146ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2146e30"/>
        <function-ref name="recv" scoped="" ref="0x7f85f2145020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7f85f2131a10" loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f2131a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f85f2130020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f85f21301b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f85f2130340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7f85f212eac0" loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7f85f212eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f212ee40"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f212d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7f85f2140730" loc="56:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7f85f2140730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f213cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f213d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f213c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f213dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f213b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f213b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f213d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f213f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f213c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f213f860"/>
        <function-ref name="stop" scoped="" ref="0x7f85f213fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f85f2136e00" loc="58:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f2136e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f21351c0"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f2135350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f85f21453d0" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7f85f21453d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2141870"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2144e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f2142c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f2142780"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f21401e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f2141cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2142300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f2144020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2141260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f21444f0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f21449c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f85f212dad0" loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7f85f212dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f212de50"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f212c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f2132270" loc="60:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f2132270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f21325f0"/>
        <function-ref name="changed" scoped="" ref="0x7f85f2132780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f2132910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f2132aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f2132c30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f2132dc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f2131020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7f85f212c2f0" loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7f85f212c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f212c670"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f212c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f85f2146310" loc="52:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f85f2146310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f2146690"/>
        <function-ref name="recv" scoped="" ref="0x7f85f2146820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f85f212fa40" loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f212fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7f85f212e7f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f85f212e020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f85f212e1b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f85f212e340"/>
        <function-ref name="matchContext" scoped="" ref="0x7f85f212e4d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7f85f212fdc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f85f212e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f85f21355e0" loc="59:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f21355e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f85f2135960"/>
        <function-ref name="isRoot" scoped="" ref="0x7f85f2135af0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f85f2135c80"/>
        <function-ref name="hasParent" scoped="" ref="0x7f85f2135e10"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f2133020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f85f21331b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f2133340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f85f21334d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f85f2133660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f85f21337f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f85f2133980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f85f2133b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f2133ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f85f2132020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f85f2130590" loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f85f2130590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f85f2130910"/>
        <function-ref name="OCP" scoped="" ref="0x7f85f2130aa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f85f2130c30"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f2130dc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7f85f212f020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f85f212f1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f85f212f340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f85f212f4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f85f212f660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f85f212f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7f85f212d2f0" loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7f85f212d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f212d670"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f212d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7f85f212cad0" loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7f85f212cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f212ce50"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f212b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7f85f213bae0" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f85f213bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2136110"/>
        <function-ref name="fired" scoped="" ref="0x7f85f21385b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f21374a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f2137020"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f2136a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f2136590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2138a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f213a750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2137ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f213ac20"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2138130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7f85f2148a10" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f85f2148a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f85f2148d90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f85f2147e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f85f2146020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f85f2147340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f21474d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f85f2147660"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f21477f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f85f2147980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f85f2147b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f85f2147ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f2147020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f85f21471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7f85f21312b0" loc="61:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7f85f21312b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f2131630"/>
        <function-ref name="stop" scoped="" ref="0x7f85f21317c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f2148270" loc="48:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f2148270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f21485f0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2148780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f2124140" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f2124140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2121630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2123b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f2122920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f21224a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f211f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f2121ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2122020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f2124d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2121020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f2123220"/>
        <function-ref name="stop" scoped="" ref="0x7f85f21236f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f211eb00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f211eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f211a110"/>
        <function-ref name="fired" scoped="" ref="0x7f85f211c5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f211b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f211b020"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f211aa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f211a590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f211ca30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f211d750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f211bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f211dc20"/>
        <function-ref name="stop" scoped="" ref="0x7f85f211c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f21174e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f21174e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f2114a20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f2115020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f2115da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f2115920"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f21124a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f2112020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f21154a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f2116110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f2114410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f21165e0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f2116ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f85f21118d0" loc="30:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f21118d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f2111c50"/>
        <function-ref name="changed" scoped="" ref="0x7f85f2111de0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f210d020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f210d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f210d340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f210d4d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f210d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f85f210c020" loc="31:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f210c020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f85f210c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f85f2101800" loc="36:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f2101800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f85f2101b80"/>
        <function-ref name="changed" scoped="" ref="0x7f85f2101d10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f2106020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f21061b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f2106340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f85f2108020" loc="32:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f2108020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f21083a0"/>
        <function-ref name="changed" scoped="" ref="0x7f85f2108530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f21086c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f2108850"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f21089e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f2108b70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f2108d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f85f21074a0" loc="33:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f21074a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f85f2107820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f85f210b690" loc="3:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f210b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f85f210ba10"/>
        <function-ref name="changed" scoped="" ref="0x7f85f210bba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f210bd30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f20c4020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f20c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f85f20c0da0" loc="8:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f20c0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f85f20bf180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f85f20b1b80" loc="10:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f85f20b1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f85f20be020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f85f20be1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f85f20be340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f85f20be4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f85f20be660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f20be7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f85f20be980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f85f20beb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f85f20beca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f85f20bee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f20bd020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f20bd1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f85f20bd340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f85f20bd5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f85f20bd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f85f20c1300" loc="5:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f20c1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f85f20c1680"/>
        <function-ref name="changed" scoped="" ref="0x7f85f20c1810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f20c19a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f20c1b30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f20c1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f20c4c50" loc="4:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f20c4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f20c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f85f209e020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f209e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f85f209e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f85f20947e0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f85f20947e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f85f2094b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f85f2094cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f85f2094e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f85f2093030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f85f20931c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f2093350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f85f20934e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f85f2093670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f85f2093800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f85f2093990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f2093b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f2093cb0"/>
        <function-ref name="sync" scoped="" ref="0x7f85f2093e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f85f208e120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f85f208e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f85f20861b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f85f20861b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f2086da0"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f2085260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f85f2087d90" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f85f2087d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f85f208d180"/>
        <function-ref name="rfOff" scoped="" ref="0x7f85f208d310"/>
        <function-ref name="rxOn" scoped="" ref="0x7f85f208d4a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f85f208d630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f85f208d7c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f85f208d950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f85f208dae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f85f208dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f208f980" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f208f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f208fd00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f2094020"/>
        <function-ref name="request" scoped="" ref="0x7f85f20941b0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f2094340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f20944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f85f207f9f0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f85f207f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f85f207fd70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f85f207e020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f85f207e1b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f85f207e340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f85f207e4d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f207e660"/>
        <function-ref name="setChannel" scoped="" ref="0x7f85f207e7f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f85f207e980"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f85f207eb10"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f85f207eca0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f207ee30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f207d020"/>
        <function-ref name="sync" scoped="" ref="0x7f85f207d1b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f85f207d440"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f85f207d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f85f205f8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f205f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f205fc60"/>
        <function-ref name="write" scoped="" ref="0x7f85f205fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f85f207a450" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f207a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f85f207a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f85f207ae40" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f85f207ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f20766e0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f20776b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f2076090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f2077b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f2076ba0"/>
        <function-ref name="start" scoped="" ref="0x7f85f2079ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f20771f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f85f20625f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f20625f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f2062970"/>
        <function-ref name="write" scoped="" ref="0x7f85f2062b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f85f2074380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f85f2074380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2074700"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2074890"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2074a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2074bb0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2074d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2073020"/>
        <function-ref name="set" scoped="" ref="0x7f85f20731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2073340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f85f207ccd0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f85f207ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f207b940"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f207bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f85f204d820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f85f204d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f204dba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f204dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f85f205e1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f85f205e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f205e540"/>
        <function-ref name="write" scoped="" ref="0x7f85f205e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f85f205ea70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f205ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f205edf0"/>
        <function-ref name="write" scoped="" ref="0x7f85f205d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f85f20633d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f85f20633d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f2063750"/>
        <function-ref name="write" scoped="" ref="0x7f85f20638e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f85f2069810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f85f2069810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f85f2069b90"/>
        <function-ref name="changed" scoped="" ref="0x7f85f2069d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f85f2070020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f85f20701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f85f20750e0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f85f20750e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2075460"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f20755f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2075780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2075910"/>
        <function-ref name="get" scoped="" ref="0x7f85f2075aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2075c30"/>
        <function-ref name="set" scoped="" ref="0x7f85f2075dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2074020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f85f205c120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f205c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f205c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f85f20736a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f85f20736a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f2073a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f2073bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f2073d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f2072020"/>
        <function-ref name="get" scoped="" ref="0x7f85f20721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f2072340"/>
        <function-ref name="set" scoped="" ref="0x7f85f20724d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f2072660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f2080610" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f2080610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f2080990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f85f205f020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f205f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f205f3a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f205f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f85f205ca40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f85f205ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f205cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f85f20591d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f85f20591d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f2059550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f20596e0"/>
        <function-ref name="request" scoped="" ref="0x7f85f2059870"/>
        <function-ref name="granted" scoped="" ref="0x7f85f2059a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f2059b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f85f2058d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f85f2058d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f2057180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f2057310"/>
        <function-ref name="request" scoped="" ref="0x7f85f20574a0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f2057630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f20577c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f85f207d8d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f85f207d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f85f207dc50"/>
        <function-ref name="rfOff" scoped="" ref="0x7f85f207dde0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f85f207c020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f85f207c1b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f85f207c340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f85f207c4d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f85f207c660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f85f207c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f85f2063c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f85f2063c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f20620a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f2062230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f85f2060b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f85f2060b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f2060e80"/>
        <function-ref name="write" scoped="" ref="0x7f85f2063030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f85f205a2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f85f205a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f205a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f2057a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f2057a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f2057e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f2056020"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f20561b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f2056340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f20564d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f2056660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f20567f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f2056e30"/>
        <function-ref name="set" scoped="" ref="0x7f85f2056980"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f2056b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f2056ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f85f204e940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f85f204e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f204ecc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f204ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f2080c80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f2080c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f207f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f207f230"/>
        <function-ref name="request" scoped="" ref="0x7f85f207f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f207f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f207f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f85f206c520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f85f206c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f206c8a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f206ca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f85f2064a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f85f2064a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f206c020"/>
        <function-ref name="write" scoped="" ref="0x7f85f206c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f85f20710e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f85f20710e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f2071460"/>
        <function-ref name="disable" scoped="" ref="0x7f85f20715f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f85f2071780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f85f2071910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f85f2058020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f85f2058020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f20583a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f2058530"/>
        <function-ref name="request" scoped="" ref="0x7f85f20586c0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f2058850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f20589e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f85f205a9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f85f205a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f205ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f1fd67e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f1fd67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f1fd6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f85f1fd2220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fd2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1fcfb30"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1fd1a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f1fcf4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1fcf020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f1fce020"/>
        <function-ref name="start" scoped="" ref="0x7f85f1fd1090"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1fd15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f1fcc260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f1fcc260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f1fcc5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f85f1fccaf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f85f1fccaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1f91390"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f93360"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f1f93ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1f93820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f1f91850"/>
        <function-ref name="start" scoped="" ref="0x7f85f1f94970"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1f94e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f031f2a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f031f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f031db30"/>
        <function-ref name="fired" scoped="" ref="0x7f85f031eaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f031d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f031d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f031c020"/>
        <function-ref name="start" scoped="" ref="0x7f85f031e0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f031e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0320a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0320a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f0320d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f03182a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f03182a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0316b30"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0317aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f03164e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0316020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f0314020"/>
        <function-ref name="start" scoped="" ref="0x7f85f03170d0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f03175e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0319a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0319a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f0319d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f85f02ffc10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f02ffc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f02fe020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f02fe1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f02fe340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f02fe4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f02fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f85f03021b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f03021b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f0302530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f03026c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f0302850"/>
        <function-ref name="get" scoped="" ref="0x7f85f03029e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f0302b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f0302d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f0301020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f03011b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f0301340"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f03014d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f0301660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f85f03018f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f03018f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f0301c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f0301e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f02ff020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f02ff1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f02ff340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f02ff4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f02ff660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f02ff7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f02ff980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f85f02f5a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f85f02f5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f02f5e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f85f02f4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f85f02f41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f85f02f4340"/>
        <function-ref name="fired" scoped="" ref="0x7f85f02f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f85f02f8020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f85f02f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f02f83a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f02f8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f02f86c0"/>
        <function-ref name="get" scoped="" ref="0x7f85f02f8850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f02f89e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f02f8b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f02f8d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f02f7020"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f02f71b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f85f02f7340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f85f02f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f02fcda0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f02fcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f02f9670"/>
        <function-ref name="fired" scoped="" ref="0x7f85f02fa610"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f02f9020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f02faad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f02f9b30"/>
        <function-ref name="start" scoped="" ref="0x7f85f02fbbf0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f02fa150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f02fc510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f02fc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f02fc890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f85f02f7760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f02f7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f02f7ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f02f7c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f02f7e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f02f5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f02f51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f02f5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f02f54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f02f5660"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f02f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f85f1fb6080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f1fb6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1fb5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f1fb59a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f1fb54e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f1fb5e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f85f1fad0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f85f1fad0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1fac020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f1fac9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f1fac4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f1face60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f85f1fb1cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f1fb1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1fb0b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f1fae550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f1fae090"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f1faea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f85f03125f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f85f03125f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0310e50"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0311e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f0310800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0310340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f030f340"/>
        <function-ref name="start" scoped="" ref="0x7f85f0311430"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0311940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f85f030cd20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f85f030cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0309670"/>
        <function-ref name="fired" scoped="" ref="0x7f85f030a550"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f0309020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f030aa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f0309b30"/>
        <function-ref name="start" scoped="" ref="0x7f85f030bb60"/>
        <function-ref name="stop" scoped="" ref="0x7f85f030a090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f85f030f9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f030f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f030d7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f030c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f030dca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f030c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f85f1f8b090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f85f1f8b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f8b410"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f8b5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f8b730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f8b8c0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f8ba50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f8bbe0"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f8bd70"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f85f1f8a390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f85f1f8a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f8a710"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f8a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f8aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f8abc0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f8ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f89020"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f891b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f85f1f896a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f85f1f896a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f89a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f89bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f89d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f88020"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f88340"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f884d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f85f1f8de60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f85f1f8de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f8c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f8c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f8c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f8c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f8c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f8c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f8cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f8cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f85f1f87ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f85f1f87ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f86230"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f86550"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f86870"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f86a00"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f86b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f85f1fd3b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f85f1fd3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f8d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f8d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f8d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f8d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f8d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f8d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f8d980"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f8db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f85f1f889b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f85f1f889b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f88d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f87020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f87340"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f87660"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f877f0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f87980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f832f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f83670"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f83800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f83990"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f83b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f83cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f83e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f82020"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f82340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f824d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f82660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f827f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f82980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f82c10"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f82da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f84020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f84530"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f84850"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f84b70"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f84d00"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f7ede0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f7ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f7d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f7d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f7d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f7d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f7d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f7d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f7dae0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f7dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f7de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f7c020"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f7c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f7c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f7c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f7c760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f7c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f7fb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f7fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f7e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f7e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f7e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f7e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f7e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f7e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f7e980"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f7eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f79930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f79930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f79cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f79e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f78020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f78340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f78660"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f787f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f78980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f78b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f78ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f78e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f77020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f772b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f77440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f7a710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f7a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f7aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f7ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f7adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f79020"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f79340"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f79660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f74480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f74800"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f74990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f74b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f74cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f74e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f731b0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f73340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f734d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f73660"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f737f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f73980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f73b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f73da0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f751d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f751d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f75550"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f756e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f75870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f75a00"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f75b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f75d20"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f74020"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f6f020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f6f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f6f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f6f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f6f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f6f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f6fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f6fd00"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f6e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f6e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f6e340"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f6e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f6e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f6e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f6ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f6ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f71d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f71d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f70180"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f70310"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f704a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f70630"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f707c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f70950"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f70ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f70c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f6bde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f6bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f69180"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f69310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f694a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f69630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f697c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f69950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f69ae0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f69c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f69e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f68020"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f681b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f68340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f684d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f68760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f6cb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f6cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f6b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f6b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f6b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f6b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f6b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f6b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f6b980"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f6bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f85f1f65930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f85f1f65930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f65cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f65e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f64020"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f641b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f64340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f64660"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f647f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f64980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f64b10"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f64ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f64e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f63020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f632b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f63440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f85f1f66710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f66710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f66a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f66c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f66db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f65020"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f65340"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f654d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f65660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f85f1f50150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f85f1f50150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f85f1f504d0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f50660"/>
        <function-ref name="captured" scoped="" ref="0x7f85f1f507f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f85f1f50980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f85f1f50d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f85f1f50d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1f4f180"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f4f310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f85f1f4f4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f85f1f4f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f85f1f4fa20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f85f1f4fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1f4fda0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f49020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f85f1f491b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f85f1f49340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f85f1f348f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f85f1f348f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f85f1f34c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f85f1f34e00"/>
        <function-ref name="captured" scoped="" ref="0x7f85f1f33020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f1f331b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f1f33340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f85f1f334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f85f1f46a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f85f1f46a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f85f1f46da0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f35020"/>
        <function-ref name="captured" scoped="" ref="0x7f85f1f351b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f85f1f35340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f85f1f355d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f85f1f355d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f85f1f35950"/>
        <function-ref name="getControl" scoped="" ref="0x7f85f1f35ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f85f1f35c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f85f1f35e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f85f1f34020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f85f1f341b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f85f1f34340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f85f1f344d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f85f1f34660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f85f1f337a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f85f1f337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1f33b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1f33cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1f33e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1f32020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1f321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1f32340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1f324d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1f32660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1f327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1f32980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1f32b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1f32ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1f32e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1f31120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1f312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f85f1f248a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f85f1f248a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f24c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f24db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f23020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f231b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f23340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f85f1f19a30" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f85f1f19a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f19db0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f18020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f181b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f18340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f184d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f18660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f85f1f218a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f85f1f218a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f21c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f21db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f20020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f201b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f20340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f85f1f1f8a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f85f1f1f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f1fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f1fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f1e020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f1e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f1e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f85f1f2a8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f85f1f2a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f2ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f2adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f25020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f251b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f25340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f85f1f1b8a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f85f1f1b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f1bd20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f1a020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f1a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f1a340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f1a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f1a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f85f1f238a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f85f1f238a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f23c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f23db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f22020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f221b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f22340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f85f1f18a30" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f85f1f18a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f18db0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f17020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f171b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f17340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f174d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f85f1f268f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f85f1f268f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f26c70"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f26e00"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f2b020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f2b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f2b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f85f1f1e8a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f85f1f1e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f1ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f1edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f1c020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f1c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f1c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f1c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f85f1f258a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f85f1f258a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f25c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f25db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f24020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f241b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f24340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f85f1f1aa30" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f85f1f1aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f1adb0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f19020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f191b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f19340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f194d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f85f1f228a0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f85f1f228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f22c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f22db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f21020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f211b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f21340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f85f1f208a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f85f1f208a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f20c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f20db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f1f020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f1f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f1f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f85f1f2b8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f85f1f2b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f2bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f2bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f2a020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f2a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f2a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f2a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f85f1f1c8a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f85f1f1c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f1cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f1cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f1b020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f1b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f1b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f1b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f85f1f108a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f85f1f108a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f10c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f10db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f0f020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f0f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f0f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f85f1f06a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f85f1f06a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f06db0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f05020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f051b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f05340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f054d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f85f1f0d8a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f85f1f0d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f0dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f0ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f0c020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f0c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f0c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f85f1f0b8a0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f85f1f0b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f0bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f0bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f0a020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f0a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f0a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f85f1f128a0" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f85f1f128a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f12c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f12db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f11020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f111b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f11340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f85f1f088a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f85f1f088a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f08d20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f07020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f071b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f07340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f074d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f07660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f85f1f0f8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f85f1f0f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f0fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f0fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f0e020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f0e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f0e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f85f1f05a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f85f1f05a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f05db0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f04020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f041b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f04340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f044d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f85f1f16810" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f85f1f16810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f16b90"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f16d20"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f13020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f131b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f13340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f85f1f0a8a0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f85f1f0a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f0ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f0adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f09020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f091b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f09340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f85f1f118a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f85f1f118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f11c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f11db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f10020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f101b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f10340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f85f1f07a30" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f85f1f07a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f07db0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f06020"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f061b0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f06340"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f064d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f06660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f85f1f0e8a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f85f1f0e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f0ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f0edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f0d020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f0d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f0d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f85f1f0c8a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f85f1f0c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f0cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f0cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f0b020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f0b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f0b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f0b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f85f1f138a0" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f85f1f138a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f13c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f13db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f12020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f121b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f12340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f85f1f098a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f85f1f098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1f09c20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1f09db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1f08020"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1f081b0"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1f08340"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1f084d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f85f1e31610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f85f1e31610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1e31990"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1e31b20"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1e31cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1e31e40"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1e24020"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1e241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f85f1e32a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f85f1e32a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1e32db0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1e31020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f85f1e311b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f85f1e31340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f85f1e22610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f85f1e22610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1e22990"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1e22b20"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1e22cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f85f1e22e40"/>
        <function-ref name="enable" scoped="" ref="0x7f85f1e21020"/>
        <function-ref name="getValue" scoped="" ref="0x7f85f1e211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f85f1e23a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f85f1e23a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1e23df0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f1e22020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f85f1e221b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f85f1e22340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f85f19cee50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f19cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cd410"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f85f19d8160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f85f19d8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f85f19d2e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f19d2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19d1210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f85f19cc880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f19cc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19ccc00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19ccd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f85f19c20a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f85f19c20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c2420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f85f19cb0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f85f19cb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cb420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f85f19b6500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f85f19b6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19b6880"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f85f19b8500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f19b8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19b8880"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f85f19d7490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f85f19d7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d7810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f85f19be880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f85f19be880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bec00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f85f19ba500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f19ba500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19ba880"/>
        <function-ref name="write" scoped="" ref="0x7f85f19baa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f85f19d1e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f85f19d1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cf210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f85f19cfe50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f19cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19ce210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f85f19c6880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f85f19c6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c6c00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f85f19c70a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f85f19c70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c7420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f85f19cb880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f85f19cb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cbc00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f19daa90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f19daa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f19dae10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f19d9020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f19d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f85f19d5e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f19d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f85f19d4490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f85f19d4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d4910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f85f19bdc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f19bdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f85f19d4be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f85f19d4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f85f19bace0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f19bace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19b80a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f85f19d5160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f19d5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f85f19be0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f85f19be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19be420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19be5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f85f19cf670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f19cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f85f19d1670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f19d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19d19f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19d1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f85f19d9ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f85f19d9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f85f19bf0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f19bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bf420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f85f19c2880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f85f19c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c2c00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f85f19bf880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f19bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bfc00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f85f19b7ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f85f19b7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19b60a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f85f19b8ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f19b8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19b70a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f85f19c7880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f85f19c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c7c00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f85f19c10a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f85f19c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c1420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f85f19bbce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f85f19bbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19ba0a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19ba230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f85f19ca880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f85f19ca880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cac00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f85f19b6ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f85f19b6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f19b50a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f19b5230"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b53c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f19b5550"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f19b56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f85f19d9480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f19d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f85f19d2670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f85f19d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19d29f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19d2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f85f19ce670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f19ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f85f19c50a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f85f19c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c5420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f85f19ca0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f85f19ca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19ca420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19ca5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f85f19c5880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f85f19c5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c5c00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f85f19cd870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f85f19cd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cdbf0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cdd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f85f19d87b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f85f19d87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f85f19cc0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f19cc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19cc420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19cc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f19dbe20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f19dbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f19da1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f19da350"/>
        <function-ref name="request" scoped="" ref="0x7f85f19da4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f19da670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f19da800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f85f19d32f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f85f19d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f85f19d2020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f85f19d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f85f19bb500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f85f19bb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bb880"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f85f19bcce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f85f19bcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bb0a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f85f19d57b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f19d57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f85f19bc500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f19bc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bc880"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f85f19b7500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f85f19b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19b7880"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f85f19c60a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f19c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c6420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f85f19c1880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f85f19c1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c1c00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f85f19d8e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f85f19d8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f85f19d7ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f85f19d7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f85f19c80a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f85f19c80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c8420"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f85f19d3940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f85f19d3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19d3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f85f19c8880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f85f19c8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19c8c00"/>
        <function-ref name="write" scoped="" ref="0x7f85f19c8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f85f19bd0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f85f19bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19bd820"/>
        <function-ref name="write" scoped="" ref="0x7f85f19bd9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f85f19b59b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f85f19b59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f19b5d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f19b4020"/>
        <function-ref name="write" scoped="" ref="0x7f85f19b41b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f19b4340"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f19b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f85f1de1630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f85f1de1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1de19b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1de1b40"/>
        <function-ref name="write" scoped="" ref="0x7f85f1de1cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1de1e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f1de0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f1de2670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1de2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f1de29f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f1de2b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f1de2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f85f1de08c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f85f1de08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1de0c40"/>
        <function-ref name="write" scoped="" ref="0x7f85f1de0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f85f1ddf6f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f85f1ddf6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1ddfa70"/>
        <function-ref name="write" scoped="" ref="0x7f85f1ddfc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1de5950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1de5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1de5cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1de5e60"/>
        <function-ref name="request" scoped="" ref="0x7f85f1de2020"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1de21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1de2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f85f1ddd510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f85f1ddd510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1ddd890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f85f1dc8680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1dc8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1dc8a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1dc8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f85f1dd8bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f85f1dd8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1dd7020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1dd71b0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1dd7340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1dd74d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f1dd7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f1ddc920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f1ddc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f1ddcca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f1ddce30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f1dd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f85f1dd1080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f85f1dd1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f85f1dd1400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f85f1dc4b90" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f85f1dc4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f1dcf020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f1dcf1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f85f1dcf340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f1dcf4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f1dcf660"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f1dcf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f85f1dd3400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f85f1dd3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1dd3780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1dd3910"/>
        <function-ref name="request" scoped="" ref="0x7f85f1dd3aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1dd3c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1dd3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f85f1dd6020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f85f1dd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1dd63a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1dd6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f85f1dd6db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f85f1dd6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1dd4180"/>
        <function-ref name="write" scoped="" ref="0x7f85f1dd4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f1dcfa70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f1dcfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f1dcfdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f1dc9020"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f1dc91b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f1dc9340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f1dc94d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1dc9660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f1dc97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f1dc9e30"/>
        <function-ref name="set" scoped="" ref="0x7f85f1dc9980"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f1dc9b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f1dc9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1dd9810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1dd9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1dd9b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1dd9d20"/>
        <function-ref name="request" scoped="" ref="0x7f85f1dd8020"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1dd81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1dd8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f85f1dbfbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f85f1dbfbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f1dbe020"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1dbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f85f1dd4ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f85f1dd4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1dd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f1d64770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f1d64770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f1d64af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f1d64c80"/>
        <function-ref name="isState" scoped="" ref="0x7f85f1d64e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f1d60020"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f1d601b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f1d60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f1d5f1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f1d5f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f1d5f550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f1d5f6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f85f1d5f870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f1d5fa00"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f1d5fb90"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f1d5fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f1d5b020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f1d5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f1d5b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f1d5bb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f1d5bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f1d5a020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f1d5a1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f85f1d5a340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f1d5a4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f1d5a660"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f1d5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f85f1a03020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1a03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1a033a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1a03530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f85f1d418f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f85f1d418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f85f1d41c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1d42c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1d42c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1d41020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1d411b0"/>
        <function-ref name="request" scoped="" ref="0x7f85f1d41340"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1d414d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1d41660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f02288f0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f02288f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f0228c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f0228e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f85f02262b0" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f85f02262b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0226630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f02267c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f85f0226a50" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f0226a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f0226dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f85f02270c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f85f02270c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f85f0227440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f022ac30" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f022ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0228020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f02281b0"/>
        <function-ref name="request" scoped="" ref="0x7f85f0228340"/>
        <function-ref name="granted" scoped="" ref="0x7f85f02284d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0228660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f85f02276d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f02276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f85f0227a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f85f0227be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f85f0227d70"/>
        <function-ref name="write" scoped="" ref="0x7f85f0226020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f85f1cdc5e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1cdc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f1cdc960"/>
        <function-ref name="configure" scoped="" ref="0x7f85f1cdcaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f85f1cd8510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1cd8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1cd8890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1cd8a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f85f1cd6600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f1cd6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f1cd6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f85f1cdcdd0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f85f1cdcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f85f1cd9180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f85f1cd7370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f85f1cd7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1cd76f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1cd7880"/>
        <function-ref name="request" scoped="" ref="0x7f85f1cd7a10"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1cd7ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1cd7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1ce1a20" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1ce1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1ce1da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1cdd020"/>
        <function-ref name="request" scoped="" ref="0x7f85f1cdd1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1cdd340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1cdd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f85f1cd9480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f1cd9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f85f1cd9800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f85f1cd9990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f85f1cd9b20"/>
        <function-ref name="write" scoped="" ref="0x7f85f1cd9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f85f1cd26a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f1cd26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1cd2a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1cd2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f85f1c61c40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1c61c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f1c60020"/>
        <function-ref name="configure" scoped="" ref="0x7f85f1c601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f85f1c5f700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f85f1c5f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1c5faa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1c5fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f85f1c5de00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f85f1c5de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f1c5c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f85f1c60440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f85f1c60440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f85f1c607c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f85f1c5c490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f85f1c5c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f1c5c810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f1c5c9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f1c5cb30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f1c5ccc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f1c5ce50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f1c5b020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f1c5b1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f1c5b340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f1c5b4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f1c5b660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f1c5b7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f1c5b980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f1c5bb10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f1c5bda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f1c5a020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f1c5a1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f1c5a340"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f1c5a4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f1c5a660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f1c5a7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f1c5a980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f1c5ab10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f1c5aca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f1c5ae30"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f1c59020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f1c593b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f1c59540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f1c596d0"/>
        <function-ref name="tx" scoped="" ref="0x7f85f1c59860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f1c599f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f1c59b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f1c59d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f1c58020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f1c581b0"/>
        <function-ref name="rx" scoped="" ref="0x7f85f1c58340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f1c584d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f1c58660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f1c587f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f1c58980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f1c58b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f1c575a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f1c575a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f1c57920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f1c57ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f1c57c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f1c57dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f1c56020"/>
        <function-ref name="get" scoped="" ref="0x7f85f1c561b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f1c56340"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f1c56980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1c56660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f1c564d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f1c567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f85f1c5d060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f85f1c5d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1c5d400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1c5d590"/>
        <function-ref name="request" scoped="" ref="0x7f85f1c5d720"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1c5d8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1c5da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1c62e80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1c62e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1c61240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1c613d0"/>
        <function-ref name="request" scoped="" ref="0x7f85f1c61560"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1c616f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1c61880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f85f1c60a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f85f1c60a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f85f1c60dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f85f1c5f020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f85f1c5f1b0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1c5f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f85f1c58de0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f1c58de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1c57180"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1c57310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f85f1c56c50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f85f1c56c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f1c55020"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1c551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f85f1c468a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f85f1c468a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1c46c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f85f1c493b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f1c493b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1c49730"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1c498c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f85f1c50860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f1c50860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f1c50be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f1c50d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f1c4d020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f1c4d1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f1c4d340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f1c4d4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f1c4d660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f1c4d7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f1c4d980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f1c4db10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f1c4dca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f1c4de30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f1c4c020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f1c4c2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f1c4c440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f1c4c5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f1c4c760"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f1c4c8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f1c4ca80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f1c4cc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f1c4cda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f1c4b020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f1c4b1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f1c4b340"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f1c4b4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f1c4b860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f1c4b9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f1c4bb80"/>
        <function-ref name="tx" scoped="" ref="0x7f85f1c4bd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f1c4a020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f1c4a1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f1c4a340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f1c4a4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f1c4a660"/>
        <function-ref name="rx" scoped="" ref="0x7f85f1c4a7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f1c4a980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f1c4ab10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f1c4aca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f1c4ae30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f1c49020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f85f1c0c670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f85f1c0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1c0c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1c0cb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1c0cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1c0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1c0b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1c0b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1c0b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1c0b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1c0b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1c0b980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1c0bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1c0bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1c0be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1c0a120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1c0a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f85f1c40dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f85f1c40dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1c3f180"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1c3f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f85f1c0a670" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f85f1c0a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1c0a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1c0ab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1c0ad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1c09020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1c091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1c09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1c094d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1c09660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1c097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1c09980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1c09b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1c09ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1c09e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1c08120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1c082b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f85f1c08670" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f85f1c08670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1c089f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1c08b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1c08d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1c07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1c071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1c07340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1c074d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1c07660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1c077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1c07980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1c07b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1c07ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1c07e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1c06120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1c062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f85f1c44020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f85f1c44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f1c443a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f1c44530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f1c446c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f1c44850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f1c449e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f1c44b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f1c44d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f1c43020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f1c431b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f1c43340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f1c434d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f1c43660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f1c437f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f1c43a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f1c43c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f1c43da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f1c42020"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f1c421b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f1c42340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f1c424d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f1c42660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f1c427f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f1c42980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f1c42b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f1c42ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f1c41220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f1c413b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f1c41540"/>
        <function-ref name="tx" scoped="" ref="0x7f85f1c416d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f1c41860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f1c419f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f1c41b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f1c41d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f1c40020"/>
        <function-ref name="rx" scoped="" ref="0x7f85f1c401b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f1c40340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f1c404d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f1c40660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f1c407f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f1c40980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f85f1c155b0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f85f1c155b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f85f1c15930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f85f1c15ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f85f1c15c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f85f1c15de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f85f1c3c020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f85f1c3c1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f85f1c3c340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f85f1c3c4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f1c3c660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f85f1c3c7f0"/>
        <function-ref name="getData" scoped="" ref="0x7f85f1c3c980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f85f1c3cb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f85f1c3cca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f85f1c3b020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f85f1c3b1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f85f1c3b340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f85f1c3b4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f85f1c3b660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f85f1c3b7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f85f1c3b980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f85f1c3bb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f85f1c3bca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f85f1c3be30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f85f1c14020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f85f1c141b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f85f1c14540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f85f1c146d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f85f1c14860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f85f1c149f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f85f1c14b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f85f1c14d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f85f1c13020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f85f1c131b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f85f1c13340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f85f1c134d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f85f1c13660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f85f1c137f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f85f1c13980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f85f1c13b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f85f1c13ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f85f1c13e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f85f1c12020"/>
        <function-ref name="setData" scoped="" ref="0x7f85f1c121b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f85f1c12340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f85f1c124d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f85f1c12660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f85f1c127f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f85f1c12980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f85f1c12b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f85f1c11420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f85f1c115b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f85f1c11740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f85f1c118d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f85f1c11a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f85f1c11bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f85f1c11d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f85f1c10020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f85f1c101b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f85f1c10340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f85f1c0e670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f85f1c0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1c0e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1c0eb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1c0ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1c0d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1c0d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1c0d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1c0d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1c0d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1c0d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1c0d980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1c0db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1c0dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1c0de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1c0c120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1c0c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f85f1c3f750" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1c3f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1c3fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f85f1c10700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f85f1c10700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1c10a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1c10c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1c10da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1c0f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1c0f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1c0f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1c0f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f85f1c0f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1c0f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1c0f980"/>
        <function-ref name="set" scoped="" ref="0x7f85f1c0fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1c0fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1c0fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1c0e120"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1c0e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f021d2c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f021d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f021d640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f021d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f85f0217440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f85f0217440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f02177c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85f020e760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f020e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f020eae0"/>
        <function-ref name="configure" scoped="" ref="0x7f85f020ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f85f0217a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f85f0217a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f85f0217dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f85f0216020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f85f02161b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f85f0216340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f85f02164d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f85f0216660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f85f02167f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f85f0216980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f0216b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f85f0216ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f85f0216e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f85f0215020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f85f02151b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f85f0215440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f85f02155d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f85f0215760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f85f02158f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f85f0215a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f85f0215c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f85f0215da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f85f0212020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f85f02121b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f85f0212340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f85f02124d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f85f0212660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f85f02129f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f85f0212b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f85f0212d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f85f0211020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f85f02111b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f85f0211340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f85f02114d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f85f0211660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f85f02117f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f85f0211980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f85f0211b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f85f0211ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f85f0211e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f85f0210020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f85f02101b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f85f0210340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f85f02104d0"/>
        <function-ref name="setData" scoped="" ref="0x7f85f0210660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f85f02107f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f85f0210980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f85f0210b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f85f0210ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f85f0210e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f85f020f020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f85f020f5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f85f020f740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f85f020f8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f85f020fa60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f85f020fbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f85f020fd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f85f020e020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f85f020e1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f85f020e340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f85f020e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f85f0218c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f0218c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0217020"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f02171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f021e640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f021e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f021e9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f021eb50"/>
        <function-ref name="request" scoped="" ref="0x7f85f021ece0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f021ee70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f021d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f85f021c2b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f021c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f021c630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f021c7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f021c950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f021cae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f021cc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f021ce00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f021b020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f021b1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f021b340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f021b4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f021b660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f021b7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f021b980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f021bc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f021bda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f021a020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f021a1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f021a340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f021a4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f021a660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f021a7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f021a980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f021ab10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f021aca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f021ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f0219220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f02193b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f0219540"/>
        <function-ref name="tx" scoped="" ref="0x7f85f02196d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f0219860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f02199f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f0219b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f0219d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f0218020"/>
        <function-ref name="rx" scoped="" ref="0x7f85f02181b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f0218340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f02184d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f0218660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f02187f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f0218980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85f021da60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f021da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f021dde0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f021c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f1b658a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f1b658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f1b65c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f1b65db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85f1b62020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1b62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f1b623a0"/>
        <function-ref name="configure" scoped="" ref="0x7f85f1b62530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f85f1b6aa80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f85f1b6aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1b6ae00"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1b67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1b665c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1b665c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1b66940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1b66ad0"/>
        <function-ref name="request" scoped="" ref="0x7f85f1b66c60"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1b66df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1b65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f85f1b679a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1b679a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1b67d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85f1b63130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1b63130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f1b634b0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f1b63640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f85f1b4e4b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1b4e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f1b4e830"/>
        <function-ref name="userId" scoped="" ref="0x7f85f1b4e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f85f1b605c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f85f1b605c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1b60960"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1b60af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f85f1b4fe70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f85f1b4fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1b4e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f85f1b4f020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f1b4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f1b4f3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f85f1b4f690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f85f1b4f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f1b4fa10"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f1b4fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f1ad3bf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f1ad3bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f1ad2020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f1ad21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85f1ad1930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f1ad1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f1ad1cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f85f1ad1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f85f1ad2400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f1ad2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1ad2780"/>
        <function-ref name="requested" scoped="" ref="0x7f85f1ad2910"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1ad2aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1ad2c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f1ad2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1ad5e60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1ad5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1ad3230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1ad33c0"/>
        <function-ref name="request" scoped="" ref="0x7f85f1ad3550"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1ad36e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f1ad3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85f1ad1060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f1ad1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f1ad13e0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f1ad1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f01a1140" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f01a1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f01a14c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f85f01a1750" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f85f01a1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f85f01a1ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f85f01a1c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f85f01a1df0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f01a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f019e850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f019e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f019ebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f019ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85f019c590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f019c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f019c930"/>
        <function-ref name="configure" scoped="" ref="0x7f85f019cac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f85f019cd50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85f019cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f85f019a100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f85f019a290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f85f019a420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f019a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f85f019d020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f019d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f019d3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f85f019d530"/>
        <function-ref name="granted" scoped="" ref="0x7f85f019d6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f019d850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f019d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f019a800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f019a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f019ab80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f019ad10"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0199020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f01991b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0199340"/>
        <function-ref name="get" scoped="" ref="0x7f85f01994d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0199660"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0199ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0199980"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f01997f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0199b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f019f970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f019f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f019fd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f019e020"/>
        <function-ref name="request" scoped="" ref="0x7f85f019e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f019e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f019e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85f019dc30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f019dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f019c020"/>
        <function-ref name="userId" scoped="" ref="0x7f85f019c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f85f0198020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f85f0198020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f01983a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0198530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f85f1aca880" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f85f1aca880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f85f1acac00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f85f1acad90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f85f1ac7020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f85f1ac71b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f85f1ac7340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f85f1ac74d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f85f1ac7660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f85f1ac77f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f1ac7980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f85f1ac7b10"/>
        <function-ref name="getData" scoped="" ref="0x7f85f1ac7ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f85f1ac7e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f85f1ac6020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f85f1ac62b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f85f1ac6440"/>
        <function-ref name="getIV" scoped="" ref="0x7f85f1ac65d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f85f1ac6760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f85f1ac68f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f85f1ac6a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f85f1ac6c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f85f1ac6da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f85f1ac5020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f85f1ac51b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f85f1ac5340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f85f1ac54d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f85f1ac5860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f85f1ac59f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f85f1ac5b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f85f1ac5d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f85f1ac4020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f85f1ac41b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f85f1ac4340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f85f1ac44d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f85f1ac4660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f85f1ac47f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f85f1ac4980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f85f1ac4b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f85f1ac4ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f85f1ac4e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f85f1ac3020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f85f1ac31b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f85f1ac3340"/>
        <function-ref name="setData" scoped="" ref="0x7f85f1ac34d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f85f1ac3660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f85f1ac37f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f85f1ac3980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f85f1ac3b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f85f1ac3ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f85f1ac3e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f85f1ac2420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f85f1ac25b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f85f1ac2740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f85f1ac28d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f85f1ac2a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f85f1ac2bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f85f1ac2d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f85f1ac1020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f85f1ac11b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f85f1ac1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f85f1ab7250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f85f1ab7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f1ab75d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f1ab7760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f1ab78f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f1ab7a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f1ab7c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f1ab7da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f1ab6020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f1ab61b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f1ab6340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f1ab64d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f1ab6660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f1ab67f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f1ab6980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f1ab6c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f1ab6da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f1ab5020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f1ab51b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f1ab5340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f1ab54d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f1ab5660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f1ab57f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f1ab5980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f1ab5b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f1ab5ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f1ab5e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f1ab4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f1ab43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f1ab4540"/>
        <function-ref name="tx" scoped="" ref="0x7f85f1ab46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f1ab4860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f1ab49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f1ab4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f1ab4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f1ab3020"/>
        <function-ref name="rx" scoped="" ref="0x7f85f1ab31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f1ab3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f1ab34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f1ab3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f1ab37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f1ab3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f85f1ab1cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f85f1ab1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1aaf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1aaf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1aaf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1aaf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1aaf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1aaf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1aafa00"/>
        <function-ref name="get" scoped="" ref="0x7f85f1aafb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1aafd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1aae020"/>
        <function-ref name="set" scoped="" ref="0x7f85f1aae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1aae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1aae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1aae760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1aae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f85f1abe430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f85f1abe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f85f1abe7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f85f1abe940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f85f1abead0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f85f1abec60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f85f1abedf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f85f1abd020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f85f1abd1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f85f1abd340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f85f1abd4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f85f1abd660"/>
        <function-ref name="getData" scoped="" ref="0x7f85f1abd7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f85f1abd980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f85f1abdb10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f85f1abdda0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f85f1abc020"/>
        <function-ref name="getIV" scoped="" ref="0x7f85f1abc1b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f85f1abc340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f85f1abc4d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f85f1abc660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f85f1abc7f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f85f1abc980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f85f1abcb10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f85f1abcca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f85f1abce30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f85f1abb020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f85f1abb3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f85f1abb540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f85f1abb6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f85f1abb860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f85f1abb9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f85f1abbb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f85f1abbd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f85f1aba020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f85f1aba1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f85f1aba340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f85f1aba4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f85f1aba660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f85f1aba7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f85f1aba980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f85f1abab10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f85f1abaca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f85f1abae30"/>
        <function-ref name="setData" scoped="" ref="0x7f85f1ab9020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f85f1ab91b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f85f1ab9340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f85f1ab94d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f85f1ab9660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f85f1ab97f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f85f1ab9980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f85f1ab8020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f85f1ab81b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f85f1ab8340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f85f1ab84d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f85f1ab8660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f85f1ab87f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f85f1ab8980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f85f1ab8b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f85f1ab8ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f85f1ab8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f85f1ab3d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f85f1ab3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f1ab20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f1ab2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f1ab2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f1ab2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f1ab2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f1ab28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f1ab2a40"/>
        <function-ref name="get" scoped="" ref="0x7f85f1ab2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f1ab2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f1ab1020"/>
        <function-ref name="set" scoped="" ref="0x7f85f1ab11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f1ab1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f1ab14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f1ab1760"/>
        <function-ref name="clr" scoped="" ref="0x7f85f1ab18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f85f199cc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f199cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199b210"/>
        <function-ref name="write" scoped="" ref="0x7f85f199b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f85f19a7da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f85f19a7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f85f199fb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f199fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199e020"/>
        <function-ref name="write" scoped="" ref="0x7f85f199e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f85f1999670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f1999670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19999f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1999b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f85f1992e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f85f1992e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1991210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f85f1999e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f85f1999e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1998210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f85f19852f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f85f19852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1985670"/>
        <function-ref name="write" scoped="" ref="0x7f85f1985800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f85f19882f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f19882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1988670"/>
        <function-ref name="write" scoped="" ref="0x7f85f1988800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f85f19a4120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f85f19a4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a44a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f85f198e670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f85f198e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f198eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f85f19892f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f19892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1989670"/>
        <function-ref name="write" scoped="" ref="0x7f85f1989800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f85f199ec60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f85f199ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199d020"/>
        <function-ref name="write" scoped="" ref="0x7f85f199d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f85f199dc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f199dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199c020"/>
        <function-ref name="write" scoped="" ref="0x7f85f199c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f85f1993670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f85f1993670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19939f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1993b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f85f1996e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f85f1996e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1995210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f85f1998670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f85f1998670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19989f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1998b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f19a8760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f19a8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f19a8ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f19a8c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f19a8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f85f19a3aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f19a3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f85f19a2120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f85f19a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f85f198da70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f198da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f85f198b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f85f19a2870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f85f19a2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f85f1989ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f1989ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1989e50"/>
        <function-ref name="write" scoped="" ref="0x7f85f1988020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f85f19a4dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f19a4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f85f198fe50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f85f198fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198e210"/>
        <function-ref name="write" scoped="" ref="0x7f85f198e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f85f199d480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f199d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199d800"/>
        <function-ref name="write" scoped="" ref="0x7f85f199d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f85f199e480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f199e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199e800"/>
        <function-ref name="write" scoped="" ref="0x7f85f199e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f85f19a7750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f85f19a7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f85f1990e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f1990e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198f210"/>
        <function-ref name="write" scoped="" ref="0x7f85f198f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f85f1991670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f85f1991670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19919f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1991b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f85f198f670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f198f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f198fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f85f1987ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f85f1987ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1987e50"/>
        <function-ref name="write" scoped="" ref="0x7f85f1985020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f85f1988ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f1988ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1988e50"/>
        <function-ref name="write" scoped="" ref="0x7f85f1987020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f85f1995670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f85f1995670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19959f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1995b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f85f1991e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f85f1991e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1990210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f85f198aad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f85f198aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198ae50"/>
        <function-ref name="write" scoped="" ref="0x7f85f1989020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f85f1997670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f85f1997670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19979f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1997b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f85f1985ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f85f1985ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1985e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1984020"/>
        <function-ref name="write" scoped="" ref="0x7f85f19841b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1984340"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f19844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f85f19a7100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f19a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a7480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f85f199f370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f85f199f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199f6f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f199f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f85f199c480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f199c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199c800"/>
        <function-ref name="write" scoped="" ref="0x7f85f199c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f85f1993e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f85f1993e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1992210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f85f1998e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f85f1998e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1997210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f85f1992670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f85f1992670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19929f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1992b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f85f199b670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f85f199b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f199b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f199bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f85f19a5450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f85f19a5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f85f199be50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f199be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1999210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f19a9a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f19a9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f19a9e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f19a8020"/>
        <function-ref name="request" scoped="" ref="0x7f85f19a81b0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f19a8340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f19a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f85f19a0020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f85f19a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f85f19a0cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f85f19a0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f199f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f85f198a2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f85f198a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198a670"/>
        <function-ref name="write" scoped="" ref="0x7f85f198a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f85f198bad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f85f198bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198be50"/>
        <function-ref name="write" scoped="" ref="0x7f85f198a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f85f19a3450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f19a3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f85f198b2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f198b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198b670"/>
        <function-ref name="write" scoped="" ref="0x7f85f198b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f85f19872f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f85f19872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1987670"/>
        <function-ref name="write" scoped="" ref="0x7f85f1987800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f85f1995e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f1995e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1993210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f85f1990670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f85f1990670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19909f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1990b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f85f19a5aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f85f19a5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f85f19a4770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f85f19a4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f85f1997e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f85f1997e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1996210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f85f19a0670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f85f19a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19a09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f85f1996670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f85f1996670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19969f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1996b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f85f198ee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f85f198ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f198d610"/>
        <function-ref name="write" scoped="" ref="0x7f85f198d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f85f19847a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f85f19847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1984b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1984cb0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1984e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1983020"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f19831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f85f196fc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f196fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196e210"/>
        <function-ref name="write" scoped="" ref="0x7f85f196e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f85f197ada0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f85f197ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1979180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f85f1973b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f1973b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1972020"/>
        <function-ref name="write" scoped="" ref="0x7f85f19721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f85f196d670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f196d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f196db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f85f1966e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f85f1966e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1965210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f85f196de50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f85f196de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196c210"/>
        <function-ref name="write" scoped="" ref="0x7f85f196c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f85f19592f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f85f19592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1959670"/>
        <function-ref name="write" scoped="" ref="0x7f85f1959800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f85f195b2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f195b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195b670"/>
        <function-ref name="write" scoped="" ref="0x7f85f195b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f85f1978120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f85f1978120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19784a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f85f1961670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f85f1961670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19619f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1961b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f85f195c2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f195c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195c670"/>
        <function-ref name="write" scoped="" ref="0x7f85f195c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f85f1972c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f85f1972c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1970020"/>
        <function-ref name="write" scoped="" ref="0x7f85f19701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f85f1970c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f1970c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196f020"/>
        <function-ref name="write" scoped="" ref="0x7f85f196f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f85f1967670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f85f1967670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19679f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1967b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f85f1969e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f85f1969e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1968210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f85f196c670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f85f196c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f196cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f197b760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f197b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f197bae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f197bc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f197be00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f85f1976aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f1976aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1976e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f85f1975120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f85f1975120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19755a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f85f1960a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f1960a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1960df0"/>
        <function-ref name="write" scoped="" ref="0x7f85f195f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f85f1975870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f85f1975870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1975bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f85f195cad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f195cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195ce50"/>
        <function-ref name="write" scoped="" ref="0x7f85f195b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f85f1978dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f1978dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1976180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f85f1962e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f85f1962e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1961210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f85f1970480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f1970480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1970800"/>
        <function-ref name="write" scoped="" ref="0x7f85f1970990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f85f1972480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f1972480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1972800"/>
        <function-ref name="write" scoped="" ref="0x7f85f1972990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f85f197a750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f85f197a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f197aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f85f1963e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f1963e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1962210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f85f1965670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f85f1965670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19659f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1965b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f85f1962670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f1962670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19629f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1962b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f85f195aad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f85f195aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195ae50"/>
        <function-ref name="write" scoped="" ref="0x7f85f1959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f85f195bad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f195bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195be50"/>
        <function-ref name="write" scoped="" ref="0x7f85f195a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f85f1968670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f85f1968670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19689f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1968b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f85f1965e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f85f1965e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1963210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f85f195ead0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f85f195ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195ee50"/>
        <function-ref name="write" scoped="" ref="0x7f85f195c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f85f196a670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f85f196a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f196ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f85f1959ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f85f1959ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1959e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1958020"/>
        <function-ref name="write" scoped="" ref="0x7f85f19581b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1958340"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f19584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f85f197a100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f197a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f197a480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f85f1973370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f85f1973370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19736f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1973880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f85f196f480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f196f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196f800"/>
        <function-ref name="write" scoped="" ref="0x7f85f196f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f85f1967e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f85f1967e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1966210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f85f196ce50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f85f196ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196a210"/>
        <function-ref name="write" scoped="" ref="0x7f85f196a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f85f1966670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f85f1966670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19669f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1966b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f85f196e670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f85f196e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f196eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f85f1979450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f85f1979450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19797d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f85f196ee50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f196ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f196d210"/>
        <function-ref name="write" scoped="" ref="0x7f85f196d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f197c9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f197c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f197cd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f197b020"/>
        <function-ref name="request" scoped="" ref="0x7f85f197b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f197b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f197b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f85f1974020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f85f1974020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f85f1974cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f85f1974cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19730a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f85f195e2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f85f195e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195e670"/>
        <function-ref name="write" scoped="" ref="0x7f85f195e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f85f195fad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f85f195fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195fe50"/>
        <function-ref name="write" scoped="" ref="0x7f85f195e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f85f1976450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f1976450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19767d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f85f195f2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f195f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195f670"/>
        <function-ref name="write" scoped="" ref="0x7f85f195f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f85f195a2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f85f195a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f195a670"/>
        <function-ref name="write" scoped="" ref="0x7f85f195a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f85f1968e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f1968e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1967210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f85f1963670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f85f1963670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19639f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1963b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f85f1979aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f85f1979aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1979e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f85f1978770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f85f1978770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1978af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f85f196ae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f85f196ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1969210"/>
        <function-ref name="write" scoped="" ref="0x7f85f19693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f85f1974670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f85f1974670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f19749f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f85f1969670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f85f1969670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f19699f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1969b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f85f1961e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f85f1961e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1960610"/>
        <function-ref name="write" scoped="" ref="0x7f85f19607a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f85f19587a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f85f19587a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1958b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1958cb0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1958e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1957020"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f19571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f85f1950b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f85f1950b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f85f194d020"/>
        <function-ref name="changed" scoped="" ref="0x7f85f194d1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f85f194d340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f85f194d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7f85f192d020" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f85f192d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f85f192d3a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f85f192d530"/>
        <function-ref name="startDAO" scoped="" ref="0x7f85f192d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f85f192c020" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f85f192c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f192c3a0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f192c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f210e6f0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f210e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f210ea70"/>
        <function-ref name="stop" scoped="" ref="0x7f85f210ec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f85f185c270" loc="57:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f85f185c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f85f185c5f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f85f185c780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f85f185c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7f85f18610f0" loc="55:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7f85f18610f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f185f260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f1860660"/>
        <function-ref name="empty" scoped="" ref="0x7f85f1861ce0"/>
        <function-ref name="put" scoped="" ref="0x7f85f1860ae0"/>
        <function-ref name="size" scoped="" ref="0x7f85f18601e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7f85f1869bb0" loc="52:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7f85f1869bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1868020"/>
        <function-ref name="recv" scoped="" ref="0x7f85f18681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f85f1869410" loc="51:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f1869410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f1869790"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f1869920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7f85f185a2f0" loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7f85f185a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f185a670"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f185a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7f85f1874ae0" loc="49:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7f85f1874ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f186f110"/>
        <function-ref name="fired" scoped="" ref="0x7f85f18725b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f18714a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f1871020"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f186fa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f186f590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1872a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1873750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f1871ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f1873c20"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1872130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f85f18675a0" loc="54:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f85f18675a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f85f18644a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f85f1863260"/>
        <function-ref name="element" scoped="" ref="0x7f85f18638d0"/>
        <function-ref name="full" scoped="" ref="0x7f85f1866680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f1864020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f1864b50"/>
        <function-ref name="empty" scoped="" ref="0x7f85f1866200"/>
        <function-ref name="size" scoped="" ref="0x7f85f1866b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f1868400" loc="53:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f1868400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f1868780"/>
        <function-ref name="changed" scoped="" ref="0x7f85f1868910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f1868aa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f1868c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f1868dc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f1867020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f18671b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7f85f185aad0" loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7f85f185aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f185ae50"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1859020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7f85f187a4b0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f85f187a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f85f187a830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f85f187a9c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f85f187ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7f85f1879720" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f85f1879720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1876c40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f18771e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f1876020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f1877ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f1874590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1874110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1877660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1878390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f1876630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f1878860"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1878d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7f85f186e020" loc="50:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f85f186e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f186b630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f186da60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f186c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f186c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f1869020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f186bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f186c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f186ec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f186b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f186d110"/>
        <function-ref name="stop" scoped="" ref="0x7f85f186d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7f85f185f980" loc="56:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f85f185f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f85f185fd00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f85f185de30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f85f185c020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f85f185d340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f185d4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f85f185d660"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f185d7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f85f185d980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f85f185db10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f85f185dca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f185d020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f85f185d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f85f185cb60" loc="58:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f85f185cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f85f185b020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f85f185b1b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f85f185b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f85f185b590" loc="59:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f185b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f85f185b910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f85f185baa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f85f185bc30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f85f185bdc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f85f185a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f187ada0" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f187ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f1879180"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1879310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f1855bd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f1855bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1850110"/>
        <function-ref name="fired" scoped="" ref="0x7f85f18536a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f18514a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f1851020"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f1850a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1850590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1853b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1854860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f1851ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f1854d30"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1853220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f184e560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f184e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f184aa20"/>
        <function-ref name="fired" scoped="" ref="0x7f85f184b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f184bda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f184b920"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f18494a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1849020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f184b4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f184d1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f184a410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f184d680"/>
        <function-ref name="stop" scoped="" ref="0x7f85f184db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f1847020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f1847020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1843630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1845a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f1844920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f18444a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f1842020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1843ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1844020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1847c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f1843020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f1845110"/>
        <function-ref name="stop" scoped="" ref="0x7f85f18455e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f183d510" loc="31:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f183d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f183d890"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f183da20"/>
        <function-ref name="start" scoped="" ref="0x7f85f183dbb0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f183dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f85f18396e0" loc="36:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f18396e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f85f1839a60"/>
        <function-ref name="initiate" scoped="" ref="0x7f85f1839bf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f85f1839d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f85f1837930" loc="35:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f85f1837930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f85f1837cb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f85f1837e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f85f183cd40" loc="33:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f85f183cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f183b0e0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f183b270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f85f18389d0" loc="41:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f85f18389d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f1838d50"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1836020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f85f183b560" loc="34:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f183b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f85f183b8e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f85f183ba70"/>
        <function-ref name="delRoute" scoped="" ref="0x7f85f183bc00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f85f183bd90"/>
        <function-ref name="addRoute" scoped="" ref="0x7f85f183a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f85f1838130" loc="40:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f1838130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f18384b0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1838640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f183c540" loc="32:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f183c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f183c8c0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f183ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f1832a10" loc="17:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f1832a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f1832d90"/>
        <function-ref name="changed" scoped="" ref="0x7f85f1831020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f18311b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f1831340"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f18314d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f1831660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f18317f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f1830bf0" loc="20:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f1830bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f182f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f182f1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f182f340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f182f4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f182f660"/>
        <function-ref name="get" scoped="" ref="0x7f85f182f7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f182f980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f182e020"/>
        <function-ref name="set" scoped="" ref="0x7f85f182fb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f182fca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f182fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7f85f1831ae0" loc="18:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7f85f1831ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1831e60"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1830020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f85f18302d0" loc="19:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f85f18302d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f85f1830650"/>
        <function-ref name="delTLV" scoped="" ref="0x7f85f18307e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f85f1830970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f18321d0" loc="14:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f18321d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1832550"/>
        <function-ref name="recv" scoped="" ref="0x7f85f18326e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f85f1817890" loc="22:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f85f1817890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f85f1817c10"/>
        <function-ref name="initiate" scoped="" ref="0x7f85f1817da0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f85f1816020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7f85f18141d0" loc="28:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f85f18141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1814550"/>
        <function-ref name="recv" scoped="" ref="0x7f85f18146e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1814870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f85f180d790" loc="31:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85f180d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f85f28cf110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f180b860"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f180ccb0"/>
        <function-ref name="empty" scoped="" ref="0x7f85f180c3b0"/>
        <function-ref name="put" scoped="" ref="0x7f85f180b170"/>
        <function-ref name="size" scoped="" ref="0x7f85f180c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7f85f17f5e40" loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f85f17f5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f17f41e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f17f4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f85f1818a50" loc="21:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f85f1818a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f85f1818dd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f85f1817020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f85f1816a90" loc="24:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f85f1816a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1816e10"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1815020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f18152a0" loc="25:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f18152a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f1815620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f1814b20" loc="29:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f1814b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f180e020"/>
        <function-ref name="changed" scoped="" ref="0x7f85f180e1b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f180e340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f180e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f180e660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f180e7f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f180e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7f85f18091c0" loc="34:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7f85f18091c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1806630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1808c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f18079d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f1807550"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f1804020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1806ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f18070d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1809db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f1806020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f18082e0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f18087b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f85f1834d20" loc="20:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f1834d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f85f18180e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f85f1818270"/>
        <function-ref name="delRoute" scoped="" ref="0x7f85f1818400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f85f1818590"/>
        <function-ref name="addRoute" scoped="" ref="0x7f85f1818720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f85f180ec30" loc="30:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f85f180ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f85f180d020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f85f180d1b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f85f180d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f1816290" loc="23:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f1816290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1816610"/>
        <function-ref name="recv" scoped="" ref="0x7f85f18167a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f85f1787020" loc="11:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f85f1787020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f17873a0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1787530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f17876c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f85f1780720" loc="15:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f85f1780720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1780aa0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1780c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1780dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f85f1788020" loc="10:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f1788020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f85f1788d00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f85f1788530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f85f17886c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f85f1788850"/>
        <function-ref name="matchContext" scoped="" ref="0x7f85f17889e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f85f17883a0"/>
        <function-ref name="getContext" scoped="" ref="0x7f85f1788b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f1787980" loc="12:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f1787980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f1787d00"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1786020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f85f1785da0" loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f85f1785da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f177c180"/>
        <function-ref name="recv" scoped="" ref="0x7f85f177c310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f177c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f85f1770300" loc="45:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f85f1770300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f85f1770780"/>
        <function-ref name="changed" scoped="" ref="0x7f85f1770910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f1770aa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f1770c30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f1770dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f85f1773450" loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f1773450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f17737d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f1773960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f85f1772900" loc="43:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f85f1772900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1772c80"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1772e10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1771020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7f85f17790a0" loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7f85f17790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1779420"/>
        <function-ref name="recv" scoped="" ref="0x7f85f17795b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f17712d0" loc="44:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f17712d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f1771650"/>
        <function-ref name="changed" scoped="" ref="0x7f85f17717e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f1771970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f1771b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f1771c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f1771e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f1770020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7f85f177a060" loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7f85f177a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f177a3e0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f177a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f85f177c7a0" loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f177c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f85f177b4d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f85f177ccb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f85f177ce40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f85f177b020"/>
        <function-ref name="matchContext" scoped="" ref="0x7f85f177b1b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f85f177cb20"/>
        <function-ref name="getContext" scoped="" ref="0x7f85f177b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7f85f17798a0" loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7f85f17798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1779c20"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1779db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7f85f177a860" loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7f85f177a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f177abe0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f177ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7f85f1778270" loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7f85f1778270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f17746e0"/>
        <function-ref name="fired" scoped="" ref="0x7f85f1777cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f1776a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f17765f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f1773020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1774b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1776170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1778e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f17740d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f1777360"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1777830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f85f1773c50" loc="42:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f1773c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f85f1772020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f85f17721b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f85f1772340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f85f17724d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f85f1772660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7f85f173c380" loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7f85f173c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f173c700"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f173c890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f177b790" loc="30:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f177b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f177bb10"/>
        <function-ref name="stop" scoped="" ref="0x7f85f177bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f16e1a30" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f16e1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f16e1dd0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f16ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7f85f16dc280" loc="50:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7f85f16dc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f16dc600"/>
        <function-ref name="recv" scoped="" ref="0x7f85f16dc790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f16db2d0" loc="54:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f16db2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f16db650"/>
        <function-ref name="changed" scoped="" ref="0x7f85f16db7e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f16db970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f16dbb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f16dbc90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f16dbe20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f16da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f16da2a0" loc="55:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f16da2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f16da620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f16da7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f16da940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f16daad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f16dac60"/>
        <function-ref name="get" scoped="" ref="0x7f85f16dadf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f16d9020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f16d9660"/>
        <function-ref name="set" scoped="" ref="0x7f85f16d91b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f16d9340"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f16d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f85f16dca80" loc="53:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f16dca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f16dce00"/>
        <function-ref name="recv" scoped="" ref="0x7f85f16db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f85f00699f0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f85f00699f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0069d70"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0067020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f00691f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f00691f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0069590"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0069720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f16aa9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f16aa9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f16aad50"/>
        <function-ref name="recv" scoped="" ref="0x7f85f16a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f85f005e820" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f85f005e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f005eba0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f005ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f005e020" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f005e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f005e3c0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f005e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f16a89b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f16a89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f16a8d50"/>
        <function-ref name="recv" scoped="" ref="0x7f85f16a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f85f0053020" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f85f0053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f00533a0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0053530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f00546a0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f00546a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0054a40"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0054bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f16a69b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f16a69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f16a6d50"/>
        <function-ref name="recv" scoped="" ref="0x7f85f16a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f85f00495e0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f85f00495e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0049960"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0049af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f004adb0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f004adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0049180"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0049310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f16a47b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f16a47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f16a0c40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f16a2260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f16a0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f16a2b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f169f590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f169f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f16a26e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f16a3400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f16a0630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f16a38d0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f16a3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f168c020" loc="35:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f168c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f168c3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f168c530"/>
        <function-ref name="start" scoped="" ref="0x7f85f168c6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f168c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f85f168a020" loc="37:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f168a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f85f16938c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f85f1692090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1689170"/>
        <function-ref name="get" scoped="" ref="0x7f85f168ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f85f168caf0" loc="36:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f85f168caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f168ce70"/>
        <function-ref name="recv" scoped="" ref="0x7f85f168b030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f168b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f1684230" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f1684230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f16845b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f85f1684870" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f1684870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f1684bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f1684d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f1683020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f16831b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f1683340"/>
        <function-ref name="get" scoped="" ref="0x7f85f16834d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f1683660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f1683ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f16837f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f1683980"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f1683b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f166b6d0" loc="43:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f166b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f166ba50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f166bbe0"/>
        <function-ref name="start" scoped="" ref="0x7f85f166bd70"/>
        <function-ref name="stop" scoped="" ref="0x7f85f166a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7f85f16465f0" loc="68:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7f85f16465f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1644710"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f1645b10"/>
        <function-ref name="empty" scoped="" ref="0x7f85f1645210"/>
        <function-ref name="put" scoped="" ref="0x7f85f1644020"/>
        <function-ref name="size" scoped="" ref="0x7f85f1645690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f85f1669940" loc="49:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f1669940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f85f16938c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f85f1692090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1668a70"/>
        <function-ref name="get" scoped="" ref="0x7f85f1668560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f85f1667060" loc="53:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f85f1667060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f16673e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f1667570"/>
        <function-ref name="start" scoped="" ref="0x7f85f1667700"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1667890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f85f166ad60" loc="47:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f85f166ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1669180"/>
        <function-ref name="recv" scoped="" ref="0x7f85f1669310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f16694a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7f85f1659020" loc="62:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f85f1659020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f85f16593a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f85f1659530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f85f1649cb0" loc="64:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f1649cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f85f16560a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f85f1656230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f85f16563c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f85f1656550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f166a720" loc="44:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f166a720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f166aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f85f163fc50" loc="70:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f85f163fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f85f163dae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f85f163b880"/>
        <function-ref name="element" scoped="" ref="0x7f85f163a020"/>
        <function-ref name="full" scoped="" ref="0x7f85f163ece0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f163d660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f163b1d0"/>
        <function-ref name="empty" scoped="" ref="0x7f85f163e860"/>
        <function-ref name="size" scoped="" ref="0x7f85f163d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7f85f163a900" loc="73:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7f85f163a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f1636e80"/>
        <function-ref name="fired" scoped="" ref="0x7f85f16374a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f1636260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f1637da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f16357a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f1635320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f1637920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f1639560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f1636870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f1639a30"/>
        <function-ref name="stop" scoped="" ref="0x7f85f1637020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f85f13bd6e0" loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f85f13bd6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f13bda60"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f13bdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f85f16644e0" loc="60:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f16644e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f85f165a340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f85f16649f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f85f1664b80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f85f1664d10"/>
        <function-ref name="matchContext" scoped="" ref="0x7f85f165a020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f85f1664860"/>
        <function-ref name="getContext" scoped="" ref="0x7f85f165a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7f85f1656a10" loc="67:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7f85f1656a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1648c00"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f1648090"/>
        <function-ref name="empty" scoped="" ref="0x7f85f164e750"/>
        <function-ref name="put" scoped="" ref="0x7f85f1648510"/>
        <function-ref name="size" scoped="" ref="0x7f85f164ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f1635bc0" loc="75:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f1635bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f1634020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f16341b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f1634340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f16344d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f1634660"/>
        <function-ref name="get" scoped="" ref="0x7f85f16347f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f1634980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f1633020"/>
        <function-ref name="set" scoped="" ref="0x7f85f1634b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f1634ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f1634e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7f85f16650f0" loc="56:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f85f16650f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1665470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1665600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1665790"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1665920"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1665ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7f85f1667bd0" loc="55:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f85f1667bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1666020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f16661b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1666340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f16664d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f1666660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7f85f1658020" loc="63:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f85f1658020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f85f16583a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f85f1658530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f85f16586c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f85f1658850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f85f16589e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7f85f1642150" loc="69:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7f85f1642150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f163f260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f1641660"/>
        <function-ref name="empty" scoped="" ref="0x7f85f1642d40"/>
        <function-ref name="put" scoped="" ref="0x7f85f1641ae0"/>
        <function-ref name="size" scoped="" ref="0x7f85f16411e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7f85f1665e20" loc="57:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f85f1665e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f16641c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f138e420" loc="19:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f138e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f138e7a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f138e930"/>
        <function-ref name="start" scoped="" ref="0x7f85f138eac0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f138ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f85f1389a30" loc="23:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f85f1389a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1389db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f85f138a020" loc="21:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f85f138a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f138a3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f138a530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f138a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f138a850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f138a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f85f138ad00" loc="22:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f85f138ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f13890a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1389230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f13893c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1389550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f13896e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f1388b40" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f1388b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f1385020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f13851b0"/>
        <function-ref name="start" scoped="" ref="0x7f85f1385340"/>
        <function-ref name="stop" scoped="" ref="0x7f85f13854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f85f136d170" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f136d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f85f136d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f85f1375470" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f85f1375470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f85f13757f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f85f1375980"/>
        <function-ref name="getRetries" scoped="" ref="0x7f85f1375b10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f85f1375ca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f85f1375e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f85f1376640" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1376640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f13769c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f1376b50"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f1376ce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f1376e70"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f137f030"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f137f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f85f1382d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f85f1382d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f13810e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1381270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1381400"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1381590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1381720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f85f136d7f0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f136d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f85f136db70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f85f136dd00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f85f1375020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f85f13751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f85f1383820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f85f1383820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1383ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f85f137e080" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f137e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f137e400"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f137e590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f137e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1385d00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1385d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f13840a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1384230"/>
        <function-ref name="request" scoped="" ref="0x7f85f13843c0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1384550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f13846e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f85f1384a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f85f1384a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1384d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1383020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f13831b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1383340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f13834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f85f1382020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f85f1382020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f13823a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f1382530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f13826c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1382850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f13829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f85f1381a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f1381a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1381e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f136eb20" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f136eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f136a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f136a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f85f136a340"/>
        <function-ref name="stop" scoped="" ref="0x7f85f136a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f85f1360230" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f1360230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f85f13605b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f85f1360740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f85f13608d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f85f1360a60"/>
        <function-ref name="setCca" scoped="" ref="0x7f85f1360bf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f85f1360d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f136a790" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f136a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f136ab10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f136aca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f136ae30"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1369020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f13691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f1369490" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f1369490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1369810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f1368d90" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f1368d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f135e180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f135e310"/>
        <function-ref name="start" scoped="" ref="0x7f85f135e4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f135e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f85f135d650" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f135d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f85f135d9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f85f135db60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f85f135dcf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f85f135de80"/>
        <function-ref name="setCca" scoped="" ref="0x7f85f135c030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f85f135c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f85f1359e00" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f85f1359e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f85f13581c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f85f1358350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f85f13584e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f85f1358670"/>
        <function-ref name="setCca" scoped="" ref="0x7f85f1358800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f85f1358990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f85f134fb00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f134fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f134fe80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f134e030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f134e1c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f134e350"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f134e4e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f134e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f85f1359080" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f85f1359080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1359400"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1359590"/>
        <function-ref name="modify" scoped="" ref="0x7f85f1359720"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f13598b0"/>
        <function-ref name="resend" scoped="" ref="0x7f85f1359a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f135e8f0" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f135e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f135ec70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f135ee00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f135d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f135d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f135d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f85f1358c60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f1358c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f1350020"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f13501b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f85f135a3e0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f85f135a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f135a760"/>
        <function-ref name="stop" scoped="" ref="0x7f85f135a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f1347130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1347130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f13474b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f1347640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f13477d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f85f135b1a0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f85f135b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f85f135b520"/>
        <function-ref name="rfOff" scoped="" ref="0x7f85f135b6b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f85f135b840"/>
        <function-ref name="startVReg" scoped="" ref="0x7f85f135b9d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f85f135bb60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f85f135bcf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f85f135be80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f85f135a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f1350470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f1350470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f13507f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f1350980"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f1350b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f1350ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f1350e30"/>
        <function-ref name="get" scoped="" ref="0x7f85f134f020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f134f1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f134f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f85f134f340"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f134f4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f134f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f85f135c4b0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f135c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f135c830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f135c9c0"/>
        <function-ref name="request" scoped="" ref="0x7f85f135cb50"/>
        <function-ref name="granted" scoped="" ref="0x7f85f135cce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f135ce70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f85f1347b90" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f85f1347b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f134d0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f134d230"/>
        <function-ref name="isState" scoped="" ref="0x7f85f134d3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f134d550"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f134d6e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f134d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f85f13425d0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f85f13425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f1342950"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1342ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f85f1343660" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f85f1343660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f13439e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1343b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f85f1344730" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f85f1344730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f1344ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1344c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f85f12f6020" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f12f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f85f12f63a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f85f12f6530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f85f12f66c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f85f12f6850"/>
        <function-ref name="setCca" scoped="" ref="0x7f85f12f69e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f85f12f6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f85f12f5ca0" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f85f12f5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f85f12f40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f85f12f8300" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f85f12f8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f12f8680"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f12f8810"/>
        <function-ref name="modify" scoped="" ref="0x7f85f12f89a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f12f8b30"/>
        <function-ref name="resend" scoped="" ref="0x7f85f12f8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f12fb9b0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f12fb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f12fbd30"/>
        <function-ref name="stop" scoped="" ref="0x7f85f12f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f85f12f4470" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f85f12f4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f85f12f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f85f12eacf0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f85f12eacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f85f12e90a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f85f12e9230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f85f12e93c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f85f12e9550"/>
        <function-ref name="setCca" scoped="" ref="0x7f85f12e96e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f85f12e9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f85f12e0200" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f85f12e0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f85f12df7c0"/>
        <function-ref name="clear" scoped="" ref="0x7f85f12d7020"/>
        <function-ref name="isValid" scoped="" ref="0x7f85f12df090"/>
        <function-ref name="set" scoped="" ref="0x7f85f12d7750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f85f12c3990" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f12c3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c3d10"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f85f12c2380" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f12c2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c2700"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c2890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f85f12e9c90" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f85f12e9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f85f12e80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f85f12c7e60" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f85f12c7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12c6210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f85f12d51e0" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f85f12d51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f85f12d5560"/>
        <function-ref name="disable" scoped="" ref="0x7f85f12d56f0"/>
        <function-ref name="captured" scoped="" ref="0x7f85f12d5880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f85f12d5a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f85f12e6020" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f85f12e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f12e4870"/>
        <function-ref name="fired" scoped="" ref="0x7f85f12e5840"/>
        <function-ref name="startAt" scoped="" ref="0x7f85f12e4220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f12e5d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f85f12e4d30"/>
        <function-ref name="start" scoped="" ref="0x7f85f12e6e30"/>
        <function-ref name="stop" scoped="" ref="0x7f85f12e5380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f85f12e3210" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f12e3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f12e3590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f12e3720"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f12e38b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f12e3a40"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f12e3bd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f12e3d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f85f12c9d80" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f12c9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c8180"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f85f12c86b0" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f12c86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c8a30"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f85f12bc780" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f12bc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f12bcb00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f85f12bcc90"/>
        <function-ref name="sfd" scoped="" ref="0x7f85f12bce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f12ea020" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f12ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f12ea3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f12ea530"/>
        <function-ref name="modify" scoped="" ref="0x7f85f12ea6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f12ea850"/>
        <function-ref name="resend" scoped="" ref="0x7f85f12ea9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f85f12ca4e0" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f12ca4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f12ca860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f12ca9f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f12cab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f85f12c65c0" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f12c65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12c6940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f85f12ce080" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f85f12ce080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f12ce400"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f12ce590"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f12ce720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f12ce8b0"/>
        <function-ref name="get" scoped="" ref="0x7f85f12cea40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f12cebd0"/>
        <function-ref name="set" scoped="" ref="0x7f85f12ced60"/>
        <function-ref name="clr" scoped="" ref="0x7f85f12cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f12eb020" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f12eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f12eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f12e10c0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f12e10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f12e1440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f12e15d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f12e1760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f85f12cd570" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f12cd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f12cd8f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f85f12cda80"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f12cdc10"/>
        <function-ref name="set" scoped="" ref="0x7f85f12cdda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f85f12c6d00" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f12c6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c5410"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c55a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f85f12cb6e0" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f85f12cb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f12cba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f12cbbf0"/>
        <function-ref name="request" scoped="" ref="0x7f85f12cbd80"/>
        <function-ref name="granted" scoped="" ref="0x7f85f12ca020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f12ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f85f12d5d60" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f85f12d5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f12d4210"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f12d43a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f12d4530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f12d46c0"/>
        <function-ref name="get" scoped="" ref="0x7f85f12d4850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f12d49e0"/>
        <function-ref name="set" scoped="" ref="0x7f85f12d4b70"/>
        <function-ref name="clr" scoped="" ref="0x7f85f12d4d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f85f12c2bf0" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f12c2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c1020"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f85f12c1530" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f85f12c1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c18b0"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f85f12c7020" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f12c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f85f12cc370" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f85f12cc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f12cc6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f12cc880"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f12cca10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f12ccba0"/>
        <function-ref name="get" scoped="" ref="0x7f85f12ccd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f12cb020"/>
        <function-ref name="set" scoped="" ref="0x7f85f12cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f12cb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f12c0110" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f12c0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f12c0490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f12c0620"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f12c07b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f12c0940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f12c0ad0"/>
        <function-ref name="get" scoped="" ref="0x7f85f12c0c60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f12c0df0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f12bf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f12bf020"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f12bf1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f12bf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f85f12c30c0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f12c30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12c3440"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f12eb6a0" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f12eb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f12eba20"/>
        <function-ref name="stop" scoped="" ref="0x7f85f12ebbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f85f12c9020" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f85f12c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f12c93a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f12c9530"/>
        <function-ref name="write" scoped="" ref="0x7f85f12c96c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f12c9850"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f12c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f85f12c7730" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f85f12c7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12c7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f85f12c5930" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f85f12c5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12c5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f85f12e84b0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f85f12e84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f85f12e8830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f85f1220c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f1220c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121e210"/>
        <function-ref name="write" scoped="" ref="0x7f85f121e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f85f1229020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f85f1229020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f85f1223c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f1223c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1222020"/>
        <function-ref name="write" scoped="" ref="0x7f85f12221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f85f121d670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f121d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f121db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f85f1216e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f85f1216e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1215210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f85f121de50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f85f121de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121c210"/>
        <function-ref name="write" scoped="" ref="0x7f85f121c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f85f12092f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f85f12092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1209670"/>
        <function-ref name="write" scoped="" ref="0x7f85f1209800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f85f120c2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f120c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120c670"/>
        <function-ref name="write" scoped="" ref="0x7f85f120c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f85f1228370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f85f1228370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12286f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f85f1212670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f85f1212670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12129f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1212b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f85f120d2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f120d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120d670"/>
        <function-ref name="write" scoped="" ref="0x7f85f120d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f85f1222c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f85f1222c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1221020"/>
        <function-ref name="write" scoped="" ref="0x7f85f12211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f85f1221c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f1221c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1220020"/>
        <function-ref name="write" scoped="" ref="0x7f85f12201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f85f1217670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f85f1217670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12179f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1217b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f85f121ae50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f85f121ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1219210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f85f121c670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f85f121c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f121cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f122c8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f122c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f122cc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f122ce00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f122a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f85f1227d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f1227d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12260a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f85f1226370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f85f1226370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f85f1210a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f1210a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1210df0"/>
        <function-ref name="write" scoped="" ref="0x7f85f120f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f85f1226ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f85f1226ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1226e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f85f120dad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f120dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120de50"/>
        <function-ref name="write" scoped="" ref="0x7f85f120c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f85f1227060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f1227060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12273e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f85f1213e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f85f1213e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1212210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f85f1221480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f1221480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1221800"/>
        <function-ref name="write" scoped="" ref="0x7f85f1221990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f85f1222480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f1222480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1222800"/>
        <function-ref name="write" scoped="" ref="0x7f85f1222990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f85f122a940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f85f122a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f122acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f85f1214e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f1214e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1213210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f85f1215670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f85f1215670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12159f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1215b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f85f1213670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f1213670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12139f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1213b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f85f120bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f85f120bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120be50"/>
        <function-ref name="write" scoped="" ref="0x7f85f1209020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f85f120cad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f120cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120ce50"/>
        <function-ref name="write" scoped="" ref="0x7f85f120b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f85f1219670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f85f1219670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12199f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1219b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f85f1215e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f85f1215e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1214210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f85f120ead0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f85f120ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120ee50"/>
        <function-ref name="write" scoped="" ref="0x7f85f120d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f85f121b670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f85f121b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f121bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f85f1209ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f85f1209ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1209e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1208020"/>
        <function-ref name="write" scoped="" ref="0x7f85f12081b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1208340"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f12084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f85f122a2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f122a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f122a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f85f1223490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f85f1223490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1223810"/>
        <function-ref name="write" scoped="" ref="0x7f85f12239a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f85f1220480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f1220480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1220800"/>
        <function-ref name="write" scoped="" ref="0x7f85f1220990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f85f1217e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f85f1217e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1216210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f85f121ce50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f85f121ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121b210"/>
        <function-ref name="write" scoped="" ref="0x7f85f121b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f85f1216670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f85f1216670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12169f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1216b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f85f121e670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f85f121e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f121eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f85f1229670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f85f1229670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12299f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f85f121ee50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f121ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121d210"/>
        <function-ref name="write" scoped="" ref="0x7f85f121d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f122dc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f122dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f122c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f122c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f85f122c340"/>
        <function-ref name="granted" scoped="" ref="0x7f85f122c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f122c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f85f1224160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f85f1224160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12244e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f85f1224e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f85f1224e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12231c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f85f120e2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f85f120e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120e670"/>
        <function-ref name="write" scoped="" ref="0x7f85f120e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f85f120fad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f85f120fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120fe50"/>
        <function-ref name="write" scoped="" ref="0x7f85f120e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f85f12276b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f12276b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1227a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f85f120f2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f120f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120f670"/>
        <function-ref name="write" scoped="" ref="0x7f85f120f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f85f120b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f85f120b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f120b670"/>
        <function-ref name="write" scoped="" ref="0x7f85f120b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f85f1219e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f1219e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1217210"/>
        <function-ref name="write" scoped="" ref="0x7f85f12173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f85f1214670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f85f1214670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f12149f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1214b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f85f1229cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f85f1229cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f12280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f85f12289c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f85f12289c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1228d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f85f121be50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f85f121be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121a210"/>
        <function-ref name="write" scoped="" ref="0x7f85f121a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f85f12247b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f85f12247b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f1224b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f85f121a670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f85f121a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f121a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f85f121ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f85f1212e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f85f1212e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f1210610"/>
        <function-ref name="write" scoped="" ref="0x7f85f12107a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f85f12087a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f85f12087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f1208b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f1208cb0"/>
        <function-ref name="write" scoped="" ref="0x7f85f1208e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f1207020"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f12071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f85f11fcdf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f11fcdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f11f91c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f85f11f9350"/>
        <function-ref name="sfd" scoped="" ref="0x7f85f11f94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f11f97c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f11f97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f11f9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f85f11f8020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f85f11f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f85f11f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f11fc5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f11fc5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f11fc940"/>
        <function-ref name="stop" scoped="" ref="0x7f85f11fcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f85f11f1380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f85f11f1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f11f1700"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f11f1890"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f11f1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f11f1bb0"/>
        <function-ref name="get" scoped="" ref="0x7f85f11f1d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f11f0020"/>
        <function-ref name="set" scoped="" ref="0x7f85f11f01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f11f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f85f11e9b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f85f11e9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f85f11e8020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f85f11e81b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f85f11e8340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f85f11e84d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f85f11e8660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f85f11e87f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f85f11e8980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f85f11e8b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f85f11e8ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f85f11e8e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f85f11e7020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f85f11e71b0"/>
        <function-ref name="sync" scoped="" ref="0x7f85f11e7340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f85f11e75d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f85f11e7760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f85f11d29d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f85f11d29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f11d2d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f11d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f85f11e7d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f85f11e7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f85f11e5330"/>
        <function-ref name="clear" scoped="" ref="0x7f85f11e5a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f85f11e6ba0"/>
        <function-ref name="set" scoped="" ref="0x7f85f11e3210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f85f11f06b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f85f11f06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f11f0a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f11f0bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f11f0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f11ef020"/>
        <function-ref name="get" scoped="" ref="0x7f85f11ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f11ef340"/>
        <function-ref name="set" scoped="" ref="0x7f85f11ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f85f11ef660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f85f11e2cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f11e2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f11e10a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f11e1230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f85f11e1590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f11e1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f11e1910"/>
        <function-ref name="write" scoped="" ref="0x7f85f11e1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f85f11e06d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f85f11e06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f11e0a50"/>
        <function-ref name="write" scoped="" ref="0x7f85f11e0be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f85f11ea330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f11ea330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f11ea6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f11ea840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f11ea9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f11eab60"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f11eacf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f11eae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f85f11f4550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f85f11f4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f11f48d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f85f11f4a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f85f11f4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f85f11eb3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f85f11eb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f11eb720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f85f11f2020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f85f11f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f11f23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f11f2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f11f26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f11f2850"/>
        <function-ref name="get" scoped="" ref="0x7f85f11f29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f11f2b70"/>
        <function-ref name="set" scoped="" ref="0x7f85f11f2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f85f11f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f85f11df020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f11df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f11df3a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f11df530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f11f5620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f11f5620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f11f59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f11e91e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11e91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f11e9560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f11e96f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f11e9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f11f3020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f11f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f11f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f85f11ee6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f85f11ee6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f11eea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f11eebf0"/>
        <function-ref name="request" scoped="" ref="0x7f85f11eed80"/>
        <function-ref name="granted" scoped="" ref="0x7f85f11ec020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f11ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f85f11e1e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f11e1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f11e01c0"/>
        <function-ref name="write" scoped="" ref="0x7f85f11e0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f85f11ec530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f85f11ec530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f11ec8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f11eca40"/>
        <function-ref name="write" scoped="" ref="0x7f85f11ecbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f11ecd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f11eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f85f11df8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f11df8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f11dfe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f85f11f37c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f85f11f37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f85f11f3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f11de150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f11de150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f11de4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f11de660"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f11de7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f11de980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f11deb10"/>
        <function-ref name="get" scoped="" ref="0x7f85f11deca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f11dee30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f11dd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f11dd020"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f11dd1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f11dd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f85f11e23e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f11e23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f11e2760"/>
        <function-ref name="write" scoped="" ref="0x7f85f11e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f85f11e3b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f85f11e3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f11e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f85f11efa50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f85f11efa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f11efdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f85f11ee020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f85f11ee1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f85f11ee340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f85f11ebad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f11ebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f11ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f11f5ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f11f5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f11f40a0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f11f4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f85f1171a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f1171a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f85f1171df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f85f1176670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1176670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f11769f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f1176b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f1176d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f1173020"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f11731b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f1173340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f85f1170550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f85f1170550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f85f116fb00"/>
        <function-ref name="clear" scoped="" ref="0x7f85f116e2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f85f116f3d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f116e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f85f11710c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f11710c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1171440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f11715d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f1171760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f85f1168480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f1168480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1168800"/>
        <function-ref name="isSet" scoped="" ref="0x7f85f1168990"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1168b20"/>
        <function-ref name="set" scoped="" ref="0x7f85f1168cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f85f116c660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f85f116c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f85f116bce0"/>
        <function-ref name="clear" scoped="" ref="0x7f85f116a460"/>
        <function-ref name="isValid" scoped="" ref="0x7f85f116b5b0"/>
        <function-ref name="set" scoped="" ref="0x7f85f116ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f85f11736e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f85f11736e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f1173a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f1173bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f1173d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f85f1161020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f85f1161020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f85f11613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f85f1167d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f1167d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f11630e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f1163270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f1163400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f1163590"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f1163720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f11638b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f85f11584a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f11584a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f1158820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f11589b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1158b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1158cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f1158e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f85f1161a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f85f1161a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f85f115f020"/>
        <function-ref name="clear" scoped="" ref="0x7f85f115f750"/>
        <function-ref name="isValid" scoped="" ref="0x7f85f11608d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f115fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f85f1162640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1162640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f11629c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f1162b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f1162ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f85f11598b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f85f11598b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1159c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f85f1159dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1158020"/>
        <function-ref name="set" scoped="" ref="0x7f85f11581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f85f11573b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f85f11573b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1156020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f85f11566e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f85f11566e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f11553d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f85f115daf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f85f115daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f85f115b0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f85f115b800"/>
        <function-ref name="isValid" scoped="" ref="0x7f85f115c970"/>
        <function-ref name="set" scoped="" ref="0x7f85f1159020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f85f1163c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f85f1163c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f1162020"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f11621b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f1162340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f85f1106cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f85f1106cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1105980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f85f1104020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f1104020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f1104e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f1103800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f1103340"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f1103cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f10ff0b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f10ff0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f10fb630"/>
        <function-ref name="fired" scoped="" ref="0x7f85f10feb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f10fd920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f10fd4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f10fa020"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f10fbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f10fd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f10ffca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f10fb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f10fe1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f10fe680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f85f10ea620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f85f10ea620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10eaba0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ead30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f85f10f5940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f85f10f5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f85f10ed620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f85f10ed620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10ed9a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10edb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f85f10e8060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f85f10e8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e83e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f85f10e1840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f85f10e1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e1bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f85f10e8840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f85f10e8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e8bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e8d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f85f10d5c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f85f10d5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d4020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f85f10d7c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f85f10d7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d6020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f85f10f4cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f85f10f4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f85f10dc060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f85f10dc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10dc3e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10dc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f85f10d8c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f85f10d8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d7020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f85f10ec620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f85f10ec620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10ec9a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ecb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f85f10eb620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f85f10eb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10eb9a0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ebb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f85f10e2060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f85f10e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e23e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f85f10e4840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f85f10e4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e4bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f85f10e6060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f85f10e6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e63e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f85f10f62b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f85f10f62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f85f10f6630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f85f10f67c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f85f10f6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f85f10f16b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f85f10f16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f1a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f85f10f1d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f85f10f1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f85f10db480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f85f10db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10db800"/>
        <function-ref name="write" scoped="" ref="0x7f85f10db990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f85f10f0490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f85f10f0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f85f10d7480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f85f10d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d7800"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f85f10f29c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f85f10f29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f2d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f85f10dd840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f85f10dd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10ddbc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ddd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f85f10ece00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f85f10ece00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10eb1c0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10eb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f85f10ede00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f85f10ede00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10ec1c0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ec350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f85f10f52f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f85f10f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f85f10de840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f85f10de840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10debc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ded50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f85f10df060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f85f10df060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10df3e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10df570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f85f10dd060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f85f10dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10dd3e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10dd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f85f10d5480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f85f10d5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d5800"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f85f10d6480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f85f10d6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d6800"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f85f10e3060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f85f10e3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e33e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f85f10df840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f85f10df840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10dfbc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10dfd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f85f10d8480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f85f10d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d8800"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f85f10e5060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f85f10e5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e53e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f85f10d4480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f85f10d4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f10d4800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f10d4990"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d4b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f10d4cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f10d4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f85f10f6c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f85f10f6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f85f10efe00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f85f10efe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10ed1c0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ed350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f85f10ebe00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f85f10ebe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10ea1c0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10ea350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f85f10e2840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f85f10e2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e2bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f85f10e6840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f85f10e6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e6bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f85f10e1060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f85f10e1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e13e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f85f10e9060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f85f10e9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e93e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f85f10f4020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f85f10f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f85f10e9840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f85f10e9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e9bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f10f7520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f10f7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f10f78a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f10f7a30"/>
        <function-ref name="request" scoped="" ref="0x7f85f10f7bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f10f7d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f10f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f85f10f0ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f85f10f0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f85f10ef7b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f85f10ef7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10efb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f85f10dac60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f85f10dac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d8020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f85f10da480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f85f10da480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10da800"/>
        <function-ref name="write" scoped="" ref="0x7f85f10da990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f85f10f1060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f85f10f1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f13e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f85f10dbc60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f85f10dbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10da020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f85f10d6c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f85f10d6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10d5020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f85f10e3840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f85f10e3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e3bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f85f10de060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f85f10de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10de3e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10de570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f85f10f4670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f85f10f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f85f10f2370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f85f10f2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10f26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f85f10e5840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f85f10e5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e5bc0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f85f10ef160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f85f10ef160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f85f10ef4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f85f10e4060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f85f10e4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10e43e0"/>
        <function-ref name="write" scoped="" ref="0x7f85f10e4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f85f10dc840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f85f10dc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f85f10db020"/>
        <function-ref name="write" scoped="" ref="0x7f85f10db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f85f10d3160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f85f10d3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f85f10d34e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f85f10d3670"/>
        <function-ref name="write" scoped="" ref="0x7f85f10d3800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f85f10d3990"/>
        <function-ref name="readDone" scoped="" ref="0x7f85f10d3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f10ac390" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f10ac390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f10ac710"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f10ac8a0"/>
        <function-ref name="isState" scoped="" ref="0x7f85f10aca30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f10acbc0"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f10acd50"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f10ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f10a2b50" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f10a2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f10a1020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f10a11b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f10a1340"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f10a14d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f10a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f10a5dd0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f10a5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f10a2180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f10a2310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f10a24a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f10a2630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f10a27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f109db40" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f109db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1098020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f10981b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1098340"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f10984d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1098660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f109e660" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f109e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f109e9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f109eb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f109ed00"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f109d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f109d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f85f1097760" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f85f1097760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f85f1097ae0"/>
        <function-ref name="rand32" scoped="" ref="0x7f85f1097c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f109d430" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f109d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f109d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f1095020" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1095020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f10953a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f1095530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f10956c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f85f10988f0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f10988f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f1098c70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f1098e00"/>
        <function-ref name="isState" scoped="" ref="0x7f85f1097020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f10971b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f1097340"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f10974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f1085690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f1085690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f1085a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f1085ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f85f1085d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f1084020"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f10841b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f1084340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f85f107e950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f85f107e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f107ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f1081aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f1081aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1081e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f85f107e200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f85f107e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f107e580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f85f10793f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f85f10793f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1079770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f107ab70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f107ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f1079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f107de30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f107de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f107a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f1079a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f1079a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1079df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f1078020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f10781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f85f107a570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f85f107a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f107a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f85f104a020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f85f104a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f104a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f104a6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f104a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f104aa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f104abc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f104ad50"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1049020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f10491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f104f8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f104f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f104fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f104fdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f104e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f104e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f104e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f85f104ec90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f85f104ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f104d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f104d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f104d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f104d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f104d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f104e5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f104e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f104e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f1050be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f1050be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f104f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f104f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f85f104f340"/>
        <function-ref name="granted" scoped="" ref="0x7f85f104f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f104f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f85f104da50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f104da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f104ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f85f104b170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f85f104b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f104b4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f104b680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f104b810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f104b9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f104bb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f1041d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f1041d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1040180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1040310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f10404a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1040630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f10407c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f85f1040b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f85f1040b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f103f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f85f1011db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f85f1011db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f1010180"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f1010310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f85f103f2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f103f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f103f670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f103f800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f103f990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f103fb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f103fcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f103fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f85f1043a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f85f1043a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1043da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f1042020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f10421b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1042340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f10424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f85f103db70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85f103db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f85f103c020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f85f103c1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f85f103c340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f103c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f103d170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f103d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f103d4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f103d680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f103d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f85f1043370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f85f1043370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f10436f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f10457b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f10457b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f1045b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f1045cc0"/>
        <function-ref name="request" scoped="" ref="0x7f85f1045e50"/>
        <function-ref name="granted" scoped="" ref="0x7f85f1044020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f10441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f85f10444d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f85f10444d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f1044850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f10449e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1044b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f1044d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f1043020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f85f1042840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f85f1042840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f1042bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f85f1041020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f85f1041020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f10413a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f1041530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f10416c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f1041850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f10419e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0ff1dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0ff1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f0ff0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f85f0ff0410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f85f0ff0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f85f0ff0790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f85f0ff0920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f85f0ff0ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f0ff0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f0fe5b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f0fe5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0fe4020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0fe41b0"/>
        <function-ref name="start" scoped="" ref="0x7f85f0fe4340"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0fe44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f0fe3860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f0fe3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0fe3be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fe3d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0fe2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0fe21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0fe2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f85f0fe2690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f85f0fe2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0fe2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f0fe9ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f0fe9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0fe60a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fe6230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0fe63c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0fe6550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0fe66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f85f0fe5080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f0fe5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f85f0fe5400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f85f0fe5590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f85f0fe5720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f85f0fe58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f85f0fe4800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f85f0fe4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f0fe4b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f0fe4d10"/>
        <function-ref name="isState" scoped="" ref="0x7f85f0fe3020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f0fe31b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f0fe3340"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f0fe34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f85f0fe2d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f85f0fe2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0fe0180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0fe0310"/>
        <function-ref name="start" scoped="" ref="0x7f85f0fe04a0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0fe0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f0fe6980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f0fe6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0fe6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f85f0fdd2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f0fdd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f85f0fdd650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f85f0fdd7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f85f0fdd970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f85f0fddb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f0fdf580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f0fdf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f0fdf900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f0fdfa90"/>
        <function-ref name="isState" scoped="" ref="0x7f85f0fdfc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f0fdfdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f0fde020"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f0fde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f0fd0d70" loc="47:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f0fd0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0fcf180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fcf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0fcf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0fcf630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0fcf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f0fd12a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f0fd12a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0fd1620"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fd17b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0fd1940"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0fd1ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0fd1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f85f0fd0020" loc="43:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f85f0fd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f85f0fd03a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f85f0fd0530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f85f0fd06c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f85f0fd0850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f85f0fd09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f0fcbdd0" loc="47:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f0fcbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0fca180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fca310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0fca4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0fca630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0fca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f85f0fbf2a0" loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f85f0fbf2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0fbf620"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0fbf7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f85f0fc8650" loc="50:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f85f0fc8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0fc4c40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0fc51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f0fc4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f0fc5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f0fc3590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f0fc3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0fc5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f0fc7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f0fc4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f0fc7860"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0fc7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f0fce3a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f0fce3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0fce720"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fce8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0fcea40"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0fcebd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0fced60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f85f0fcaaf0" loc="48:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f85f0fcaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f0fcae70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f0fc9030"/>
        <function-ref name="isState" scoped="" ref="0x7f85f0fc91c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f0fc9350"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f0fc94e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f0fc9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f85f0fc3a30" loc="51:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f85f0fc3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0fc3db0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f85f0fc2020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f85f0fc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f85f0fc99a0" loc="49:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0fc99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f0fc9d20"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f0fc8020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f0fc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f85f0fcb080" loc="43:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f85f0fcb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f85f0fcb400"/>
        <function-ref name="setRetries" scoped="" ref="0x7f85f0fcb590"/>
        <function-ref name="getRetries" scoped="" ref="0x7f85f0fcb720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f85f0fcb8b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f85f0fcba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f85f0f95350" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f85f0f95350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f85f0f956d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f85f0f95860"/>
        <function-ref name="isState" scoped="" ref="0x7f85f0f959f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f85f0f95b80"/>
        <function-ref name="requestState" scoped="" ref="0x7f85f0f95d10"/>
        <function-ref name="forceState" scoped="" ref="0x7f85f0f94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f0f93750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f0f93750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0f8fc40"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0f901e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f0f8f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f0f90ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f0f8e590"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f0f8e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0f90660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f0f92390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f0f8f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f0f92860"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0f92d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f85f138cdd0" loc="11:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f85f138cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f85f0f7b180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f85f0f7b310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f85f0f7b4a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f85f0f7b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f85f0f7a670" loc="13:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0f7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f0f7a9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f0f7ab80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f0f7ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f85f0f7b8f0" loc="12:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f85f0f7b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f85f0f7bc70"/>
        <function-ref name="setRetries" scoped="" ref="0x7f85f0f7be00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f85f0f7a020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f85f0f7a1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f85f0f7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f85f0f76020" loc="12:../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f85f0f76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f85f0f763a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f85f0f76530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f85f0f71c70" loc="10:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f85f0f71c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f85f0f6f020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f85f0f6f1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f85f0f6f340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f85f0f6f4d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f85f0f6f660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f85f0f6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f85f0f71450" loc="9:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f85f0f71450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f85f0f717d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f85f0f71960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f0f77e70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f0f77e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0f67390"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0f6a970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f0f69720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f0f692a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f0f67c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f0f67810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0f6adf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f0f74a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f0f69d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f0f6a020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0f6a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85f0f60a40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85f0f60a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0f3ab90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0f3a020"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0f3b670"/>
        <function-ref name="put" scoped="" ref="0x7f85f0f3a4a0"/>
        <function-ref name="size" scoped="" ref="0x7f85f0f3baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85efee2210" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85efee2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85efee0330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85efee1780"/>
        <function-ref name="empty" scoped="" ref="0x7f85efee2e00"/>
        <function-ref name="put" scoped="" ref="0x7f85efee1c00"/>
        <function-ref name="size" scoped="" ref="0x7f85efee1300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85efee3af0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85efee3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85efee3e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85f0f36020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85f0f36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0f34110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0f35550"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0f36c10"/>
        <function-ref name="put" scoped="" ref="0x7f85f0f359d0"/>
        <function-ref name="size" scoped="" ref="0x7f85f0f350d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85efed0d80" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85efed0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85efecee70"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85efece300"/>
        <function-ref name="empty" scoped="" ref="0x7f85efecf9a0"/>
        <function-ref name="put" scoped="" ref="0x7f85efece780"/>
        <function-ref name="size" scoped="" ref="0x7f85efecfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85efed0690" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85efed0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85efed0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f85f0f30850" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85f0f30850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f85f233ad00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f85f0f136e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f85f0f12490"/>
        <function-ref name="element" scoped="" ref="0x7f85f0f12b00"/>
        <function-ref name="full" scoped="" ref="0x7f85f0f15900"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0f13260"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f0f13d90"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0f15480"/>
        <function-ref name="size" scoped="" ref="0x7f85f0f15d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85f0f0e020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85f0f0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0f0c110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0f0d550"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0f0ec10"/>
        <function-ref name="put" scoped="" ref="0x7f85f0f0d9d0"/>
        <function-ref name="size" scoped="" ref="0x7f85f0f0d0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85efeb2020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85efeb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85efeaf110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85efeb0550"/>
        <function-ref name="empty" scoped="" ref="0x7f85efeb2c10"/>
        <function-ref name="put" scoped="" ref="0x7f85efeb09d0"/>
        <function-ref name="size" scoped="" ref="0x7f85efeb00d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85efeb3900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85efeb3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85efeb3c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f0f02440" loc="11:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f0f02440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0f027c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0f02950"/>
        <function-ref name="start" scoped="" ref="0x7f85f0f02ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0f02c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7f85f0efe1a0" loc="16:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7f85f0efe1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0efe520"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0efe6b0"/>
        <function-ref name="start" scoped="" ref="0x7f85f0efe840"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0efe9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7f85f0efedd0" loc="17:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f85f0efedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0efd180"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0efd310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f0efd5c0" loc="18:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f0efd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f0efd940"/>
        <function-ref name="changed" scoped="" ref="0x7f85f0efdad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f0efdc60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f0efddf0"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f0efc020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f0efc1b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f0efc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f85f0eff8c0" loc="15:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f85f0eff8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0effc40"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0effdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f85f0eff020" loc="14:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f0eff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0eff3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0eff530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7f85f0ee3020" loc="15:../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f85f0ee3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f85f0ee33a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f85f0ee3530"/>
        <function-ref name="findTLV" scoped="" ref="0x7f85f0ee36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85f0ecaa40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85f0ecaa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f85f28cf110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0ec7b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0ec7020"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0ec8670"/>
        <function-ref name="put" scoped="" ref="0x7f85f0ec74a0"/>
        <function-ref name="size" scoped="" ref="0x7f85f0ec8af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85efe96d10" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85efe96d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f85f28cf110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85efe94e10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85efe942a0"/>
        <function-ref name="empty" scoped="" ref="0x7f85efe95940"/>
        <function-ref name="put" scoped="" ref="0x7f85efe94720"/>
        <function-ref name="size" scoped="" ref="0x7f85efe95dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85efe96620" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85efe96620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85efe969a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f85f0ec5970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f85f0ec5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2adcdf0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f85f2902200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f85f0ec1e80"/>
        <function-ref name="fired" scoped="" ref="0x7f85f0ec24a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f85f0ec1260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f85f0ec2da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f85f0ec07a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f85f0ec0320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f85f0ec2920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f85f0ec35a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f85f0ec1870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f85f0ec3a70"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0ec2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f85f0eb4ae0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85f0eb4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f85f0eb2990"/>
        <function-ref name="enqueue" scoped="" ref="0x7f85f0eb0740"/>
        <function-ref name="element" scoped="" ref="0x7f85f0eb0db0"/>
        <function-ref name="full" scoped="" ref="0x7f85f0eb3bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0eb2510"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f0eb0090"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0eb3750"/>
        <function-ref name="size" scoped="" ref="0x7f85f0eb2090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85f0ead4a0" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85f0ead4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0eaa570"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0eac9d0"/>
        <function-ref name="empty" scoped="" ref="0x7f85f0eac0d0"/>
        <function-ref name="put" scoped="" ref="0x7f85f0eace50"/>
        <function-ref name="size" scoped="" ref="0x7f85f0eac550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f85efe75020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f85efe75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f85f281d020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f85f281d4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85efe72110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85efe73550"/>
        <function-ref name="empty" scoped="" ref="0x7f85efe75c10"/>
        <function-ref name="put" scoped="" ref="0x7f85efe739d0"/>
        <function-ref name="size" scoped="" ref="0x7f85efe730d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85efe76900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85efe76900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85efe76c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f85f0ea2540" loc="8:../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f85f0ea2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f85f0ea28c0"/>
        <function-ref name="OCP" scoped="" ref="0x7f85f0ea2a50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f85f0ea2be0"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f0ea2d70"/>
        <function-ref name="resetRank" scoped="" ref="0x7f85f0e9f020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f85f0e9f1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f85f0e9f340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f85f0e9f4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f85f0e9f660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f85f0e9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7f85f0e97260" loc="43:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7f85f0e97260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0e975e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f85f0e979b0" loc="44:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f85f0e979b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f85f0e97d30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f85f0e96020"/>
        <function-ref name="startDAO" scoped="" ref="0x7f85f0e961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f85f0e9d360" loc="40:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f85f0e9d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f85f0e9d6e0"/>
        <function-ref name="OCP" scoped="" ref="0x7f85f0e9d870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f85f0e9da00"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f0e9db90"/>
        <function-ref name="resetRank" scoped="" ref="0x7f85f0e9dd20"/>
        <function-ref name="getOCP" scoped="" ref="0x7f85f0e9a020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f85f0e9a1b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f85f0e9a340"/>
        <function-ref name="getParent" scoped="" ref="0x7f85f0e9a4d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f85f0e9a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f85f0e998b0" loc="42:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f85f0e998b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f85f0e99c30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f0e98ca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f85f0e98e30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f85f0e981b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f0e98340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f85f0e984d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f0e98660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f85f0e987f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f85f0e98020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f85f0e98980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f85f0e98b10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f85f0e99dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f85f0e9a990" loc="41:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f85f0e9a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f85f0e9ad10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f85f0e99020"/>
        <function-ref name="delRoute" scoped="" ref="0x7f85f0e991b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f85f0e99340"/>
        <function-ref name="addRoute" scoped="" ref="0x7f85f0e994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f85f0e96540" loc="45:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f85f0e96540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f85f0e968c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7f85f0e96a50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f85f0e96be0"/>
        <function-ref name="hasParent" scoped="" ref="0x7f85f0e96d70"/>
        <function-ref name="validInstance" scoped="" ref="0x7f85f0e95020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f85f0e951b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f85f0e95340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f85f0e954d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f85f0e95660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f85f0e957f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f85f0e95980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f85f0e95b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f85f0e95ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f85f0e94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f0e5c840" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f0e5c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0e5cbe0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0e5cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f85efe60ae0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f85efe60ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85efe60e60"/>
        <function-ref name="recv" scoped="" ref="0x7f85efe5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85efe602e0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85efe602e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85efe60680"/>
        <function-ref name="recv" scoped="" ref="0x7f85efe60810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f0e455c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f0e455c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0e45940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0e45ad0"/>
        <function-ref name="start" scoped="" ref="0x7f85f0e45c60"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0e45df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f85f0e41600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85f0e41600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0e41980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0e41b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0e41ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0e41e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0e40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f85f0e40e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f0e40e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f0e3e1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f0e3e350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0e3e4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0e3e670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f0e3e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f0e40800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f0e40800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0e40b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f0e2b300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f0e2b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f0e2b680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f0e2b810"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0e2b9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f0e2bb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0e2bcc0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0e2be50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0e2a020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0e2a660"/>
        <function-ref name="set" scoped="" ref="0x7f85f0e2a1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0e2a340"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f0e2a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f85f0e3c800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0e3c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f0e3cb80"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f0e3cd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f0e2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f85f0e3d020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f85f0e3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f85f0e3d3a0"/>
        <function-ref name="source" scoped="" ref="0x7f85f0e3d530"/>
        <function-ref name="address" scoped="" ref="0x7f85f0e3d6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f85f0e3d850"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f0e3d9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f85f0e3db70"/>
        <function-ref name="type" scoped="" ref="0x7f85f0e3dd00"/>
        <function-ref name="setType" scoped="" ref="0x7f85f0e3c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f85f0e3c1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f85f0e3c340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f85f0e3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f85f0dce4a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f85f0dce4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0dce820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0dce9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0dceb40"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0dcecd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0dcee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f85f0dcd120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f85f0dcd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0dcd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f85f0e28300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85f0e28300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0e286a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0e28830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0e289c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0e28b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0e28ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f85f0dd0d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f0dd0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f0dcf180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f0dcf310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0dcf4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0dcf630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f0dcf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f0dd10d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f0dd10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0dd1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f85f0dcfa10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f85f0dcfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f0dcfd90"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f0dce020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f0dce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f85f0dd16c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f85f0dd16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f85f0dd1a40"/>
        <function-ref name="source" scoped="" ref="0x7f85f0dd1bd0"/>
        <function-ref name="address" scoped="" ref="0x7f85f0dd1d60"/>
        <function-ref name="destination" scoped="" ref="0x7f85f0dd0020"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f0dd01b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f85f0dd0340"/>
        <function-ref name="type" scoped="" ref="0x7f85f0dd04d0"/>
        <function-ref name="setType" scoped="" ref="0x7f85f0dd0660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f85f0dd07f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f85f0dd0980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f85f0dd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f0dcbb90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f0dcbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0dc8020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0dc81b0"/>
        <function-ref name="start" scoped="" ref="0x7f85f0dc8340"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0dc84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f0dc7790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f0dc7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f85f2af18e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0dc7b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0dc7ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0dc7e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0dc5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0dc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0dcb540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0dcb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f0dcb8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f0dc8c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f0dc8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f85f2af18e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0dc7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f0dc42b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f0dc42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f0dc4630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f0dc47c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0dc4950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f0dc4ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0dc4c70"/>
        <function-ref name="get" scoped="" ref="0x7f85f0dc4e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0dbf020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0dbf660"/>
        <function-ref name="set" scoped="" ref="0x7f85f0dbf1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0dbf340"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f0dbf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f85f0dc0970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f85f0dc0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f85f2af18e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f85f0dc0cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f85f0dc0e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f85f0dc4030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f85f0dbc7c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f85f0dbc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0dbcb40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f0dbccd0"/>
        <function-ref name="start" scoped="" ref="0x7f85f0dbce60"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0dbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f85f0d566e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f85f0d566e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0d56a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0d56bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f85f0dab860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f85f0dab860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0dabbe0"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0dabd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f85f0d8e4f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f85f0d8e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0d8e870"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0d8ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0dbc170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0dbc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f0dbc4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f85f0da7480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f85f0da7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f85f0da7800"/>
        <function-ref name="flush" scoped="" ref="0x7f85f0da7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f85f0d5ac70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f85f0d5ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0d59020"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0d591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f85f0db5020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f85f0db5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f85f0db53a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f85f0db5530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f85f0db56c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f85f0db5850"/>
        <function-ref name="putData" scoped="" ref="0x7f85f0db59e0"/>
        <function-ref name="putDone" scoped="" ref="0x7f85f0db5b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f85f0db5d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f0db1020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f0db1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f0db13a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f0db1530"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0db16c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f0db1850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0db19e0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0db1b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0db1d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0dab4d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0dab020"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0dab1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f0dab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f85f0d53a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f85f0d53a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0d53d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0d52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f85f0db6720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f85f0db6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f85f0db6aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f85f0db6c30"/>
        <function-ref name="startSend" scoped="" ref="0x7f85f0db6dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f85f0dba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f85f0db2c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f85f0db2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f85f0db9020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f85f0db91b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f85f0db9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f85f0c88020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f85f0c88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0c883a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0c88530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f0c8dde0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f0c8dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f85f2af18e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0c8c1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0c8c350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0c8c4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0c8c670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0c8c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f85f0c88800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f85f0c88800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f0c88b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0c88d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f85f0c8d6c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f85f0c8d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f85f2af18e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f85f0c8da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f85f0c8cc20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f85f0c8cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f85f2af18e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f85f0c8b020"/>
        <function-ref name="offset" scoped="" ref="0x7f85f0c8b1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f85f0c8b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f0c8a920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f0c8a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f0c8aca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f0c8ae30"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0c89020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f0c891b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0c89340"/>
        <function-ref name="get" scoped="" ref="0x7f85f0c894d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0c89660"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f0c89ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0c89980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0c897f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0c89b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f85f0c8be80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f85f0c8be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f85f0c8a220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f85f0c8a3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f85f0c8a540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f85f0c8a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f85f0c8b590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f85f0c8b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f85f0c8b910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f85f0c8baa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f85f0c8bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f85f0c76d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f85f0c76d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0c800e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f85f0c80270"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0c80400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f85f0c80590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f85f0c80720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f85f0c808b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0c80a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f85f0c85e00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f85f0c85e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f85f0c821c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f85f0c82350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f85f0c824e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f85f0c82670"/>
        <function-ref name="putData" scoped="" ref="0x7f85f0c82800"/>
        <function-ref name="putDone" scoped="" ref="0x7f85f0c82990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f85f0c82b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f0c80cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f0c80cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f0c7f0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f0c7f230"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0c7f3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f0c7f550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0c7f6e0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0c7f870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0c7fa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0c751b0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0c7fb90"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0c7fd20"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f0c75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f85f0c59020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f85f0c59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0c593a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f85f0c59530"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0c596c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f85f0c59850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f85f0c5b890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f85f0c5b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0c5bc10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f85f0c5bda0"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0c5a020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f85f0c5a1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f85f0c5a340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f85f0c5a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0c5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f0c5b080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f0c5b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0c5b400"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0c5b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f0acac70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0acac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f0ac9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f0ac91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f85f0ac8440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f85f0ac8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0ac87c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f85f0ac8950"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0ac8ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f85f0ac8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f85f0ac7020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0ac7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f0ac73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f85f0ac9440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f85f0ac9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0ac97c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f85f0ac9950"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0ac9ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f85f0ac9c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f85f0ac9e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f85f0ac8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0ac81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f0aca020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f0aca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0aca3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0aca530"/>
        <function-ref name="request" scoped="" ref="0x7f85f0aca6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0aca850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0aca9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f85f0c49a30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0c49a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f0c49db0"/>
        <function-ref name="configure" scoped="" ref="0x7f85f0c47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f85f0c45020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f85f0c45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0c453a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f85f0c45530"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0c456c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f85f0c45850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f85f0c42450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0c42450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f0c427d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f85f0c47860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f85f0c47860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0c47be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f85f0c47d70"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0c46020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f85f0c461b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f85f0c46340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f85f0c464d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0c46660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f85f0c431d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f85f0c431d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0c43550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0c436e0"/>
        <function-ref name="request" scoped="" ref="0x7f85f0c43870"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0c43a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0c43b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f0c4a7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f0c4a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0c4ab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0c4acb0"/>
        <function-ref name="request" scoped="" ref="0x7f85f0c4ae40"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0c49020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0c491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f85f0c411d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f0c411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0c41550"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0c416e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f85f0bd6dc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0bd6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f0bd5180"/>
        <function-ref name="configure" scoped="" ref="0x7f85f0bd5310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f85f0bd4890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f85f0bd4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0bd4c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f85f0bd4dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0bd3020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f85f0bd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f85f0bd13e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0bd13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f0bd1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f85f0bd1a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f85f0bd1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f0bd1dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f0bd0020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f0bd01b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f0bd0340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f0bd04d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f0bd0660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f0bd07f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f0bd0980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f0bd0b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f0bd0ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f0bd0e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f0bcf020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f0bcf1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f0bcf440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f0bcf5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f0bcf760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f0bcf8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f0bcfa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f0bcfc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f0bcfda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f0bce020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f0bce1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f0bce340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f0bce4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f0bce660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f0bce9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f0bceb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f0bced10"/>
        <function-ref name="tx" scoped="" ref="0x7f85f0bcd020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f0bcd1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f0bcd340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f0bcd4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f0bcd660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f0bcd7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f85f0bcd980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f0bcdb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f0bcdca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f0bcde30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f0bcc020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f0bcc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f85f0bd56d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f85f0bd56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0bd5a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f85f0bd5c00"/>
        <function-ref name="receive" scoped="" ref="0x7f85f0bd5d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f85f0bd4020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f85f0bd41b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f85f0bd4340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0bd44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f85f0bcb020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f0bcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0bcbe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f0bca800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f0bca340"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f0bcacc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f85f0bd35b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f85f0bd35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0bd3950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0bd3ae0"/>
        <function-ref name="request" scoped="" ref="0x7f85f0bd3c70"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0bd3e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0bd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f0bd6020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f0bd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0bd63c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0bd6550"/>
        <function-ref name="request" scoped="" ref="0x7f85f0bd66e0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0bd6870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0bd6a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f85f0bcc5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f85f0bcc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0bcc950"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0bccae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f0bc9120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f0bc9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f0bc94a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f0bc9630"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f0bc97c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f0bc9950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f0bc9ae0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0bc9c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f0bc9e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f0bc84d0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0bc81b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f0bc8020"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f0bc8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f85f0bb9860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85f0bb9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0bb9be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0bb9d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f85f0bbc500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0bbc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0bbc880"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0bbca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f85f0bbcd30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85f0bbcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f0bc00e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f0bc0270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f0bc0400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f0bc0590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f0bc0720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f0bc08b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f0bc0a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f0bc0bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f0bc0d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f0bbf020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f0bbf1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f0bbf340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f0bbf4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f0bbf760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f0bbf8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f0bbfa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f0bbfc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f0bbfda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f0bbb020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f0bbb1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f0bbb340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f0bbb4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f0bbb660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f0bbb7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f0bbb980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f0bbbd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f0bba020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f0bba1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f85f0bba340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f0bba4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f0bba660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f0bba7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f0bba980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f0bbab10"/>
        <function-ref name="rx" scoped="" ref="0x7f85f0bbaca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f0bbae30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f0bb9020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f0bb91b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f0bb9340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f0bb94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f85f0bac990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f85f0bac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f0bacd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f0bab020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f0bab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f0bab340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f0bab4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f0bab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f0bab7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0bab980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f0babb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f0babca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0babe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f0baa020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f0baa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f0baa440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f0baa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f85f0bb0130" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f85f0bb0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0bb04b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0bb0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f85f0baa990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f85f0baa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f0baad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f0ba9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f0ba91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f0ba9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f0ba94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f0ba9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f0ba97f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0ba9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f0ba9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f0ba9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0ba9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f0ba8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f0ba81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f0ba8440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f0ba85d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f85f0ba8990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f85f0ba8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f0ba8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f0ba7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f0ba71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f0ba7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f0ba74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f0ba7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f0ba77f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0ba7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f0ba7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f0ba7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0ba7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f0ba6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f0ba61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f0ba6440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f0ba65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f85f0bb5550" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f85f0bb5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85f0bb58d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85f0bb5a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85f0bb5bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85f0bb5d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85f0bb4020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85f0bb41b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85f0bb4340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85f0bb44d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85f0bb4660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85f0bb47f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85f0bb4980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85f0bb4b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85f0bb4ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85f0bb3020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85f0bb31b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85f0bb3340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85f0bb34d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f85f0bb3660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85f0bb37f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85f0bb3980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85f0bb3b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85f0bb3ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85f0bb3e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85f0bb2020"/>
        <function-ref name="getMode" scoped="" ref="0x7f85f0bb21b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85f0bb2540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85f0bb26d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85f0bb2860"/>
        <function-ref name="tx" scoped="" ref="0x7f85f0bb29f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85f0bb2b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85f0bb2d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85f0bb1020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85f0bb11b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85f0bb1340"/>
        <function-ref name="rx" scoped="" ref="0x7f85f0bb14d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85f0bb1660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85f0bb17f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85f0bb1980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85f0bb1b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85f0bb1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f85f0bb8bc0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0bb8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0bb5020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0bb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f85f0bae990" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f85f0bae990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f0baed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f0bad020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f0bad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f0bad340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f0bad4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f0bad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f0bad7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0bad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f0badb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f0badca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0bade30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f0bac020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f0bac1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f0bac440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f0bac5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f85f0bb0a00" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f85f0bb0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f85f0bb0d80"/>
        <function-ref name="isInput" scoped="" ref="0x7f85f0baf020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f85f0baf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f85f0baf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f85f0baf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f85f0baf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f85f0baf7f0"/>
        <function-ref name="get" scoped="" ref="0x7f85f0baf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f85f0bafb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f85f0bafca0"/>
        <function-ref name="set" scoped="" ref="0x7f85f0bafe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f85f0bae020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f85f0bae1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f85f0bae440"/>
        <function-ref name="clr" scoped="" ref="0x7f85f0bae5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f85f0b29110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f85f0b29110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f85f2902640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f85f29029b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f85f0b28020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f85f0b289a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f85f0b284e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f85f0b28e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85efde35d0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85efde35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85efde3950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85efde3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85efddd7c0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85efddd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85efdddb40"/>
        <function-ref name="configure" scoped="" ref="0x7f85efdddcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f85efddd020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f85efddd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85efddd3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f85efddd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85efde4880" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85efde4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85efde4c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85efde4d90"/>
        <function-ref name="request" scoped="" ref="0x7f85efde3020"/>
        <function-ref name="granted" scoped="" ref="0x7f85efde31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85efde3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f85efde25a0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f85efde25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f85efde2920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f85efde2ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f85efde2c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f85efde2dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f85efde1020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f85efde11b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f85efde1340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f85efde14d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f85efde1660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f85efde17f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f85efde1980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f85efde1b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f85efde1ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f85efde0020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f85efde01b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f85efde0340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f85efde04d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f85efde0660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f85efde07f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f85efde0980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f85efde0b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f85efde0ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f85efde0e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f85efddf020"/>
        <function-ref name="getMode" scoped="" ref="0x7f85efddf1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f85efddf540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f85efddf6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f85efddf860"/>
        <function-ref name="tx" scoped="" ref="0x7f85efddf9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f85efddfb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f85efddfd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f85efdde020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f85efdde1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f85efdde340"/>
        <function-ref name="rx" scoped="" ref="0x7f85efdde4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f85efdde660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f85efdde7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f85efdde980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f85efddeb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f85efddeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85efde3d70" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85efde3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85efde2180"/>
        <function-ref name="userId" scoped="" ref="0x7f85efde2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f0b0a510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0b0a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f0b0a890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f0b0aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85f0b09af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0b09af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f0b09e70"/>
        <function-ref name="configure" scoped="" ref="0x7f85f0b08030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f85f0b0d510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f85f0b0d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0b0d890"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0b0da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f0b0c280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f0b0c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0b0c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0b0c790"/>
        <function-ref name="request" scoped="" ref="0x7f85f0b0c920"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0b0cab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0b0cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85f0b0ad20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0b0ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f0b090e0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f0b09270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f85f0b05120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0b05120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f0b054a0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f0b05630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f85f0b07230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f85f0b07230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0b075d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0b07760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f85f0b06ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f85f0b06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f0b06e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f85f0b07b60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f85f0b07b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f85f0b06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f85f0b062f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f85f0b062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f85f0b06670"/>
        <function-ref name="txDone" scoped="" ref="0x7f85f0b06800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85f0b01bd0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85f0b01bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85f0b00020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f0b001b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85f0aff930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85f0aff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85f0affcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f85f0affe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f85f0b00400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f0b00400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0b00780"/>
        <function-ref name="requested" scoped="" ref="0x7f85f0b00910"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0b00aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0b00c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f0b00dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85f0b02e30" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f0b02e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0b01210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0b013a0"/>
        <function-ref name="request" scoped="" ref="0x7f85f0b01530"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0b016c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0b01850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85f0aff060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0aff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f0aff3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f0aff570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85efd79ca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85efd79ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85efd780a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f85efd78330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f85efd78330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f85efd786b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f85efd78840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f85efd789d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85efd78b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f85efd753a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f85efd753a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f85efd75740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85efd758d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f85efd72210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f85efd72210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f85efd725b0"/>
        <function-ref name="configure" scoped="" ref="0x7f85efd72740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f85efd729d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85efd729d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f85efd72d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f85efd71020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f85efd711b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85efd71340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f85efd75b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85efd75b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85efd73020"/>
        <function-ref name="requested" scoped="" ref="0x7f85efd731b0"/>
        <function-ref name="granted" scoped="" ref="0x7f85efd73340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85efd734d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85efd73660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85efd71590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85efd71590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85efd71910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85efd71aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f85efd71c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85efd71dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85efd70020"/>
        <function-ref name="get" scoped="" ref="0x7f85efd701b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85efd70340"/>
        <function-ref name="led0On" scoped="" ref="0x7f85efd70980"/>
        <function-ref name="set" scoped="" ref="0x7f85efd70660"/>
        <function-ref name="led2On" scoped="" ref="0x7f85efd704d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85efd707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f85efd76540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85efd76540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85efd768e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85efd76a70"/>
        <function-ref name="request" scoped="" ref="0x7f85efd76c00"/>
        <function-ref name="granted" scoped="" ref="0x7f85efd76d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85efd75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f85efd738b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85efd738b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85efd73c30"/>
        <function-ref name="userId" scoped="" ref="0x7f85efd73dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f85efd70c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f85efd70c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85efd6f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f85efd6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f85f0ae5400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f85f0ae5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f85f0ae5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f85f0ae59d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85f0ae59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0ae5d50"/>
        <function-ref name="requested" scoped="" ref="0x7f85f0ae3020"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0ae31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0ae3340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85f0ae34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f85f0afab20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85f0afab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0ae5020"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0ae51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f85f0ae3720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85f0ae3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85f0ae3aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f85f0ae3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f85efd40b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f85efd40b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f85efd40e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f85efd3f0f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f85efd3f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85efd3f470"/>
        <function-ref name="requested" scoped="" ref="0x7f85efd3f600"/>
        <function-ref name="granted" scoped="" ref="0x7f85efd3f790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85efd3f920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f85efd3fab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f85efd403a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f85efd403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85efd40720"/>
        <function-ref name="stop" scoped="" ref="0x7f85efd408b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f85efd3fd00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f85efd3fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f85efd3d0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f85efd3d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f85f0ac38e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f85f0ac38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f85f0ac3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f85f0ac2020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f85f0ac2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f85f0ac23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f85f0ac2530"/>
        <function-ref name="request" scoped="" ref="0x7f85f0ac26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f85f0ac2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f85f0ac29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f0ac3080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f0ac3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0ac3400"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0ac3590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f85f0ab18c0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f85f0ab18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f85f0ab1c40"/>
        <function-ref name="offset" scoped="" ref="0x7f85f0ab1dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f85f0aae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f85f0a9c020" loc="9:../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f85f0a9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f85f0a9c3a0"/>
        <function-ref name="bind" scoped="" ref="0x7f85f0a9c530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f85f0a9c6c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f85f0a9c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f85f0a977f0" loc="13:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f0a977f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f85f168e700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f85f168ebd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f0a96990"/>
        <function-ref name="get" scoped="" ref="0x7f85f0a96480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f85f0a9aa20" loc="12:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f85f0a9aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f85f0a9ada0"/>
        <function-ref name="bind" scoped="" ref="0x7f85f0a97020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f85f0a971b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f85f0a97340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f85f0a90850" loc="15:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f85f0a90850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f85f168e700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f85f168ebd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f0a8f990"/>
        <function-ref name="get" scoped="" ref="0x7f85f0a8f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0a90020" loc="14:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0a90020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f85f2fd2b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f0a903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f0a8e600" loc="19:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f0a8e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f0a8e980"/>
        <function-ref name="changed" scoped="" ref="0x7f85f0a8eb10"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f0a8eca0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f0a8ee30"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f0a8d020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f0a8d1b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f0a8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f85f0a91020" loc="13:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f85f0a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f85f0a913a0"/>
        <function-ref name="bind" scoped="" ref="0x7f85f0a91530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f85f0a916c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f85f0a91850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f85f0a8fe20" loc="18:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f0a8fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0a8e1c0"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0a8e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f85f0a42c80" loc="44:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f85f0a42c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f85f0a400a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f85f0a43020" loc="41:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f85f0a43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f85f0a433a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f85f0a43650" loc="42:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f85f0a43650"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f85f0a439d0"/>
        <function-ref name="changed" scoped="" ref="0x7f85f0a43b60"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f85f0a43cf0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f85f0a43e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f0a42030"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f85f0a421c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f85f0a42350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7f85f0a42620" loc="43:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f85f0a42620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f85f0a429a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f85f0a403a0" loc="45:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f85f0a403a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f85f0a3f1b0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f85f0a408b0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f85f0a40a40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f85f0a40bd0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f85f0a40d60"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f85f0a40720"/>
        <function-ref name="getContext" scoped="" ref="0x7f85f0a3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f85f0a33130" loc="44:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f85f0a33130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f85f0a334b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f85f0a33640"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f85f0a337d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f85f0a468f0" loc="43:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f85f0a468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f85f0a46c70"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0a46e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85f0a31980" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85f0a31980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0a31d20"/>
        <function-ref name="recv" scoped="" ref="0x7f85f0a30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f85efd2f500" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f85efd2f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85efd2f880"/>
        <function-ref name="recv" scoped="" ref="0x7f85efd2fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f85efd30ce0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f85efd30ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85efd2f0a0"/>
        <function-ref name="recv" scoped="" ref="0x7f85efd2f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f85f09b3870" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85f09b3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f09b3bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f09b3d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f09b2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f09b21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f09b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f85f09b2590" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f09b2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f09b2910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f09b2aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f09b2c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f09b2dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f09b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f85f09b1270" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f85f09b1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f85f09b15f0"/>
        <function-ref name="source" scoped="" ref="0x7f85f09b1780"/>
        <function-ref name="address" scoped="" ref="0x7f85f09b1910"/>
        <function-ref name="destination" scoped="" ref="0x7f85f09b1aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f09b1c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f85f09b1dc0"/>
        <function-ref name="type" scoped="" ref="0x7f85f09b0020"/>
        <function-ref name="setType" scoped="" ref="0x7f85f09b01b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f85f09b0340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f85f09b04d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f85f09b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f85f09b08f0" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f85f09b08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f85f09b0c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f85f09b0e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f85f09af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f85efd200c0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85efd200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85efd20440"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85efd205d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85efd20760"/>
        <function-ref name="cancel" scoped="" ref="0x7f85efd208f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85efd20a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f85efd20d30" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85efd20d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85efd1f0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85efd1f270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85efd1f400"/>
        <function-ref name="cancel" scoped="" ref="0x7f85efd1f590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85efd1f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f85efd1f970" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f85efd1f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f85efd1fcf0"/>
        <function-ref name="source" scoped="" ref="0x7f85efd1fe80"/>
        <function-ref name="address" scoped="" ref="0x7f85efd1e030"/>
        <function-ref name="destination" scoped="" ref="0x7f85efd1e1c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f85efd1e350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f85efd1e4e0"/>
        <function-ref name="type" scoped="" ref="0x7f85efd1e670"/>
        <function-ref name="setType" scoped="" ref="0x7f85efd1e800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f85efd1e990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f85efd1eb20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f85efd1ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f0a0dce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f0a0dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f0a0a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f0a0a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f0a0a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f0a0a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f0a0a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f85f09c0400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85f09c0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f09c07a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f09c0930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f09c0ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f09c0c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f09c0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f85f09c1580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f85f09c1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f09c1920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f09c1ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f09c1c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f09c1dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f09c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f85f09be720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f09be720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f09beaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f09bec30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f09bedc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f09bd020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f09bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f85f09bd480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f85f09bd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f09bd800"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f09bd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f85f09bdc60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f85f09bdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f09bc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f09bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f85f09bf060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f85f09bf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f85f09bf3e0"/>
        <function-ref name="source" scoped="" ref="0x7f85f09bf570"/>
        <function-ref name="address" scoped="" ref="0x7f85f09bf700"/>
        <function-ref name="destination" scoped="" ref="0x7f85f09bf890"/>
        <function-ref name="setSource" scoped="" ref="0x7f85f09bfa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f85f09bfbb0"/>
        <function-ref name="type" scoped="" ref="0x7f85f09bfd40"/>
        <function-ref name="setType" scoped="" ref="0x7f85f09be020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f85f09be1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f85f09be340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f85f09be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f85f09ac760" loc="43:../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85f09ac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f85f098a5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f85f0989020"/>
        <function-ref name="element" scoped="" ref="0x7f85f09894f0"/>
        <function-ref name="full" scoped="" ref="0x7f85f098b810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f098a170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f098aa70"/>
        <function-ref name="empty" scoped="" ref="0x7f85f098b390"/>
        <function-ref name="size" scoped="" ref="0x7f85f098bc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f85f0981ca0" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f85f0981ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f85f0982ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f85f09804a0"/>
        <function-ref name="element" scoped="" ref="0x7f85f0980970"/>
        <function-ref name="full" scoped="" ref="0x7f85f0983d40"/>
        <function-ref name="maxSize" scoped="" ref="0x7f85f0982660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f85f0980020"/>
        <function-ref name="empty" scoped="" ref="0x7f85f09838c0"/>
        <function-ref name="size" scoped="" ref="0x7f85f09821e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f85f0980df0" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f85f0980df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f85f097e1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f097e350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f097e4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f85f097e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f85f097e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f85f097ea90" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f85f097ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f85f097ee10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f85f097d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f85f097d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f85f097d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f85f097d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f85f0979d10" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f85f0979d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f85f09770e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f85f0977270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f0988cc0" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f0988cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f09840a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f85f097d750" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f85f097d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f85f097dad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f85f097dc60"/>
        <function-ref name="led1On" scoped="" ref="0x7f85f097ddf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f85f097c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f85f097c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f85f097c340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f85f097c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f85f097cb10"/>
        <function-ref name="set" scoped="" ref="0x7f85f097c660"/>
        <function-ref name="led0On" scoped="" ref="0x7f85f097c7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f85f097c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f85f0981400" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f85f0981400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f85f0981780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f85f095f2a0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f85f095f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f85f095f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f85f095e5a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f85f095e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f85f095e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f85f095ec00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f85f095ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f85f095a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f85f0955b90" loc="39:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f85f0955b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f85f0952020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f85f09523c0" loc="40:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f85f09523c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f85f0952740"/>
        <function-ref name="stopDone" scoped="" ref="0x7f85f09528d0"/>
        <function-ref name="start" scoped="" ref="0x7f85f0952a60"/>
        <function-ref name="stop" scoped="" ref="0x7f85f0952bf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f85f2ad8640" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f85f2ad9270" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f85f2aaa5b0" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f85f2aad870" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f85f2aace60" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f85f2aad190" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f85f2aac020" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f85f2aae350" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f85f2aaea30" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f85f2aac740" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f85f2c51020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f85f2f16c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f85f2a592a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f85f2a59020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f85f2a5d5d0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f85f2aa2180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f85f2aa2bd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f85f2a59b10" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f85f2a58a00" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f85f2a5a790" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f85f2a58270" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f85f2a5dd70" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f85f2a5b540" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f85f2a5a020" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f85f2aa2180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f85f2aa2bd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f85f2a5bd10" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f85f2aa2180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f85f2aa2bd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f85f2a4b270" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f85f2a498c0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f85f2a49640" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f85f2a484e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f85f2a48260" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f85f2a4ae40" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f85f2a4a580" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f85f2a4bc20" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f85f2a4b9a0" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f85f2a52560" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f85f2a51020" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f85f2a52c60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f85f2a51a00" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f85f2a51780" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f85f2a50410" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f85f2a50190" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f85f2a50b00" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f85f2a62ad0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f85f2a60400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f85f2a60180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f85f2a61270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f85f2aa8d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f85f2a619b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f85f2a65c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f85f2a623e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f85f2a65510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f85f2a64390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f85f2a64ca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f85f2a64a20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f85f2a60e10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f85f2a60b90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f85f2a211f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f85f2b74a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f85f2b711f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f85f2b742b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f85f2d8d810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f85f2fd0020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f85f2fcf020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f85f2fd0790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f85f2fc4270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f85f2fc4ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f85f2880750" loc="43:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f85f288c930" loc="41:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f85f2880070" loc="42:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f85f287a020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f85f287bc50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f85f2879520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f85f28792a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f85f287b270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f85f287a870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f85f27ff0b0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f284edf0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f85f27fd2a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f27fd020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f85f27fb620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f27fb020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f27fb350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f85f27fa6d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f85f27fc730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f27fc170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f27fc4a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f85f2809a60" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f2809110" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f85f2809490" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f28097c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f85f2804620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f2804020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f2804350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f85f28036d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f85f28072a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f2807020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f28057f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f2805210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f85f2805560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7f85f2810810" loc="47:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7f85f2810120" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7f85f2811980" loc="41:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f85f281a820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f85f281a020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7f85f28752c0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f85f28d7140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f85f28767f0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f85f28d7140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f85f2876b40" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f2875020" loc="19:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7f85f2876020" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7f85f287ec90" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7f85f2874130" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f85f28d7140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f85f2875a80" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f85f28d7140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7f85f2875e80" loc="22:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7f85f28726e0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f85f28d7140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f85f28748c0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f85f28d7140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f85f2874c10" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f2872020" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f85f2872430" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f85f287d070" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f85f287d880" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f28a04f0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f28a04f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f85f28981f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f85f289daa0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f85f289b860" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f85f289b290" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f85f289b5d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f85f289caa0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f85f2897270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f85f2898980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f85f289c2b0" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f85f289f0b0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f85f28a0de0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f85f289a820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f85f289a250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f85f289a590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f85f289fb70" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f85f289f8f0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f85f289d390" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f85f280d980" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f280d020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f85f280d370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f280d6a0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f85f28b1070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f85f28b1820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f85f28b0030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f85f28af020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f85f28ad7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f85f28ac020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f85f28b07c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f85f28acb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f85f28ac910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f85f28b28a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f85f28af800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f85f28ad020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7f85f2886ba0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7f85f2884510" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7f85f2884290" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7f85f2884c20" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7f85f288b030" loc="42:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f85f2888400" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f85f2888180" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7f85f2883350" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f85f2889270" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7f85f2888be0" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7f85f28864a0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7f85f2887380" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7f85f28876f0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7f85f2887a80" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7f85f2887e00" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7f85f28861e0" loc="51:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7f85f28899c0" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f85f288bad0" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f85f288b850" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7f85f288e900" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f85f27b6730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f85f27b6e60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f85f27b7880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f85f27b5cf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f85f27b6020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f85f27b55b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f85f27baa90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f85f27b7190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f85f278ba10" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f85f278a190" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f85f2786b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f85f2786890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f85f278c270" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f85f2788070" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f85f2785490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f85f278a8d0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f85f278b270" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f85f2787770" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f85f278ca10" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f85f278d350" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f85f27887f0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f85f2786020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f85f2787020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f85f278da80" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f253cc40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f253cc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f85f25385a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f25325d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f25325d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f85f2532810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f85f252d390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f85f25303b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f85f252f9d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f85f252f400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f85f252f740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f85f2530b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f85f252db80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f85f2531390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f85f2531110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f2532810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f85f2531bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f24c24f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f24c24f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f85f24c2730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f24c2730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f85f24c1070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f24c2730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f85f24c0190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f85f24c18f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f85f24c08f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f85f2398160" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f85f2398160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f85f2398ca0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f85f2398160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f85f2398a20" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f85f2398160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7f85f2377550" loc="102:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7f85f237d350" loc="77:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7f85f2375020" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7f85f2377c60" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7f85f237b780" loc="94:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f85f2378df0" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f85f2378b70" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7f85f237f4d0" loc="71:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f85f237dda0" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f85f237db20" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f85f23795a0" loc="97:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7f85f237be60" loc="95:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7f85f2378420" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7f85f2379d50" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7f85f2378190" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7f85f237c800" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f85f237c580" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7f85f237b020" loc="90:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f85f2375bc0" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f85f2375940" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7f85f237fbd0" loc="74:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7f85f23849d0" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f2384750" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f85f2380020" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f85f3687a20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f85f2381150" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7f85f2381490" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f23817d0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f85f3687a20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f85f2381be0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7f85f2319360" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f85f231ac70" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f85f23190d0" loc="29:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7f85f231a3e0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f85f232ace0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f85f231a150" loc="14:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7f85f2318360" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f85f2319cc0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7f85f23180d0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7f85f232cb90" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f232c910" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f85f23247b0" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7f85f2324530" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7f85f2327c10" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f2327990" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7f85f2329660" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f23293e0" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f85f2327110" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f85f2329e30" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7f85f2326e70" loc="52:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7f85f23266c0" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f2326440" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7f85f2308e80" loc="23:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7f85f2307600" loc="24:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7f85f23086b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7f85f230a7b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f230ab00" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7f85f2308020" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7f85f2308400" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7f85f230ebe0" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f85f28fda80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f85f28fb020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f230e540" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7f85f230e950" loc="12:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f85f28fda80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f85f28fb020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7f85f230cab0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f230c4b0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f85f230c820" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7f85f230b860" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7f85f230b1f0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f85f230b5d0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7f85f230a020" loc="20:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f85f2311950" loc="27:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7f85f2323b30" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7f85f23238b0" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7f85f2315c80" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7f85f2315a00" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f85f2313390" loc="21:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7f85f2313a60" loc="22:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7f85f2315270" loc="11:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7f85f2310350" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f85f23100d0" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7f85f2314420" loc="16:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f85f2314c10" loc="18:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7f85f23111f0" loc="24:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7f85f23322e0" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7f85f2814ec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7f85f2812520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7f85f2332020" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7f85f231d2e0" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f85f286fa30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f85f231d020" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7f85f2320c40" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f85f286fa30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f85f2320610" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f85f2320970" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7f85f2321d40" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f85f286f6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f85f2321ac0" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f85f286f6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7f85f231e760" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f85f286fa30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f85f286f6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f85f231e4a0" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f85f286f6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7f85f23212d0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7f85f286f6f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f85f2322490" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f85f23227f0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7f85f2322c30" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7f85f2321020" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7f85f23307e0" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7f85f2334d90" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7f85f2330180" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7f85f2330540" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7f85f232da20" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f232d0d0" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f85f232d420" loc="22:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f85f232d780" loc="23:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7f85f232e970" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7f85f232e020" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f85f28f5770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f85f232e370" loc="18:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f85f232e6d0" loc="19:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7f85f210a830" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f210a5b0" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7f85f2104560" loc="5:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f85f28fe210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f85f2101560" loc="10:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f85f2102e80" loc="8:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f85f28fe630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f2102c00" loc="8:../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f85f28fe630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f85f2102490" loc="7:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f85f28ff670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7f85f28fea70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f85f2104cf0" loc="6:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f85f28fe630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f85f20c0a70" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f85f28ff670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f85f28ffdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f85f20b3640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f85f20b3060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f85f20b33b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f85f20b4020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f85f20b5690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f85f20b5020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f85f20b5400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f85f20bba40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f85f20bb7c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f85f20b48a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f85f20b8540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f85f20b82c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f85f20bab90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f85f20ba910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f85f20b18a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f85f20b66b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f85f20b6430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f85f20b1070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f85f20b9350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f85f28ff670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f85f28ffdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f85f20b9b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f85f20bb020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f85f20ba1f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f85f20b8ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f85f208c5c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f85f208c5c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f85f208ce80" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f85f2084bd0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f85f208c5c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f85f2084620" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f85f2084940" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f85f208c5c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f85f208a960" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f85f2087a80" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f85f20872b0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f85f208b0e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f85f208a120" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f85f2089270" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f85f2089a90" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f85f208b940" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f85f2091b60" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f85f2092b60" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f85f20921f0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f85f2091390" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f85f208f5e0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f85f2061c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f2061990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f85f2060710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f2060490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f85f206a560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f85f20694f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f85f206ad40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f85f206bcd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f85f206b6f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f85f206ba40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f85f205de40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f85f2066e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f85f2066020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f85f2066890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f2066be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f85f2064610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f85f2065770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f85f2064020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f2064370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f85f206dc30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f85f206d470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f85f206fce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f85f206f420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f85f1f4ebb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f85f1f4dd70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f85f1f4d5c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f85f1f4d340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f85f1f4e350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f85f1f29a60" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f85f1f26540" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f85f1f292d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f85f1f27cf0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f85f1f27a70" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f85f1f2cb00" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f85f1f272b0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f85f1e14270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f85f1e14ac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f85f1e13350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f85f1dedb60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1ded580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f1ded8d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f85f1de8dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1de8490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f1de87e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f85f1de8b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f85f1de96b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1de90d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f1de9420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f85f1dee730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f85f2b31300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1dee150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f1dee4a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f85f1deb2c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1dec930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f85f1decc80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f85f1deb020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f85f1dcedf0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f85f1dce480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f85f1dce810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f1dceb50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f1dcb3c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f85f1dca6a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f85f1dcaa30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f1dcad70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f85f1dcb110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f85f1dd2c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f85f1dd2a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f85f1dc47f0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f85f1dc6d40" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f85f1dc4020" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f85f1dc5c70" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f85f1dc54d0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f85f1dd0a80" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f85f1dd0800" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f85f1dc6560" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f85f1dc62e0" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f85f1ce96f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f85f1ce7070" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f85f1ce0710" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f85f1d1b020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f85f1d1b440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f85f1ce52a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1ce5020" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f85f1ce4680" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1ce4400" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f85f1ce5b10" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f85f1ce32a0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1ce3020" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f85f1cdaca0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f85f1cda480" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f85f1cd22a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1cd2020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f85f1cd3780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f85f1caeaf0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f85f1cb9790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f85f1cc6610" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d38080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f85f1d388c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f85f1cc6390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d38080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f85f1d388c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f85f1cbc870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f85f1cc4a90" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d33080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f85f1d338c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f85f1cc4810" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d33080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f85f1d338c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f85f1cb3e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f85f1caf480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f85f1cc4070" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d35020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f85f1d357b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f85f1cc22b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d33080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f85f1d338c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f85f1cbe020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f85f1cc0d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f85f1cc0610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f85f1cb3740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f85f1cc5840" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d35020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f85f1d357b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f85f1cc55c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d35020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f85f1d357b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f85f1cc1420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f85f1cb25d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f85f1cc1e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f85f1cc1b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f85f1cbd910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f85f1cbc0e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f85f1cb4840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f85f1cb7790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f85f1cbb7e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f85f1cb3020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f85f1cb8020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f85f1cb2cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f85f1cbe800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f85f1d3fdc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f85f1d3a680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f85f1cb14c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f85f1cae350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f85f1cc2c50" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f85f1cc29d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f85f1cad4d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1cad250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f85f1cc6df0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f85f1d38080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f85f1d388c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f85f1cbb020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f85f1cb8770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f85f1cb4020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f85f1d0ae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f85f1d082b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f85f1cb6cf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f85f1d0ae70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f85f1d082b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f85f1cb62a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f85f1d1b020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f85f1d1b440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f85f1cb6020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f85f1d1b020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f85f1d1b440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f85f1cadd90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f85f1cb1cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f85f1cbd070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f85f1cafbe0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f85f1cb7020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f85f1cb9020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f85f1c46600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f85f1c1e070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f85f1c31b10" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f85f1c26d50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f1c26ad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f85f1c39270" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f85f1c22350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f85f1c2bcf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f85f1c33c50" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f85f1c309c0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f85f1c34c00" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f85f1c34980" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f85f1c35120" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f85f1c2d790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f85f1c25c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f85f1c1f8f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f85f1c26390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f85f1c1ab60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f85f1c15270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f85f1c380e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f85f1c2d020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f85f1c2c910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f85f1c33500" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f85f1c3a020" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f85f1c27ba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f85f1c27920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f85f1c3d7d0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f85f1c23b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f85f1c1e7d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f85f1c18350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f85f1c17a90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f85f1c21270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f85f1c1d020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f85f1c25520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f85f1c1cbb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f85f1c38800" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f85f1c28020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f85f1c1c020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f85f1c1f190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f85f1c2b520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f85f1c2b2a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f85f1c18af0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f85f1c271f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f85f1c22ac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f85f1c3aaa0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f85f1cf5b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f85f1cf4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f85f1c3a820" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f85f1cf5b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f85f1cf4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f85f1c2f870" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f85f1c36980" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f85f1c36700" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f85f1c2c120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f1c2de70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f85f1c1a3b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f85f1c34270" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f85f1c36020" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f85f1c289e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f85f1c28760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f85f1c399a0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f85f1c1d740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f85f1c219e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f85f1c23420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f85f1c2a740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f85f1c2a4c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f85f1c2f120" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f85f1c313b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f85f1c172b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f85f1c35aa0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f85f1c35820" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f85f1c19350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f85f1c30270" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f85f1c19b10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f85f1b79780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f85f1b78020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f85f1b43900" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f85f1b41a20" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f85f1b43070" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f85f1b411f0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f85f1b40390" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f85f1b36b50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f85f1b3fb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f85f1b368d0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f85f1b3fb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f85f1b3ab80" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f85f1b376b0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f85f1b3fb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f85f1b37430" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f85f1b3fb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f85f1b36020" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f85f1b3fb30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f85f1907d70" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1907d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f85f19000e0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1907d70"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f85f19028a0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f85f19046b0" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f85f1901350" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1907d70"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f85f19010d0" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1907d70"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f85f1902020" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f85f1910020" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1910020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f85f190e790" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1910020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f85f190b2a0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1910020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f85f190b020" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1910020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f85f367ec30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f85f367ec30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f85f190a2a0" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1910020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f85f190a020" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f85f190f070" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f85f190e020" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f85f190d390" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f1910020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f85f19108d0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f85f190f7f0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7f85f183acb0" loc="43:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7f85f18375a0" loc="50:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7f85f1812d30" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f85f1812330" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f85f28dbcd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f85f1812740" loc="19:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f85f1812a90" loc="20:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f85f180f8e0" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f85f1810e70" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f85f180f210" loc="29:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f85f180f640" loc="30:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f1810740" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f85f18104c0" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7f85f1783740" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f85f28fbd50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f85f1786d10" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f85f28fbd50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f85f1783150" loc="19:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f85f28c51b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f85f17834a0" loc="20:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f85f1780480" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f85f17819d0" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f85f28d7aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f85f1781d40" loc="29:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f85f17801e0" loc="30:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f85f28c65e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f17812a0" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f85f1781020" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f85f233b870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7f85f168b8f0" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f85f168b8f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f85f1688b20" loc="34:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f85f1688450" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f85f168b8f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7f85f16881d0" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f85f168b8f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7f85f1657c80" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1657a00" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7f85f16572a0" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1657020" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f85f164b2b0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f164cbd0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f85f164b020" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f85f1649430" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f16491b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f85f164c3e0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f85f164d9e0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f85f164d760" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f85f1663890" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f16632d0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f1663600" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f85f165c020" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f165e890" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f165ebc0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f85f165e020" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f85f1660b90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1660910" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f16610c0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f165fa80" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f85f165fdd0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f85f1651680" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1651400" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f85f1655770" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1655150" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f85f16554e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f85f1652650" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f16523d0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f85f1654b70" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1654550" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f85f16548e0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f85f1650650" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f16503d0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f85f136f780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f136f500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f85f137cbe0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f137c600" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f85f137c950" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f85f13763a0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f1378d50" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f85f1376110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f85f137a6e0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f85f3679110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f137a460" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f85f13782a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f1378020" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f85f1380dd0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f1380b50" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f85f13792a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f1379020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f85f13742e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1374060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f85f1373510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1373290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f85f1372680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1372400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f85f1361e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1361bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f85f1363120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1364e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f85f13657a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f85f1365520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f85f1366bd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f85f1366950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f85f13642a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f85f1364020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f85f1361020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1363d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f85f1355040" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f1357a50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f85f1357d80" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f85f1354350" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f85f1351c50" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f85f1353e00" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f85f1351680" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f13519b0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f1353600" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f85f1353020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f85f1353370" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f85f1355ad0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f85f1355850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f85f1349ae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1349820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f85f1349020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f85f2b2e160"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f85f2b2dac0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f134bbe0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f85f1348de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f85f2b2c610"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f85f2b294f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f1348ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f85f12f5890" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f85f12de020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f85f12de020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f85f12de260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f12de260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f85f12dc0b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f12de260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12dde00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f85f12da2a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12da020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f85f12dee20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12deba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f85f12d9610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f12de260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12d9020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f85f12d9380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f85f12de260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f85f12bc420" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f85f12bda20" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f85f12bc190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f85f12bd270" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f85f12bea00" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f85f12be780" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f85f3678920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f85f12d1cb0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12d1a30" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f85f12d6c90" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12d6a10" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f85f12cfc80" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12cfa00" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f85f12d0ca0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f12d0a20" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f85f0e30840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e305c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f85f0e39350" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e390d0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f85f0e3b790" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f85f0e3a2a0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e3a020" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f85f0e35c40" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e35660" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f85f0e359b0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f85f0e38760" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e38180" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f85f0e384d0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f85f2af2560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f85f0e322e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e32060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f85f0e31680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e310d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f85f0e313f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f85f2af3d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f85f0e340b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e36e00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f85f0e2dd00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f85f0e2d720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f85f0e2da70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f85f0e2cb50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f85f2af2180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f85f0dc0020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f0dc1960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f85f0dc1ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f85f0dc2020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f85f0dc1020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f85f0dc28b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f85f2ae30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f85f2ae26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f85f0dc2c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f85f0da7190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f85f0daa9e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f85f0db0270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f85f0daf6c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f85f0dac390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f0dac110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f85f0dad020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f85f0db0de0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f0db0b60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f85f0dacbf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f85f0dad8d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f85f0db8c10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f85f0db7590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f85f0db82a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f85f0db8020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f85f0db62a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f85f0db6020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f85f0db3020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f85f0db3c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f85f0db39c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f85f0db2730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f85f0db24b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f85f0c81dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f85f0c81800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f0c81b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f85f0c7cac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f85f0c7c840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f85f0c79930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f85f0c79360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f0c796a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f85f0c7b740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f85f0c762c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f85f0c77920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f0c77c60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f85f0c76020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f85f0c7c070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f85f0c7d720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f85f0c7edb0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f85f0c7d130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f85f0c7d480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f85f0c575b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f85f0c57330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f85f0c57df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f85f0c56cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f85f0c56700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f85f0c56a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f85f3678160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f85f0c53b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f85f0c4c420" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f85f1d0ae70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f85f1d082b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f85f0bbe860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f85f0bbc0e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f85f0af6470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f85f09abb80" loc="43:../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f09abb80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f85f09a5350" loc="80:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f09abb80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f85f09a4580" loc="97:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f85f2fcbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f09abb80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f85f09a4300" loc="97:../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f09abb80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f85f09a3020" loc="108:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f09abb80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f85f09a4d50" loc="108:../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f85f09a8bd0" loc="57:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f85f09a6ba0" loc="72:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f85f09a5b10" loc="88:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f85f09abb80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f85f09a8460" loc="50:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f85f2fd3090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f85f09a6390" loc="65:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f85f3678520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f85f09810b0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f85f0984dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
