<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1583bd7130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1582204800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1583bcc5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1582205600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1583bc37a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1582204e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1582204e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1582195d60"/></to>
    </wire>
    <wire loc="67:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1583c82750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1583ea4220"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1583ea4220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1583ce6590"/></to>
    </wire>
    <wire loc="68:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1583c448b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1582c02510"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1582c02510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15822c7440"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1583c6e0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b81400"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7f1583c63820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583919640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583919640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f1583c4f6b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f15835f2320"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f15835f2320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f158350da10"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f1583c4b9f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f15835f3080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f15835f3080"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f158350e880"/></to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f1583c49d90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15835f39e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15835f39e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f158350d270"/></to>
    </wire>
    <wire loc="76:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7f1583c3ea20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f1581e61020"/></to>
    </wire>
    <wire loc="15:../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f1581e61020"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f1581e5fa20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f1583bdbb50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f1582cf2020"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f1582cf2020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f1582c3f4b0"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583c60c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583768020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583768020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1583be6b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f15837574e0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581d225a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581d4ccc0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581e55020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15811bfca0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158218f540"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15812bb900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15812dc620"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15812f8900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581316690"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581329af0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15823b6dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158243fb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158245d430"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15825b9620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15826af020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158339b7e0"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1582a2f720"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158156b140"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158311f020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583445610"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583488c50"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158375ba90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583907400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1583ce6c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f158439c3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f158439c3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1583f46140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1583cda6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583ea7700"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1583ea7700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583ea1910"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583cdadc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1583e9e060"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f1583e80020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1583e80020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583e7d020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1583e9e740"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583ea0c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f1583e9ee20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583b59dd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1583e7d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583e68cb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1583e766c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1583e663d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f158401e4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1583e65680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f1583e225a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d5f6d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f1583e10020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d57b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1583e19700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d64160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f1583dfda20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d3ecb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1583e20aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d65480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1583e04020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d3e020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1583dfaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d26cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f1583e0b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d37220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1583e23b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583db49d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f1583dffa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d4d2f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f1583e063e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d4e610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f1583e0f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d4f220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1583e18700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d5d7a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f1583dfca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d352f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f1583e0ebe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d476d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f1583e1f890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d5eac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1583e33060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dc2540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1583e04da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d36610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1583e290c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d66020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1583e0aa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d306d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f1583e136d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d6ca90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f1583dfea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d457a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1583e1bcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d6ede0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f1583e051f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d46ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f1583dfba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d2e7a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f1583e0c0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d40b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1583e02b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d2fac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f1583e00a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1583d55cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1583e01a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d26020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1583e07570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1583d55020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1583e08020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1583d28b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1583dc0450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dc1d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1583dc0aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1583d21a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1583dbf120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1583d1e260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d6b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dc2540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d69020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dc1d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d63020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dc2540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d627a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dc1d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d5b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dc2540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d5ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dc1d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1583db92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1583db9940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1583d1e9f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1583db7020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1583d1d240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d54b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d522f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d4b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d4a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d44610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d43c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d3db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d3a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d34160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d337a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d2d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d2bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1583d25b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1583d232f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1583f44040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1583f3e490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f15843333b0"/></to>
    </wire>
    <wire loc="242:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f1583b98820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1583b59dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583b84db0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1583b79a90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1583b82590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1583b82590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1583941020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1583b7fca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1583b5b830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1583b5b830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f158392db90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1583b78020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1583b5ab50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1583b5ab50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1583928710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15839302f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f1583b019a0"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f1583b019a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ded10"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158392cde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f1583aff9a0"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f1583aff9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839d9740"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583927930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f1583afd9a0"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f1583afd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839d4100"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1583b43810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a77740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1583b2e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a47100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f1583ae5ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a38100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f1583ac0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ae740"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f1583ae3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a34d10"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f1583b2a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a3e740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f1583b169a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a0d460"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1583af19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839b7100"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f1583addcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a2a100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f1583acccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ca740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f1583ab8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839a9100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1583b3d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a69740"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f1583adbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a26d10"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1583b39810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a60d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f1583b24810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a2f740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f1583b109a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ff100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f1583afb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839d0d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1583aeb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839a9100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1583b47810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a80100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1583b33810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a51d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f1583b1e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a21740"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f1583ae7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a38100"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f1583ac6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839bc740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f1583abacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839a9100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f1583ad2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839e2100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f1583b1a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a18e60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f1583b069a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839e7740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1583af59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839c1d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f1583ac4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839b7100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f1583ad9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839f1100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1583b41810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a72100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1583b2c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a43d10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1583af99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ca740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f1583b28810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a38100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f1583b149a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a09e00"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1583aef9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839b3d10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f1583ad5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839e7740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1583b49870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583ab1d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1583b37810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a5a740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f1583b22810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a2a100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f1583b0e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839fbd10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f1583ad0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a21740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f1583acacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839c5100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f1583abecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839a9100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f1583b0a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839f1100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f1583acecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a1c100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1583b45810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a7cd10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1583b30810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a4c740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f1583b1c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a1c100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f1583ad7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ecd10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f1583ac2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839b3d10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f1583b189a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a129f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f1583b049a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839e2100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1583af39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839bc740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1583b3f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a6ed10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1583af79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839c5100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1583b3b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a64100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f1583b26810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a34d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f1583b129a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a04740"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1583aed9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ae740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1583b53810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a86740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1583b35810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a55100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f1583b20810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a26d10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f1583b0c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839f6740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f1583adfca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a2f740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f1583ac8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839c1d10"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f1583ae1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a2f740"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f1583b089a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ecd10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f1583abccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839ae740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f1583ab6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f15839d0d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f1583ae99f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1583a3e740"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f15839061d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f15839061d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1583790690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1583907400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158380b760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f15838fca80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1583781cf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f158380b760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581841490"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f158378ac30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15837dfcf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15837d91d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f158380a020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f158380a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f158183a140"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1583776020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1583888020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1583888020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f158384c0f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1581841490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1581825e60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1581834b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1581841ce0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1581841ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1581824720"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1581836690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1583888020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1581820910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f158182bc50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f158182bc50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f158181e020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15818282b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15818282b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f158181d440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f15818275d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15818275d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f1583e10020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1583e07570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f1583e0ebe0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f1583e051f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f1583e0c0c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1583e04020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f1583e0b5a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1583e04da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1583e0aa50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1583e02b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1583e08020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1583e01a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f158384a540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f158387f020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f158387f020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f158387b0a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f158386c2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f15837d5490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1583785e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f158375c370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f1583758390"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15837624f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f158375ba90"/></to>
    </wire>
    <wire loc="97:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7f158373ae60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f15836fd800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f1583739a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1581df5980"/></to>
    </wire>
    <wire loc="98:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1583747bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15836fb570"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f15837443b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f15836fbdc0"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f15836f7c70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f1583739a80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7f15836f8760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f15835f2320"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f15836e9a50"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834cc020"/></to>
    </wire>
    <wire loc="104:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f15836dc720"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f1582bfe6e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f15836f2cc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f15822a7020"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f15836cc8a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b4c020"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b4c020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b417a0"/></to>
    </wire>
    <wire loc="107:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f15836d55f0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f1582266540"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f1582266540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f1582262360"/></to>
    </wire>
    <wire loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7f1583681380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f158350a310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f15837443b0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7f158350aab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582220840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f15835093d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15834e9140"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15834e9140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7f1583504730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15834e3b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15834e3b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f15834fae00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f15834f95e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7f158373ae60"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f15834f7270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7f15834f62b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1583747bb0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f15834f6a10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f1582cf2020"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f15834ffae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f15834dc4e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15834dc4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f15834f5590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f1582266540"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f15834f4a40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b4c020"/></to>
    </wire>
    <wire loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7f15834f3ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f15834f1ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7f15834f02f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7f15834f12f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7f15834f0ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f15834d1020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f15834cb4a0"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f15834c6800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f15834d0690"/></to>
    </wire>
    <wire loc="9:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f15834d0690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f1583485300"/></to>
    </wire>
    <wire loc="12:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1583484da0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1583463020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1583476b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f15834587e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f15834587e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f15834449f0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f158344b1b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f1583441cd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f158344cd90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f15834428d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1583454980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1583445c80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f158343ee40"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583396220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583396220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583390af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f15834390e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1583352e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1583352e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1583344b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1583438380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f158334d6a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f158334d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1583335d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f15834376a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f158334bce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f158334bce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f158332b710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f15834350e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f1583313d60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1583313d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f15831f7a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f158341f1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1582da0e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1582da0e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f158341e2b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f1582d9c7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1582d9c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f158341e9c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d9bae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d9bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1583420a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d9ead0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d9ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1583420120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d9a160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d9a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1583425b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d92870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d92870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f158342c3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d8d880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d8d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f158342cc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d8c0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d8c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15834275f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d96e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d96e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1583423020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d95670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d95670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1583431520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f1582d7f500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1582d7f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1583428a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d80ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d80ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f15834238e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d93e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d93e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f15834221c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f1582d95e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1582d95e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1583422a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d94e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d94e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f158341dd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1582d6da80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1582d6da80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f158341d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1582d419e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1582d419e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f158342d810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1582d14b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f158343e450"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1583463020"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f1583412820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f1583413940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f158339b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1583390260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1583390260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15816e5a10"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583390af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15816e42a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15816e5a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15816dea10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15816e42a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15816d75f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f15816dea10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f15816c1510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f15816d1d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15816dc2a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f15816dc2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f15816c1da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15816d39b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f158337a080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f158337a080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1583375cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15816bc020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f15816c61b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f15816c61b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15816bb760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15816c58f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15816c58f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15816baa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f15816c4c10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f15816c4c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f15833720f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f158387f020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1583350090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f158333f710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f158334f390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f158333a1d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1583398b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1583348020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f158334c9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1583330b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15833472f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1583b43810"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583343de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f1583b169a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158333e930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1583b45810"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583339480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1583b49870"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583333020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f1583b0e9a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158332fde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1583b189a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158332a930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f1583b109a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1583313150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f158330ba20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1583312a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f15831e7a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15832fa5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f1583e0f5a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f15832f98f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f1583dffa20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f15832f77a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1583b189a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f15831e9610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f15832e88a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f15832e88a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f15832d58a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f15831e6610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f15832eb8f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f15832eb8f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f15832db810"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f15832dea30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f15832caa30"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f15832e58a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f15832d18a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f15832e38a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f15832cf8a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f15832ee8a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f15832d78a0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f15832e08a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f15832cc8a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f15832e78a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f15832d48a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f15832dda30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f15832c9a30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f15832e28a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f15832ce8a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f15832e98a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f15832d68a0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f15832dfa30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f15832cba30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f15832e68a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f15832d38a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f15832e48a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f15832d08a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f15832ef8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f15832d88a0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f15832e18a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f15832cd8a0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1582d9c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582d8f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1582d860a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1582d8d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1582d7b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1582d7d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1582d9b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1582d83880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1582d7e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1582d89880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1582d8a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1582d9fa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a1920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1582d9ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1582d99490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1582d82c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1582d99be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1582d7ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1582d830a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1582d94670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1582d840a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1582d86880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1582d84880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1582d7cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1582d7dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1582d8a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1582d850a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1582d7fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1582d8c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1582d7bce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1582d9e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1582d96670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1582d93670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1582d870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1582d87880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1582d8f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1582d982f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1582d96020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1582d9a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1582d80500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1582d7c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1582d890a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1582d85880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1582d9ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1582d8b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1582d98940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1582d8b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1582d820a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1582d799b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f158319dbb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f158319a020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f158319adb0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f158319e810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1583199ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f1583188b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1583129770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1583129770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15831241d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1583198400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1583106c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1583106c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15815efc30"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1583196080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f15831058f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f15831058f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f15815eb0c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f158318c680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1582dca020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1582dca020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f15815ea2b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1583193a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f1583184bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f15831241d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f158311fb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f15815ea2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f158309d510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f15815eb0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f15830a0dd0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15815efc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15830a6a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15815ec8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15815e22c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15815e22c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1582f298a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f15830a0dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1583024440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f15815eb6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f158309f480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f158309f480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1583024a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f158309a600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f15815eaa50"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15815d2760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15830a05e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f158309c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15815e3640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15815e3640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1582f2b5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15830966a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15815dbc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15815dbc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1582f2fa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15830a05e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1583025c40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f158309d510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1583023700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15830a6a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1583026e80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1583022e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f158309a600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1583022060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f158309c370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f158301dde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15830966a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1583021490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1583014860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1583014860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1583008020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f158301c5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f158301bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f158300a8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1583003750"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f158300d3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1583004dc0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1582fd5700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1583ae7cc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1582fd3670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f1583ae3cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1582fd1670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1583ae1cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1582fcf670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f1583adbcc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1582fcd670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f1583addcc0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f1582fda5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1582e82430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f15815d9440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1582f2c9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f15815d9a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1582e8e880"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1582e8e880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1582e82430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15815df2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1583014860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15815e2a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582f28130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582f28130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582e96060"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1582f27020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15815d2760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1582f298a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1582e98bf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1582e98bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581567850"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1582f2fa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1582f255c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1582f2b5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1582e99e60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1582e99e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1581568970"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1582f2c9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1582f13020"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582e96060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581566c30"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1582e96930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1582f27020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582f124b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582e96060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1582f13690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f158300d3b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1582f13e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f158300a8a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1582e97400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581566020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581565590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1582e96930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1581565d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f158156b750"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1581562020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f1582e7b250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1583008020"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1582e77d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1583ae7cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1582e75cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1583ae1cc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d60c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1582d6bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d64b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582d5e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1582d57e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1582d5ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1582d4a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1582d4c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1582d69120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1582d52670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1582d4e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1582d63c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d61c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1582d58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1582d5ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d5d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1582d6c760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1582d67aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1582d66120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1582d51a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1582d66870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1582d4ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d69dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1582d53e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1582d61480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d63480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d6b750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1582d55e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1582d56670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1582d53670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1582d4bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1582d4cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1582d59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1582d56e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1582d4fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1582d5c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1582d4aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1582d6b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1582d64370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1582d60480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1582d58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d5de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1582d57670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1582d6a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1582d5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1582d65020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1582d65cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1582d4f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d50ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1582d67450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1582d502f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1582d4b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1582d59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1582d55670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1582d6aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d69770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1582d5ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1582d65670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1582d5a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1582d52e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1582d497a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d34c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1582d3fda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d37b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582d31670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1582d2ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1582d31e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1582d1e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1582d202f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1582d3c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1582d26670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1582d212f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1582d36c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d35c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1582d2c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1582d2ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d30670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1582d40760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1582d3baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1582d3a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1582d25a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1582d3a870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1582d21ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d3cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1582d27e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1582d35480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d36480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d3f750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1582d28e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1582d29670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1582d27670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1582d1fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1582d20ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1582d2d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1582d29e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1582d22ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1582d2f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1582d1ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1582d3f100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1582d37370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1582d34480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1582d2ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d30e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1582d2a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1582d3d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1582d33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1582d39020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1582d39cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1582d222f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d23ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1582d3b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1582d232f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1582d1f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1582d2de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1582d28670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1582d3daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d3c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1582d2fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1582d39670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1582d2e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1582d26e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1582d1c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f1582cf1020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1581df5980"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15834d36f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1582c3fda0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7f1582c2ebb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f1582cf1020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f1582c3e720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1582c19bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1582c19bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f1582c33020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1582c12560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1582c12560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7f1582c39ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1582c0b020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1582c0b020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1582c2e410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f1582c2d400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f1582c23980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f15835f2320"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f1582c21270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f15835f3080"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582c20590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582c00560"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582c00560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582bf8d20"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f1582c2b5a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f1582279ae0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7f1582c260f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f15822714a0"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f15822714a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f15812ba020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f1582c21b60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f15822a7020"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7f1582c1f2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7f1582c1fad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f1582bfe6e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f1582bdc890"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f1582bfc930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f1582bdda50"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7f1582c01d40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7f1582bdba90"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f1582bfd9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15835f39e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f1582bfd9d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15834d36f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582c01540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582bf71d0"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15822c4020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1582bfd130"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f15822c48c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7f1582bfd9d0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7f15822c31a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1582a51020"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1582a51020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1582a306d0"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f15822c3dd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1582b4b980"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1582b4b980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1582b40790"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7f1582bf6ae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582bdb290"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f1582bd81d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f1582b4b020"/></to>
    </wire>
    <wire loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f1582b4b020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f1582b49da0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f1582b44720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f1582a51af0"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f1582a51af0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f1582a2fd60"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582aa1a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582bf71d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f1582a9f2d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f1582bd8b20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f1582bd7c30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f15822a7020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f1582bf52d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f15822a7020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f15822c25c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f1582bd2790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f158228ea40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f158228ea40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f15812dcd10"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7f1582bce1c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1582289970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1582289970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f1582bbae40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7f1582b3f060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582aa6a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7f1582b3f860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582a6f9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7f1582b3e0a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582a6d9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7f1582b3e8a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582a6b9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7f1582b3d270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1582a697b0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1582a697b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1582b38450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582b38c50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582bf8d20"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f1582b37900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f1582b44720"/></to>
    </wire>
    <wire loc="39:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f1582b352d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f1582b34300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f15834d0690"/></to>
    </wire>
    <wire loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7f1582b01380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582aa6a30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f158142d1f0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f158142d9f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582a6f9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1581422020"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f1581422820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582a6d9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f15814186a0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f1581417020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582a6b9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f158140fdb0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f158140d5e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f1582a4f020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f1582a2e940"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f1582a2b060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1582752420"/></to>
    </wire>
    <wire loc="30:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1582752420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f158274db40"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1582a2bbd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f158274f020"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f158274f020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1582746020"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f1582a290f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f158274fd00"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f158274fd00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f1582749a00"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1582a29e20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f158274ea30"/></to>
    </wire>
    <wire loc="34:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f158274ea30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f1582748820"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1582a1d020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f15823408f0"/></to>
    </wire>
    <wire loc="21:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f15823408f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f158273a470"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f1582a1e020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f158233b020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f158233b020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f1582335450"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15829f9bc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1582a49870"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7f15829fe900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f158233ce70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f158233ce70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7f1582a1ba10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f1582325a40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f1582325a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f1581328210"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7f1582a06150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f15822fb020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f15822fb020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f1581316d80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7f1582a0b5f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f15822d3020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f15822d3020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f15812f7020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f1582a04c50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f15822f5850"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582a284e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b417a0"/></to>
    </wire>
    <wire loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f15827816e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f158274db40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15823a9b80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1582748820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15824125e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1582746020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1582410170"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1582749a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15824138e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15823a9b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f15823a6d90"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582731170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582536a70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582536a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582526020"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f158273a470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1582395020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1582395020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1582390080"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f158273b640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158252cd20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1582746d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1582412c90"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1582412c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1582407a20"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f15827317f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f15823a9080"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f15823a9080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f15823a22d0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15824125e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f1582407370"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582742080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f15825376e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f15825376e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1582528c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f158274ad00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1582414be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1582414be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f158240a7b0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15824138e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f15824094d0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1582410170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1582405020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582745a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582411a50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582411a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582406840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f15823a6d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1582735b20"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1582735b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f158272dd90"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f158240f6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1582465dd0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1582465dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f158245e660"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1582462b50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15823962a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15823962a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15823933a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1582395d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15823adce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f15823adce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f15823a7860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15823a7860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f158272f790"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f158272f790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15827228f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f158240f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15823aa980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15823aa980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f15823a6690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f15823a6690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1582446aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1582446aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1582442e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1582443950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f158272e490"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f158272e490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15825be7c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1582724230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1582721650"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f15825be7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15825b7020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15827204b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1583454980"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f158271f1a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f158344cd90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f158271e3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15826bf9b0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f158271e3e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15825c15c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15825c15c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15825b9ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f15826bf9b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15826af6a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f158271d080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f15826bc300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f15826bc300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f15826ae020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f158271de00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f15826bb020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f15826bb020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f15826aecf0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1582714b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f158270b130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1582527640"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f158271cc60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f158270bb90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1582471390"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1582471390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15831241d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1582715470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f15827075d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f1582708660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f1582709730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f15826baca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f15826adc90"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f15826b9470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f15826ac4b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f15826ab020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583396220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1582699d60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f1583398b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1582697080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1583352e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1582691370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f158334c9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f15826991e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f1583313150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f15826906e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15825f1c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15825f1c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f158268e4e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15825f08f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15825f08f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f158268b020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f15825ef2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f15825ef2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f158268b730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f15825eecc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f15825eecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f158268be60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f15825ed370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f15825ed370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f158268a5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f15825ebd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f15825ebd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f158268c6b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f15825e5c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f15825e5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f158268d020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f15825cd7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f15825cd7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f158268dd80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f15825d22f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f15825d22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f158268ad00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15825e7480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15825e7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f15826880c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f15825e3e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f15825e3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582688990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f15825e2670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f15825e2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1582689930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f15825e97b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f15825e97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1582686530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f15825cfad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f15825cfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1582687380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f15825d02f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f15825d02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1582687bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f15825d0ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f15825d0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1582680780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f15825c1df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f15825c1df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f15825b8550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f15826a7210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15826a60c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15826a5200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1582535550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1582535550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1582526a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1582692570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f158252d480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f158252d480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f158251e8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1582685110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f15825e4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f15825ee020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15825e8c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f15825dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f15825e2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f15825ce2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f15825d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f15825e7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f15825dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f15825dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f15825e1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f15825ea370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f15825d5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f15825eaac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f15825d2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f15825eb060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f15825d7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f15825e5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f15825ef940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f15825d8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f15825da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f15825d7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f15825dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f15825dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f15825d3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f15825e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f15825cead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f15825e8490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f15825e4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f15825dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f15825e1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f15825db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f15825e3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f15825ee670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f15825e9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f15825e9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f15825d32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f15825d4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15825eb6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f15825d42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f15825cf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f15825dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f15825d8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f15825ed9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f15825e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f15825de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f15825d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f15825bd020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f15825b77c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15825a2150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f15825b6020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1583352e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f15825b5380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f1583350090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f15825b46b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f158334f390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f15825b3a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1583312a20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f15825b26e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15824bc520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f15824bc520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f15825b1530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f1582498480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1582498480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15825b0ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15824b6060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15824b6060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f15825b03a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f15824b6d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f15824b6d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f15825af330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825ae1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15825acd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1582535550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f15825aeb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f15834587e0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f15825a73e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f15824ad840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f15824ad840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f15825a7cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f15824ac060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f15824ac060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f15825a8b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f15824b4ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f15824b4ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f15825a56d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f1582499c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1582499c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f15825a6590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f158249cc60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f158249cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f15825a6e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f158249b480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f158249b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f15825a3020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f158249c480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f158249c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f15825a38b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f15824bac20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f15824bac20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f15825979d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1582531660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1582522af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f15824c8020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f158337a080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f158251c3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15824cbcf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f158251a6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f15838fca80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f15824c40b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f15824ae620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f15824b9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15824b2620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f15824a5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f15824ac840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f15824b8cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f15824a0060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f158249dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f15824b1620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f15824b0620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f15824a6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f15824a9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f15824ab060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15824ba2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f15824b66b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f158249f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f15824b4490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f15824b79c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f15824a2840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f15824b1e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15824b2e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f15824b92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f15824a3840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f15824a4060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f15824a2060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1582499480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f15824a8060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f15824a4840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f158249d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f15824aa060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f15824b3e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f15824b0e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f15824a6840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f15824ab840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f15824a5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f15824ad060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f15824b8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f15824b37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f158249ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f158249e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f158249fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f158249bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f15824a8840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f15824a3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f15824b8670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f15824b7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f15824aa840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f15824b3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f15824a9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f15824a0840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1582497160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f158245db40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1582462b50"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f158245c8f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f158245f690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f158245f690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15831241d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f158245b760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f158245a020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1582443200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f158243f570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f158243d3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1582443950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f158243da70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1582405d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f158240f6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1582404b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f158240f020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f15824032f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1582402170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1582402b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f15823b5410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f15823d6db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f15823a8800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15823a4580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f15823a4580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15831241d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1582390dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1582395d70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f158238faf0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1582359350"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1582359350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f15831241d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f158238c650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1582357750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1582357750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f158238d9a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f15825376e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1582388a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f15823842a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1582750dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f15827317f0"/></to>
    </wire>
    <wire loc="22:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f158233f670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582742080"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1582335c70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f158225f990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582c00560"/></to>
    </wire>
    <wire loc="30:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f158225e8b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f15835f2320"/></to>
    </wire>
    <wire loc="31:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7f158225c260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7f15836f7580"/></to>
    </wire>
    <wire loc="32:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f158225c9b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f1582cf2020"/></to>
    </wire>
    <wire loc="33:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f158225b540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f15836fd800"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1582220840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f15812a62e0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f15812a6ae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f15822095c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f158218fb90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f158218fb90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15821817c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1582205600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15821ed300"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1582204800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15821960d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582201800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582194a10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1582202020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f15821966c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f158218f540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1582181170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f15821892b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15821f1300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f15821934a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f158218b790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1582191120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f158218cc60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1582184970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f1581e758c0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f158218b790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1582052de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f158218cc60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f15820526c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f1582051c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1582184970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1582176020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15821892b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f158204e920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15821892b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1582045cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f15821892b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f158204f590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1582177c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f158204fe80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f158217a720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1582179020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f158204ae00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1582170860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1582020080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1582020080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1581e88080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f158203cd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1582020890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1582020890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1581e8e440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f158211b6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f15821524f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f158211ec70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f1582117a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f158204c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f158204c800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f158201e020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1581e8d440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1581e8d440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1582009020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f1581e8e440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f158200c860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581e8c020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581e888e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1581e86020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1581e8f020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1581e8f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f158200e7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581e8fc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15812295d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f15812295d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581ed1510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1582007450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581e8c020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15812237c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f158200da30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f15820081d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f158122a880"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f158122a880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1581ed2280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15820061d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1581223020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1581223020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1581ed3510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f158200da30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581f9adc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f1582009020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f1581f98890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f158200c860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f1581f996d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f158200e7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1581f9a020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581f963e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1582007450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1581f975b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f15820081d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1581f915b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15820061d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1581f96a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1581f81d30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1581f81d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1581f7a550"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1581f90020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1581eed110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1581eed110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f158387f020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1581f8d120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1581f7e860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1581f75130"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581f81500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581f7dbc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1581f75a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f1583ad7cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1581f73990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f1583ad5cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1581f71990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f1583ad2cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1581f6f990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f1583acecc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1581f6d990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f1583ad0cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15812285a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1581f81d30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581229d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ed1d20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ed1d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ec6060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581ed0af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15812237c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581ed1510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581ec8bd0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581ec8bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f15811ba3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1581ed3510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1581ece230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1581ed2280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1581ec9e30"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1581ec9e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f15811bb540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ec6060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15811b98b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1581ecc2f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1581f7e860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581ec6930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581ed0af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ecb120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ec6060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581eab9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581ec7400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581ec7400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15811bab20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581ec0b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581f81500"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15811b8210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581ec6930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f15811b89d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f15811be330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f15811b6c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15811853a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581ec0b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1581185b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1581eab400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15811840f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581eab9d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581184d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581eaa720"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f1581e5c7f0"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f1581e55850"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f1581e5fa20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f1581e56020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1581e54e20"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1582c01540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f1581e52600"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1581e07020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1583ea4220"/></to>
    </wire>
    <wire loc="20:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f1581e07650"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f1581e06620"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f15834d1020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1581e06c80"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1583463020"/></to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1581e053a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b4c020"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f1581df8130"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f15835f3080"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1581e0a8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15835f39e0"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1581e0a8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1583747bb0"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1581e0a8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f15834d36f0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f1581df5980"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f1581176ce0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f1581175500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1581d46ca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f1581d70760"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1581d44df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1581d78870"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1581d78870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f15811660c0"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1581d43a90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1581d77590"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1581d77590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1582204e10"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1581d232a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1581d46400"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1581d76270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1582202020"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1581d758f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582201800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1581166d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1581dd2ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1581165970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1582202020"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1581dd2ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1581d86580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1581d85400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1582205600"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1581d84060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1582202020"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1581d82720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1582204e10"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1581d81480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1581d81c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f1581d3dd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f1581d22c00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f1581d232a0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1581d19b90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1583ea4220"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f1581d163c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f15822095c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582327910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582327910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582327910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f1583c9b110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582327910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582327910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1583df4890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1583df4c30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1583df3020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1583df33a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1583df3720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1583df3a90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1583df3e20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1583df2200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1583df25d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1583db6e70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1583db3270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1583ab0190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1583ab0540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1583ab08f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1583ab0ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1583aaf060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f15838bc9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f15838bc9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f158387a120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f158387a120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1583868a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1583868a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1583865290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1583865290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1583865680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1583865680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1583865e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1583865e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1583864260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1583864a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1583864a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1583889ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1583889ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f15838432d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f15838432d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f15838436c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f15838436c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1583841020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1583841020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f15838413f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15838034f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15838034f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15837d3d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15837d3d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f15837d00d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f158377f1f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f158377f1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1582f0d020" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1582f000d0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1582ee47e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7f1582aa5020" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f1582327910" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582327910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f1582327c80" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f1582320e00" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1582320e00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f158231c180" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f15822f7a50" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f15822f7a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f15822f7dd0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1581def8b0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1581de85d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1581dcb0d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f1581d73de0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f1581d73de0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f1581d6f1c0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1583ea3720" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583ea3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583ea3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1583ea4220" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1583ea4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1583ea45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583ea7700" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583ea7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583ea7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1583e9e740" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1583e9e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e9eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583ea1910" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583ea1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583ea1c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f1583e9e060" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1583e9e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e9e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f1583e9ee20" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f1583e9ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e9d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583ea0c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583ea0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f1583e80020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1583e80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1583e766c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1583e766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1583e7c660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1583e76bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1583e76d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1583e7c020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1583e76a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1583e7c1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1583e7c340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1583e7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583e7d020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583e7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1583e663d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1583e663d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1583e65340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1583e668e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1583e66a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1583e66c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1583e66750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1583e66d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1583e65020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1583e651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1583e65680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1583e65680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1583e65a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583e68cb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583e68cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583e660a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f1583e225a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f1583e225a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e22920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e22ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e22c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e22dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e21020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e211b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e21340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e214d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e21660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f1583e10020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f1583e10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e103a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e10530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e106c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e10850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e109e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e10b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e10d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e0f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1583e19700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1583e19700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e19a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583e19c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1583e19da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583e18020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583e181b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583e18340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f1583dfda20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f1583dfda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583dfdda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583dfc020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583dfc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dfc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dfc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583dfc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f1583e20aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1583e20aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e20e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e1f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e1f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e1f340"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1583e04020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1583e04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e043a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e04530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e046c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e04850"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e049e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1583dfaa20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1583dfaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583dfada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583df9020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583df91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583df9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583df94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583df9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f1583e0b5a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f1583e0b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e0b920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e0bab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e0bc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e0bdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e0a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e0a1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e0a340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e0a4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e0a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1583e23b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1583e23b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e2a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e2a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e2a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e2a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e2a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e2a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e2a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e2ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e2aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f1583dffa20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f1583dffa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583dffda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583dfe020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583dfe1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dfe340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dfe4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583dfe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f1583e063e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f1583e063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e06760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e068f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e06a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e06c10"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e06da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f1583e0f5a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f1583e0f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e0fa20"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e0fbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e0fd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e0e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e0e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e0e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e0e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e0e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e0e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1583e18700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1583e18700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e18a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583e18c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1583e18da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583e12020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583e121b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583e12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f1583dfca20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f1583dfca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583dfcda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583dfb020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583dfb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dfb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dfb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583dfb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f1583e0ebe0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f1583e0ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e0d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e0d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e0d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e0d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e0d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e0d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e0d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e0db10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e0dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f1583e1f890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f1583e1f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e1fc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e1fda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e1a020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e1a1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e1a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1583e33060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1583e33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583e333e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583e33570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e33700"/>
        <function-ref name="get" scoped="" ref="0x7f1583e33890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e33a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583e33bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583e33d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583e32020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583e321b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583e32340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583e324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1583e04da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1583e04da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e02180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e02310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e024a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e02630"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e027c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f1583e290c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1583e290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e29440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e295d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e29760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e298f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e29a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e29c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e29da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e22020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1583e0aa50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1583e0aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e0add0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e09020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e091b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e09340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e094d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e09660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e097f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e09980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e09b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f1583e136d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f1583e136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e13a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583e13be0"/>
        <function-ref name="captured" scoped="" ref="0x7f1583e13d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583e19020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583e191b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583e19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f1583dfea20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f1583dfea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583dfeda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583dfd020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583dfd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dfd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dfd4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583dfd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f1583e1bcf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1583e1bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e200a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e20230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e203c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e20550"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f1583e051f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f1583e051f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e05570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e05700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e05890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e05a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e05bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f1583dfba20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f1583dfba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583dfbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583dfa020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583dfa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dfa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dfa4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583dfa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f1583e0c0c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f1583e0c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e0c440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e0c5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e0c760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e0c8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e0ca80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e0cc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e0cda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e0b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f1583e126c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f1583e126c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583e12a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583e12bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e12d60"/>
        <function-ref name="get" scoped="" ref="0x7f1583e11020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e111b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583e11340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583e114d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583e11660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583e117f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583e11980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583e11b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1583e02b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1583e02b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e01020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e011b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e01340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e014d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e01660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f1583e00a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f1583e00a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e00da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583dff020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583dff1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dff340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dff4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583dff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1583e01a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1583e01a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e00020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e001b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e00340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e004d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1583e07570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1583e07570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583e078f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583e07a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583e07c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583e07da0"/>
        <function-ref name="fired" scoped="" ref="0x7f1583e06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1583e08020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1583e08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583e083a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583e08530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583e086c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583e08850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583e089e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583e08b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583e08d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583e07020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583e071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1583dc0aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1583dc0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583dc0e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1583dc0450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1583dc0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583dc07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1583dbf120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1583dbf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583dbf4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1583dc1d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583dc1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583dc0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1583dc2540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583dc2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583dc28c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583dc2a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583dc2be0"/>
        <function-ref name="get" scoped="" ref="0x7f1583dc2d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583dc1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dc11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583dc1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dc14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583dc1660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583dc17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583dc1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1583db9940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1583db9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583db9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1583db92f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1583db92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583db9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1583db7020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1583db7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583db73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1583dbabf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583dbabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583db9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1583dbb3e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583dbb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583dbb760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583dbb8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583dbba80"/>
        <function-ref name="get" scoped="" ref="0x7f1583dbbc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583dbbda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583dba020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583dba1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583dba340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583dba4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583dba660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583dba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d6ca90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d6ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d6ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d6b020"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d6b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d6b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d6b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583db49d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583db49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583db4d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d6e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d6e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d6e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d6e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d6e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d6e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d6e980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d6eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d69020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d6ede0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d6ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d6c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d6c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d6c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d6c630"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d6c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d6b930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d6b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d6bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d6be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d6a020"/>
        <function-ref name="get" scoped="" ref="0x7f1583d6a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d6a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d6a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d6a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d6a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d6a980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d6ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d6aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d64160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d64160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d644e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d64670"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d64800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d64990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d64b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d64cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d66020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d663a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d66530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d666c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d66850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d669e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d66b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d66d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d65020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d627a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d62b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d65480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d65480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d65800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d65990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d65b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d65cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d65e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d63020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d633a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d63530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d636c0"/>
        <function-ref name="get" scoped="" ref="0x7f1583d63850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d639e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d63b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d63d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d62020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d621b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d62340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d5d7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d5d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d5db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d5dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d5de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d5b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d5b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d5f6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d5f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d5fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d5fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d5fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d5e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d5e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d5e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d5e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d5e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d5e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d5ac50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d5ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d5eac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d5eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d5ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d5d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d5d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d5d340"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d5d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d5b610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d5b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d5b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d5bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d5bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f1583d5be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d5a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d5a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d5a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d5a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d5a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d5a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d5a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d55cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d55cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d540a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d54230"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d543c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d54550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d546e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d54870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d57b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d57b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d56020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d561b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d56340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d564d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d56660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d567f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d56980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d56b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d56ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d522f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d52670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d55020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d553a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d55530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d556c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d55850"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d559e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d54b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d54b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d53020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d531b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d53340"/>
        <function-ref name="get" scoped="" ref="0x7f1583d534d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d53660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d537f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d53980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d53b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d53ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d53e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d4d2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d4d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d4d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d4d800"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d4d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d4db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d4dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d4de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d4f220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d4f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d4f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d4f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d4f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d4fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d4fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d4fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d4e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d4e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d4e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d4a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d4a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d4ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d4e610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d4e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d4e990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d4eb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d4ecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d4ee40"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d4b160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d4b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d4b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d4b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d4b800"/>
        <function-ref name="get" scoped="" ref="0x7f1583d4b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d4bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d4bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d4be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d4a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d4a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d4a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d457a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d457a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d45b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d45cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d45e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d44020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d441b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d44340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d476d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d47a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d47be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d47d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d46020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d461b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d46340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d464d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d46660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d467f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d43c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d43c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d46ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d46ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d46e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d45020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d451b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d45340"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d44610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d44610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d44990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d44b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d44cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1583d44e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d43020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d431b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d43340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d434d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d43660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d437f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d43980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d3ecb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d3ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d3d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d3d230"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d3d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d3d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d3d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d3d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d40b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d40b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d3f020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d3f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d3f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d3f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d3f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d3f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d3f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d3fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d3fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d3a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d3a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d3a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d3e020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d3e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d3e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d3e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d3e850"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d3e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d3db40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d3db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d3b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d3b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d3b340"/>
        <function-ref name="get" scoped="" ref="0x7f1583d3b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d3b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d3b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d3b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d3bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d3bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d3be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d352f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d35670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d35800"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d35990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d35b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d35cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d35e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d37220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d37220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d375a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d37730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d378c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d37a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d37be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d37d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d36020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d361b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d36340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d337a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d33b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d36610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d36610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d36990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d36b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d36cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d36e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d34160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d34160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d344e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d34670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d34800"/>
        <function-ref name="get" scoped="" ref="0x7f1583d34990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d34b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d34cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d34e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d33020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d331b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d33340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d2e7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d2e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d2eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d2ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d2ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d2d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d2d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d306d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d30a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d30be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d30d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d2f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d2f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d2f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d2f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d2f660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d2f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d2bc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d2bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d2fac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d2fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d2fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d2e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d2e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d2e340"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d2d610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d2d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d2db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d2dcb0"/>
        <function-ref name="get" scoped="" ref="0x7f1583d2de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d2b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d2b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d2b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d2b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d2b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d2b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d2b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1583d26cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1583d26cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d250a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1583d25230"/>
        <function-ref name="captured" scoped="" ref="0x7f1583d253c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d25550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d256e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1583d25870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1583d28b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1583d28b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1583d27020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1583d271b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d27340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1583d274d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1583d27660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d277f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1583d27980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1583d27b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1583d27ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1583d232f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1583d232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d23670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1583d26020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1583d26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1583d263a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1583d26530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1583d266c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1583d26850"/>
        <function-ref name="fired" scoped="" ref="0x7f1583d269e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583d25b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583d25b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583d24020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583d241b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1583d24340"/>
        <function-ref name="get" scoped="" ref="0x7f1583d244d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1583d24660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583d247f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583d24980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583d24b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583d24ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1583d24e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1583d23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f1583d1d240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1583d1d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d1d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1583d21a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1583d21a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d21e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f1583d1e260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1583d1e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d1e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f1583d1e9f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1583d1e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583d1ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f158401e4c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f158401e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f158401e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f15843333b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f15843333b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1584333730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f15843338c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1584333a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f158415abc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f158415abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1584296020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f1583e7eb40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1583e7eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1583ce5b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1583ce51b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1583ce5340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1583ce54d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1583ce5020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1583ce5660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1583ce57f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1583ce5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1583cdadc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1583cdadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583cd8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1583ce6590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1583ce6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1583ce6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1583cda6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1583cda6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583cdaa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1583ce6c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1583ce6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583cda020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1583cda1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1583cda340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f158440b410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f158440b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f158440b790"/>
        <function-ref name="runTask" scoped="" ref="0x7f158440b920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f158439c3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f158439c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158439c720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f158439c8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f158439ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1583f44040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1583f44040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583f443c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1583f44550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1583f3e490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1583f3e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1583f3e810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1583f3e9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1583f3eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1583f46140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1583f46140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583f464c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1583f46650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1583f467e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f1583c4b9f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f1583c4b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f1583c4bd70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f1583c4e020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f1583c4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1583c448b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1583c448b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1583c44c30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1583c44dc0"/>
        <function-ref name="start" scoped="" ref="0x7f1583c4a020"/>
        <function-ref name="stop" scoped="" ref="0x7f1583c4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1583c82750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1583c82750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1583c82ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1583bc37a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1583bc37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1583bc3b20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1583bc3cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1583bc3e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1583bda020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1583bda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1583bcc5a0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1583bcc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1583bcca20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1583bccbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1583bccd40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1583c1a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1583c1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f1583bdbb50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f1583bdbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f1583c43020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f1583c431b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f1583c43340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1583be6b60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1583be6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1583c3d020"/>
        <function-ref name="rand32" scoped="" ref="0x7f1583c3d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7f1583c3ea20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7f1583c3ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f1583c3eda0"/>
        <function-ref name="bind" scoped="" ref="0x7f1583c48020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f1583c481b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f1583c48340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f1583b98820" loc="242:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f1583b98820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583b98ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1583b98d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f1583c49d90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f1583c49d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1583c4d180"/>
        <function-ref name="stop" scoped="" ref="0x7f1583c4d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7f1583c63820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7f1583c63820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583c61cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1583c6d300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1583c610d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1583c6dc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f1583c60660"/>
        <function-ref name="gett0" scoped="" ref="0x7f1583c601e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583c6d780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583c81480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583c616e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1583c81950"/>
        <function-ref name="stop" scoped="" ref="0x7f1583c81e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f1583bd7130" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1583bd7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1583bd74b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1583c6e0d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1583c6e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1583c6e450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1583c6e5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1583c6e770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1583c6e900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1583c6ea90"/>
        <function-ref name="get" scoped="" ref="0x7f1583c6ec20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1583c6edb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1583c824d0"/>
        <function-ref name="set" scoped="" ref="0x7f1583c82020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1583c821b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1583c82340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f1583c4f6b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f1583c4f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f1583c4fa30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f1583c59b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f1583c59ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f1583c59020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f1583c591b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f1583c59340"/>
        <function-ref name="getRank" scoped="" ref="0x7f1583c594d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f1583c59660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f1583c4fd50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f1583c597f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f1583c59980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f1583c4fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1583c60c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583c60c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583c5b170"/>
        <function-ref name="fired" scoped="" ref="0x7f1583c5e720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1583c5c510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1583c5c090"/>
        <function-ref name="getdt" scoped="" ref="0x7f1583c5ba70"/>
        <function-ref name="gett0" scoped="" ref="0x7f1583c5b5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583c5eba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583c5f8a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583c5cb20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1583c5fd70"/>
        <function-ref name="stop" scoped="" ref="0x7f1583c5e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1583b88ad0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1583b88ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1583b88e50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1583b85020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1583b851b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1583b85340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1583b854d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b85660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1583b857f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1583b85e30"/>
        <function-ref name="set" scoped="" ref="0x7f1583b85980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1583b85b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1583b85ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1583b79a90" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1583b79a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b79e10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b7f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b7f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b7f340"/>
        <function-ref name="get" scoped="" ref="0x7f1583b7f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b7f660"/>
        <function-ref name="set" scoped="" ref="0x7f1583b7f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b7f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583b84db0" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583b84db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583b81180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1583b7fca0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1583b7fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b7e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b7e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b7e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b7e550"/>
        <function-ref name="get" scoped="" ref="0x7f1583b7e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b7e870"/>
        <function-ref name="set" scoped="" ref="0x7f1583b7ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b7eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1583b81400" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1583b81400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1583b81780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1583b81910"/>
        <function-ref name="led1On" scoped="" ref="0x7f1583b81aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1583b81c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1583b81dc0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b80020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1583b801b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1583b807f0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b80340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1583b804d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1583b80660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1583b78020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1583b78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b783a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b78530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b786c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b78850"/>
        <function-ref name="get" scoped="" ref="0x7f1583b789e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b78b70"/>
        <function-ref name="set" scoped="" ref="0x7f1583b78d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1583b82590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1583b82590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b82910"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b82aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b82c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b82dc0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b5b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b5b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b5b340"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1583b5b830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1583b5b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b5bbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b5bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b5a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b5a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b5a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b5a660"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1583b59dd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583b59dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583b58180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1583b5ab50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1583b5ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b59020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b591b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b59340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b594d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b59660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b597f0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b59980"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b59b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1583b43810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1583b43810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b43b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b43d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b42020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b42340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b42660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b427f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b42980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b42b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b42ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b42e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b41020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b412b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b41440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1583b2e810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1583b2e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b2eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b2ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b2d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b2d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b2d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b2d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b2d660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b2d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b2d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b2db10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b2dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b2de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b2c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b2c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b2c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f1583ae5ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1583ae5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ae40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ae4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ae43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ae4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ae46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ae4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ae4a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ae4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ae4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ae3020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ae31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ae3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ae34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ae3760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ae38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1583ac0cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1583ac0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583abf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583abf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583abf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583abf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583abf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583abf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583abfa00"/>
        <function-ref name="get" scoped="" ref="0x7f1583abfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583abfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583abe020"/>
        <function-ref name="set" scoped="" ref="0x7f1583abe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583abe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583abe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583abe760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583abe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f1583ae3cc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f1583ae3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ae20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ae2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ae23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ae2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ae26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ae2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ae2a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ae2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ae2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ae1020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ae11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ae1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ae14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ae1760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ae18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1583b2a810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1583b2a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b2ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b2ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b29020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b29340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b29660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b29980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b29b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b29ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b29e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b28020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b282b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b28440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1583b169a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1583b169a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b16d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b15020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b151b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b15340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b154d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b15660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b157f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b15980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b15b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b15ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b15e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b14020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b141b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b14440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b145d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1583b019a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1583b019a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b01d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b00020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b00340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b004d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b00660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b007f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b00980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b00b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b00ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b00e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583aff020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583aff1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583aff440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583aff5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1583af19a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1583af19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583af1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583af0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583af01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583af0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583af04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583af0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583af07f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583af0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583af0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583af0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583af0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583aef020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583aef1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583aef440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583aef5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f1583addcc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f1583addcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583adc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583adc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583adc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583adc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583adc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583adc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583adca00"/>
        <function-ref name="get" scoped="" ref="0x7f1583adcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583adcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583adb020"/>
        <function-ref name="set" scoped="" ref="0x7f1583adb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583adb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583adb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583adb760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583adb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1583acccb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1583acccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583acb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583acb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583acb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583acb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583acb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583acb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583acba00"/>
        <function-ref name="get" scoped="" ref="0x7f1583acbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583acbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583aca020"/>
        <function-ref name="set" scoped="" ref="0x7f1583aca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583aca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583aca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583aca760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583aca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f1583ab8cc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f1583ab8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ab70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ab7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ab73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ab7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ab76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ab7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ab7a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ab7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ab7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ab6020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ab61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ab6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ab64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ab6760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ab68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1583b3d810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1583b3d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b3db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b3dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b3c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b3c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b3c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b3c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b3c660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b3c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b3c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b3cb10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b3cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b3ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b3b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b3b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b3b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f1583adbcc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f1583adbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ada0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ada230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ada3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ada550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ada6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ada870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583adaa00"/>
        <function-ref name="get" scoped="" ref="0x7f1583adab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583adad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ad9020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ad91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ad9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ad94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ad9760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ad98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1583b39810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1583b39810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b39b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b39d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b38020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b38340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b38660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b387f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b38980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b38b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b38ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b38e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b37020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b372b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b37440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1583b24810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1583b24810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b24b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b24d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b23020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b23340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b23660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b237f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b23980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b23b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b23ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b23e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b22020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b222b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b22440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1583b109a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1583b109a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b10d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b0f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b0f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b0f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b0f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b0f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b0f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b0f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b0fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b0fca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b0fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b0e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b0e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b0e440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b0e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1583afb9a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1583afb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583afbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583afa020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583afa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583afa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583afa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583afa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583afa7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583afa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583afab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583afaca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583afae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583af9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583af91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583af9440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583af95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1583aeb9a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1583aeb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583aebd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583aea020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583aea1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583aea340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583aea4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583aea660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583aea7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583aea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583aeab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583aeaca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583aeae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ae9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ae91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ae9440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ae95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1583b47810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1583b47810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b47b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b47d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b46020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b46340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b46660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b467f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b46980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b46b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b46ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b46e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b45020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b452b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b45440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1583b33810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1583b33810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b33c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b33e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b31020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b31340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b31660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b317f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b31980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b31b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b31ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b31e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b30020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b302b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b30440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1583b1e810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1583b1e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b1eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b1ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b1d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b1d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b1d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b1d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b1d660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b1d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b1d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b1db10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b1dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b1de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b1c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b1c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b1c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f1583ae7cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f1583ae7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ae60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ae6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ae63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ae6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ae66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ae6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ae6a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ae6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ae6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ae5020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ae51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ae5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ae54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ae5760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ae58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1583ac6cb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1583ac6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ac50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ac5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ac53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ac5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ac56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ac5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ac5a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ac5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ac5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ac4020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ac41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ac4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ac44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ac4760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ac48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f1583abacb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f1583abacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ab90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ab9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ab93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ab9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ab96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ab9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ab9a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ab9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ab9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ab8020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ab81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ab8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ab84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ab8760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ab88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f1583ad2cc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f1583ad2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ad10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ad1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ad13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ad1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ad16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ad1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ad1a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ad1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ad1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ad0020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ad01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ad0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ad04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ad0760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ad08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1583b1a810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1583b1a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b1ad90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b19020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b19340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b19660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b197f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b19980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b19b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b19ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b19e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b18020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b18440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b185d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1583b069a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1583b069a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b06d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b05020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b05340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b054d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b05660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b057f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b05980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b05b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b05ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b05e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b04020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b04440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b045d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1583af59a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1583af59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583af5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583af4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583af41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583af4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583af44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583af4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583af47f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583af4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583af4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583af4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583af4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583af3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583af31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583af3440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583af35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1583ac4cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1583ac4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ac30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ac3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ac33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ac3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ac36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ac3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ac3a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ac3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ac3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ac2020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ac21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ac2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ac24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ac2760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ac28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f1583ad9cb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f1583ad9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ad80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ad8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ad83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ad8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ad86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ad8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ad8a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ad8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ad8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ad7020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ad71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ad7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ad74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ad7760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ad78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1583b41810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1583b41810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b41b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b41d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b40020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b40340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b40660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b407f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b40980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b40b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b40ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b40e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b3f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b3f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b3f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1583b2c810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1583b2c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b2cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b2cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b2b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b2b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b2b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b2b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b2b660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b2b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b2b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b2bb10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b2bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b2be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b2a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b2a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b2a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1583af99a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1583af99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583af9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583af8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583af81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583af8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583af84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583af8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583af87f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583af8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583af8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583af8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583af8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583af7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583af71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583af7440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583af75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1583b28810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1583b28810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b28b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b28d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b27020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b27340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b27660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b27980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b27b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b27ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b27e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b26020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b262b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b26440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1583b149a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1583b149a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b14d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b13020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b131b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b13340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b134d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b13660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b137f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b13980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b13b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b13ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b13e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b12020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b121b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b12440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b125d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1583aff9a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1583aff9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583affd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583afe020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583afe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583afe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583afe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583afe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583afe7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583afe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583afeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583afeca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583afee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583afd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583afd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583afd440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583afd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1583aef9a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1583aef9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583aefd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583aee020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583aee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583aee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583aee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583aee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583aee7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583aee980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583aeeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583aeeca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583aeee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583aed020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583aed1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583aed440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583aed5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f1583ad5cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f1583ad5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ad30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ad3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ad33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ad3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ad36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ad3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ad3a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ad3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ad3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ad2020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ad21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ad2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ad24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ad2760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ad28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1583b49870" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1583b49870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b49bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b49d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b54020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b54340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b54660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b547f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b54980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b54b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b54ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b54e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b53020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b532b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b53440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1583b37810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1583b37810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b37b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b37d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b36020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b36340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b36660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b367f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b36980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b36b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b36ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b36e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b35020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b352b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b35440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1583b22810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1583b22810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b22b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b22d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b21020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b21340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b21660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b217f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b21980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b21b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b21ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b21e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b20020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b202b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b20440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1583b0e9a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1583b0e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b0ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b0d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b0d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b0d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b0d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b0d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b0d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b0d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b0db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b0dca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b0de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b0c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b0c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b0c440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b0c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f1583ad0cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f1583ad0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583acf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583acf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583acf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583acf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583acf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583acf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583acfa00"/>
        <function-ref name="get" scoped="" ref="0x7f1583acfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583acfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ace020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ace1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ace340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ace4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ace760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ace8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1583acacb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1583acacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ac90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ac9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ac93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ac9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ac96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ac9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ac9a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ac9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ac9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ac8020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ac81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ac8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ac84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ac8760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ac88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1583abecb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1583abecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583abd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583abd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583abd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583abd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583abd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583abd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583abda00"/>
        <function-ref name="get" scoped="" ref="0x7f1583abdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583abdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583abc020"/>
        <function-ref name="set" scoped="" ref="0x7f1583abc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583abc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583abc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583abc760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583abc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1583b0a9a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1583b0a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b0ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b09020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b091b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b09340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b094d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b09660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b097f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b09980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b09b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b09ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b09e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b08020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b081b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b08440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b085d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f1583acecc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f1583acecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583acd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583acd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583acd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583acd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583acd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583acd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583acda00"/>
        <function-ref name="get" scoped="" ref="0x7f1583acdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583acdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583acc020"/>
        <function-ref name="set" scoped="" ref="0x7f1583acc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583acc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583acc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583acc760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583acc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1583b45810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1583b45810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b45b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b45d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b44020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b44340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b44660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b447f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b44980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b44b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b44ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b44e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b43020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b432b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b43440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1583b30810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1583b30810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b30b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b30d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b2f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b2f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b2f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b2f660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b2f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b2f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b2fb10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b2fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b2fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b2e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b2e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b2e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1583b1c810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1583b1c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b1cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b1cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b1b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b1b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b1b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b1b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b1b660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b1b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b1b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b1bb10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b1bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b1be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b1a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b1a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b1a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f1583ad7cc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f1583ad7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ad60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ad6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ad63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ad6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ad66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ad6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ad6a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ad6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ad6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ad5020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ad51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ad5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ad54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ad5760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ad58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1583ac2cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1583ac2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ac10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ac1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ac13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ac1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ac16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ac1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ac1a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ac1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ac1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ac0020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ac01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ac0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ac04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ac0760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ac08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1583b189a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1583b189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b18d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b17020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b171b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b17340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b17660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b177f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b17980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b17b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b17ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b17e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b16020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b161b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b16440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1583b049a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1583b049a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b04d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b02020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b021b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b02340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b024d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b02660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b027f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b02980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b02b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b02ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b02e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b01020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b011b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b01440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b015d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1583af39a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1583af39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583af3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583af2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583af21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583af2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583af24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583af2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583af27f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583af2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583af2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583af2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583af2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583af1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583af11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583af1440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583af15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1583b3f810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1583b3f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b3fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b3fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b3e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b3e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b3e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b3e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b3e660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b3e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b3e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b3eb10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b3eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b3ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b3d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b3d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b3d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1583af79a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1583af79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583af7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583af6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583af61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583af6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583af64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583af6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583af67f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583af6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583af6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583af6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583af6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583af5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583af51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583af5440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583af55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1583b3b810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1583b3b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b3bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b3bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b3a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b3a660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b3a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b3a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b3ab10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b3aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b3ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b39020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b392b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b39440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1583b26810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1583b26810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b26b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b26d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b25020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b25340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b25660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b25980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b25b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b25ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b25e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b24020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b242b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b24440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1583b129a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1583b129a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b12d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b11020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b111b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b11340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b11660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b117f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b11980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b11b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b11ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b11e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b10020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b10440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b105d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1583afd9a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1583afd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583afdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583afc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583afc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583afc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583afc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583afc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583afc7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583afc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583afcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583afcca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583afce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583afb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583afb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583afb440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583afb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1583aed9a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1583aed9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583aedd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583aec020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583aec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583aec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583aec4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583aec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583aec7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583aec980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583aecb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583aecca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583aece30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583aeb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583aeb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583aeb440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583aeb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1583b53810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1583b53810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b53b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b53d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b48020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b48340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b48660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b487f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b48980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b48b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b48ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b48e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b47020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b472b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b47440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1583b35810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1583b35810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b35b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b35d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b34020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b34340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b34660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b347f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b34980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b34b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b34ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b34e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b33020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b332b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b33440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1583b20810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1583b20810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b20b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b20d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b1f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b1f660"/>
        <function-ref name="get" scoped="" ref="0x7f1583b1f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b1f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b1fb10"/>
        <function-ref name="set" scoped="" ref="0x7f1583b1fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b1fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b1e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b1e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b1e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1583b0c9a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1583b0c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b0cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b0b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b0b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b0b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b0b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b0b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b0b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b0b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b0bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b0bca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b0be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b0a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b0a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b0a440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b0a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f1583adfca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1583adfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ade0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ade230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ade3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ade550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ade6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ade870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583adea00"/>
        <function-ref name="get" scoped="" ref="0x7f1583adeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583aded20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583add020"/>
        <function-ref name="set" scoped="" ref="0x7f1583add1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583add340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583add4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583add760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583add8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1583ac8cb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1583ac8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ac70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ac7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ac73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ac7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ac76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ac7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ac7a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ac7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ac7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ac6020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ac61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ac6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ac64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ac6760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ac68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f1583ae1cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f1583ae1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ae00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ae0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ae03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ae0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ae06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ae0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ae0a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ae0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ae0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583adf020"/>
        <function-ref name="set" scoped="" ref="0x7f1583adf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583adf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583adf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583adf760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583adf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1583b089a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1583b089a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583b08d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583b07020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583b071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583b07340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583b074d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583b07660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583b077f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583b07980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583b07b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583b07ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583b07e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583b06020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583b061b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583b06440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583b065d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f1583abccb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f1583abccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583abb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583abb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583abb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583abb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583abb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583abb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583abba00"/>
        <function-ref name="get" scoped="" ref="0x7f1583abbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583abbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583aba020"/>
        <function-ref name="set" scoped="" ref="0x7f1583aba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583aba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583aba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583aba760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583aba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f1583ab6cc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f1583ab6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ab50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ab5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ab53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ab5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ab56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ab5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ab5a00"/>
        <function-ref name="get" scoped="" ref="0x7f1583ab5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ab5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ab4020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ab41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ab4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ab44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ab4760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ab48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f1583ae99f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f1583ae99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583ae81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583ae8350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583ae84e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583ae8670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583ae8800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583ae8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583ae8b20"/>
        <function-ref name="get" scoped="" ref="0x7f1583ae8cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583ae8e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583ae7020"/>
        <function-ref name="set" scoped="" ref="0x7f1583ae71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583ae7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583ae74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583ae7760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583ae78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583ab1d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583ab1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a8a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a8a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a8a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a8a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a8a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a8a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a8aa40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a8abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a8ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a89020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a891b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a89340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a894d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a89760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a898f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a86740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a86740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a86ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a86c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a86de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a84020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a84340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a844d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a84660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a84980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a84b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a84ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a84e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a83120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a80100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a80100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a80480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a80610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a807a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a80930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a80ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a80c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a80de0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a7f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a7f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a7f340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a7f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a7f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a7f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a7fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a7fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a7cd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a7cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a7b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a7b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a7b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a7b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a7b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a7b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a7ba40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a7bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a7bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a7a020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a7a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a7a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a7a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a7a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a7a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a77740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a77740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a77ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a77c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a77de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a761b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a76340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a764d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a76660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a76980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a76b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a76ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a76e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a75120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a72100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a72100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a72480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a72610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a727a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a72930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a72ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a72c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a72de0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a71340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a71660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a71a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a6ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a6ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a6d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a6d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a6d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a6d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a6d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a6da40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a6dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a6dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a6c020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a6c760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a69740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a69740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a69ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a69c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a69de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a68020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a681b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a68340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a684d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a68660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a68980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a68b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a68ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a68e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a67120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a64100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a64100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a64480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a64610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a647a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a64930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a64ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a64c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a64de0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a63340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a63660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a63a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a63c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a60d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a60d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a5e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a5e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a5e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a5e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a5e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a5e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a5ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a5ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a5ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a5d020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a5d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a5d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a5d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a5d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a5d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a5a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a5a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a5aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a5ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a5ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a59340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a594d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a59660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a59980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a59b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a59ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a59e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a58120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a55100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a55100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a55480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a55610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a557a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a55930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a55ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a55c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a55de0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a54020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a54340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a54660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a54a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a54c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a51d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a51d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a50180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a50310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a504a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a50630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a507c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a50950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a50ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a50c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a50e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a4f020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a4f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a4f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a4f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a4f760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a4f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a4c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a4c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a4cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a4cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a4cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a4b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a4b980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a4a120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a47100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a47480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a47610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a477a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a47930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a47ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a47c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a47de0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a46340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a46a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a43d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a420e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a42270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a42400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a42590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a42720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a428b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a42a40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a42bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a42d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a41020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a41340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a41760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a3e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a3e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a3eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a3ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a3ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a3d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a3d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a3d980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a3db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a3dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a3de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a3c120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a38100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a38480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a38610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a387a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a38930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a38ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a38c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a38de0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a37340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a37a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a34d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a34d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a330e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a33270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a33400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a33590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a33720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a338b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a33a40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a33bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a33d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a32020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a32340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a32760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a2f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a2f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a2fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a2fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a2fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a2e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a2e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a2e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a2e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a2e980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a2eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a2eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a2ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a2d120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a2d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a2a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a2a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a2a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a2a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a2a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a2a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a2aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a2ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a2ade0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a29020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a291b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a29340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a294d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a29660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a297f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a29a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a29c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a26d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a26d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a250e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a25270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a25400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a25590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a25720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a258b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a25a40"/>
        <function-ref name="get" scoped="" ref="0x7f1583a25bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a25d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a24020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a24340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a24760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a21740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a21740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a21ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a21c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a21de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a20020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a201b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a20340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a204d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a20660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a207f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a20980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a20b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a20ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a20e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a1f120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a1f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a1c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a1c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a1c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a1c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a1c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a1c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a1cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a1cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a1cde0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a1b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a1b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a1b340"/>
        <function-ref name="set" scoped="" ref="0x7f1583a1b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a1b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a1b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a1ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a1bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a18e60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a18e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a16210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a163a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a16530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a166c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a16850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a169e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a16b70"/>
        <function-ref name="get" scoped="" ref="0x7f1583a16d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a15020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a151b0"/>
        <function-ref name="set" scoped="" ref="0x7f1583a15340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a154d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a15660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a158f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a15a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a129f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a129f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a12d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a11020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a111b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a11340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a11660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a117f0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a11980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a11b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a11ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1583a11e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a10020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a10440"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a105d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a0d460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a0d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a0d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a0d970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a0db00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a0dc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a0de20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a0c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a0c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a0c660"/>
        <function-ref name="set" scoped="" ref="0x7f1583a0c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a0c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a0cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a0cda0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a09e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a09e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a081c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a08350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a084e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a08670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a08800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a08990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a08b20"/>
        <function-ref name="get" scoped="" ref="0x7f1583a08cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a08e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a07020"/>
        <function-ref name="set" scoped="" ref="0x7f1583a071b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a07340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a074d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a07760"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a078f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1583a04740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1583a04740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583a04ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583a04c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583a04de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583a03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583a031b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583a03340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583a034d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583a03660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583a037f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583a03980"/>
        <function-ref name="set" scoped="" ref="0x7f1583a03b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583a03ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583a03e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583a02120"/>
        <function-ref name="clr" scoped="" ref="0x7f1583a022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839ff100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839ff480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839ff610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839ff7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839ff930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839ffac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839ffc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839ffde0"/>
        <function-ref name="get" scoped="" ref="0x7f15839fe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839fe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839fe340"/>
        <function-ref name="set" scoped="" ref="0x7f15839fe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839fe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839fe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839fea80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839fec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839fbd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839fbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839fa0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839fa270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839fa400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839fa590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839fa720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839fa8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839faa40"/>
        <function-ref name="get" scoped="" ref="0x7f15839fabd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839fad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839f9020"/>
        <function-ref name="set" scoped="" ref="0x7f15839f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839f9760"/>
        <function-ref name="clr" scoped="" ref="0x7f15839f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839f6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839f6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839f6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839f6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839f51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839f5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839f54d0"/>
        <function-ref name="get" scoped="" ref="0x7f15839f5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839f57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839f5980"/>
        <function-ref name="set" scoped="" ref="0x7f15839f5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839f5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839f5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839f4120"/>
        <function-ref name="clr" scoped="" ref="0x7f15839f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839f1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839f1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839f1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839f17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839f1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839f1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839f1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839f1de0"/>
        <function-ref name="get" scoped="" ref="0x7f15839ef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839ef1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839ef340"/>
        <function-ref name="set" scoped="" ref="0x7f15839ef4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839ef660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839ef7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839efa80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839efc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839ecd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839ecd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839eb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839eb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839eb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839eb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839eb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839eb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839eba40"/>
        <function-ref name="get" scoped="" ref="0x7f15839ebbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839ebd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839ea020"/>
        <function-ref name="set" scoped="" ref="0x7f15839ea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839ea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839ea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839ea760"/>
        <function-ref name="clr" scoped="" ref="0x7f15839ea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839e7740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839e7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839e7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839e7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839e7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839e6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839e64d0"/>
        <function-ref name="get" scoped="" ref="0x7f15839e6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839e67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839e6980"/>
        <function-ref name="set" scoped="" ref="0x7f15839e6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839e6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839e6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839e5120"/>
        <function-ref name="clr" scoped="" ref="0x7f15839e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839e2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839e2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839e2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839e27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839e2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839e2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839e2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839e2de0"/>
        <function-ref name="get" scoped="" ref="0x7f15839e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839e11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839e1340"/>
        <function-ref name="set" scoped="" ref="0x7f15839e14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839e1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839e17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839e1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839e1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839ded10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839ded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839dd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839dd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839dd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839dd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839dd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839dd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839dda40"/>
        <function-ref name="get" scoped="" ref="0x7f15839ddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839ddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839dc020"/>
        <function-ref name="set" scoped="" ref="0x7f15839dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839dc760"/>
        <function-ref name="clr" scoped="" ref="0x7f15839dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839d9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839d9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839d9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839d9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839d8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839d81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839d8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839d84d0"/>
        <function-ref name="get" scoped="" ref="0x7f15839d8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839d87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839d8980"/>
        <function-ref name="set" scoped="" ref="0x7f15839d8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839d8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839d8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839d7120"/>
        <function-ref name="clr" scoped="" ref="0x7f15839d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839d4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839d4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839d4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839d47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839d4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839d4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839d4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839d4de0"/>
        <function-ref name="get" scoped="" ref="0x7f15839d3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839d31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839d3340"/>
        <function-ref name="set" scoped="" ref="0x7f15839d34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839d3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839d37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839d3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839d3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839d0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839d0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839cf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839cf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839cf400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839cf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839cf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839cf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839cfa40"/>
        <function-ref name="get" scoped="" ref="0x7f15839cfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839cfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839ce020"/>
        <function-ref name="set" scoped="" ref="0x7f15839ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839ce760"/>
        <function-ref name="clr" scoped="" ref="0x7f15839ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839ca740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839ca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839caac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839cac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839cade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839c91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839c9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839c94d0"/>
        <function-ref name="get" scoped="" ref="0x7f15839c9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839c97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839c9980"/>
        <function-ref name="set" scoped="" ref="0x7f15839c9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839c9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839c9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839c8120"/>
        <function-ref name="clr" scoped="" ref="0x7f15839c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839c5100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839c5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839c5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839c5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839c57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839c5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839c5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839c5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839c5de0"/>
        <function-ref name="get" scoped="" ref="0x7f15839c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839c41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839c4340"/>
        <function-ref name="set" scoped="" ref="0x7f15839c44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839c4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839c47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839c4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839c4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839c1d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839c1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839c00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839c0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839c0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839c0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839c0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839c08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839c0a40"/>
        <function-ref name="get" scoped="" ref="0x7f15839c0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839c0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839bf020"/>
        <function-ref name="set" scoped="" ref="0x7f15839bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839bf760"/>
        <function-ref name="clr" scoped="" ref="0x7f15839bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839bc740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839bc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839bcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839bcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839bcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839bb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839bb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839bb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839bb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15839bb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839bb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839bb980"/>
        <function-ref name="set" scoped="" ref="0x7f15839bbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839bbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839bbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839ba120"/>
        <function-ref name="clr" scoped="" ref="0x7f15839ba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839b7100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839b7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839b7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839b7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839b77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839b7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839b7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839b7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839b7de0"/>
        <function-ref name="get" scoped="" ref="0x7f15839b6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839b61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839b6340"/>
        <function-ref name="set" scoped="" ref="0x7f15839b64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839b6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839b67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839b6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839b6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839b3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839b3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839b20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839b2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839b2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839b2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839b2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839b28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839b2a40"/>
        <function-ref name="get" scoped="" ref="0x7f15839b2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839b2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839b1020"/>
        <function-ref name="set" scoped="" ref="0x7f15839b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839b1760"/>
        <function-ref name="clr" scoped="" ref="0x7f15839b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839ae740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839ae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839aeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839aec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839aede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839ad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839ad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839ad4d0"/>
        <function-ref name="get" scoped="" ref="0x7f15839ad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839ad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839ad980"/>
        <function-ref name="set" scoped="" ref="0x7f15839adb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839adca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839ade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839ac120"/>
        <function-ref name="clr" scoped="" ref="0x7f15839ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f15839a9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f15839a9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839a9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f15839a9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15839a97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839a9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15839a9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839a9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15839a9de0"/>
        <function-ref name="get" scoped="" ref="0x7f15839a7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15839a71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15839a7340"/>
        <function-ref name="set" scoped="" ref="0x7f15839a74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15839a7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15839a77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839a7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f15839a7c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f15839302f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15839302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583930670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583930800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583930990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583930b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583930cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583930e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158392f020"/>
        <function-ref name="get" scoped="" ref="0x7f158392f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f158392f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f158392f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f158392f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f158392f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f158392f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f158392fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f158392fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1583941020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1583941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15839413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583941530"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583941850"/>
        <function-ref name="get" scoped="" ref="0x7f15839419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583941b70"/>
        <function-ref name="set" scoped="" ref="0x7f1583941d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1583930020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f158392cde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158392cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158392b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f158392b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f158392b4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158392b630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158392b7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f158392b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158392bae0"/>
        <function-ref name="get" scoped="" ref="0x7f158392bc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f158392be00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f158392a020"/>
        <function-ref name="set" scoped="" ref="0x7f158392a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f158392a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f158392a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f158392a760"/>
        <function-ref name="clr" scoped="" ref="0x7f158392a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f158392db90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f158392db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158392c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f158392c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158392c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158392c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f158392c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158392c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f158392c980"/>
        <function-ref name="clr" scoped="" ref="0x7f158392cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1583927930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583927930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583927cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583927e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583926020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15839261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583926340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15839264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583926660"/>
        <function-ref name="get" scoped="" ref="0x7f15839267f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583926980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583926b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583926ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583926e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583925020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15839252b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583925440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1583928710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1583928710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583928a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583928c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583928db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583927020"/>
        <function-ref name="get" scoped="" ref="0x7f15839271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583927340"/>
        <function-ref name="set" scoped="" ref="0x7f15839274d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583927660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1583919640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583919640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f158376cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f158376d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f158376c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f158376dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f158376a590"/>
        <function-ref name="gett0" scoped="" ref="0x7f158376a110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158376d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f158376e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f158376c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f158376e860"/>
        <function-ref name="stop" scoped="" ref="0x7f158376ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1583910610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1583910610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f158390cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f158390d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f158390c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f158390dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f158390b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f158390b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158390d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f158390e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f158390c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f158390e860"/>
        <function-ref name="stop" scoped="" ref="0x7f158390ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f15839061d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f15839061d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583902630"/>
        <function-ref name="fired" scoped="" ref="0x7f1583905c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15839039d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1583903550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1583901020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1583902ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15839030d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583906dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583902020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15839052e0"/>
        <function-ref name="stop" scoped="" ref="0x7f15839057b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15838fca80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f15838fca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15838ff6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583907400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583907400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583907780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f158380a020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f158380a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583808870"/>
        <function-ref name="fired" scoped="" ref="0x7f1583809840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1583808220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583809d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1583808d30"/>
        <function-ref name="start" scoped="" ref="0x7f158380ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f1583809380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158380b760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158380b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158380bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1581841ce0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1581841ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f158183d670"/>
        <function-ref name="fired" scoped="" ref="0x7f158183e550"/>
        <function-ref name="startAt" scoped="" ref="0x7f158183d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158183ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f158183db30"/>
        <function-ref name="start" scoped="" ref="0x7f158183fb60"/>
        <function-ref name="stop" scoped="" ref="0x7f158183e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581841490" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581841490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581841810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f15818275d0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15818275d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1581827950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1581827ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1581827c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1581827e00"/>
        <function-ref name="fired" scoped="" ref="0x7f1581826020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f158182bc50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f158182bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581829020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15818291b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1581829340"/>
        <function-ref name="get" scoped="" ref="0x7f15818294d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1581829660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15818297f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1581829980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1581829b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1581829ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1581829e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1581828020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f15818282b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15818282b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1581828630"/>
        <function-ref name="getControl" scoped="" ref="0x7f15818287c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1581828950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1581828ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1581828c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1581828e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1581827020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15818271b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1581827340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f15838daba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15838daba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15838d8020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15838d81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15838d8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15838d84d0"/>
        <function-ref name="fired" scoped="" ref="0x7f15838d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f15838dd4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15838dd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15838dd850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15838dd9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15838ddb70"/>
        <function-ref name="get" scoped="" ref="0x7f15838ddd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15838dc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15838dc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15838dc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15838dc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15838dc660"/>
        <function-ref name="setMode" scoped="" ref="0x7f15838dc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15838dc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f15838db280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15838db280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15838db600"/>
        <function-ref name="getControl" scoped="" ref="0x7f15838db790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15838db920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15838dbab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15838dbc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15838dbdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15838da020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15838da1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15838da340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f158181d440" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f158181d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f158181d7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f158181d950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f158181dae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f158181dc70"/>
        <function-ref name="fired" scoped="" ref="0x7f158181de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1581820910" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1581820910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581820c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1581820e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f158181f020"/>
        <function-ref name="get" scoped="" ref="0x7f158181f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f158181f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f158181f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f158181f660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f158181f7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f158181f980"/>
        <function-ref name="setMode" scoped="" ref="0x7f158181fb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f158181fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1581824720" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1581824720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1581820020"/>
        <function-ref name="fired" scoped="" ref="0x7f1581822020"/>
        <function-ref name="startAt" scoped="" ref="0x7f15818229a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15818224e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15818204e0"/>
        <function-ref name="start" scoped="" ref="0x7f15818235b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1581823ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581825e60" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581825e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581824210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f158181e020" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f158181e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f158181e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f158181e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f158181e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f158181e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f158181e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f158181eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f158181ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f158181d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f158181d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1583888020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1583888020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1583888e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583887800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583887340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583887cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f158387f020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f158387f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158387fe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f158387e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f158387e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f158387ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f158386c2c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f158386c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f158386c640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f158386c7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f158386c960"/>
        <function-ref name="get" scoped="" ref="0x7f158386caf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f158386cc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f158386ce10"/>
        <function-ref name="getMode" scoped="" ref="0x7f158386b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f158386b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f158386b340"/>
        <function-ref name="setMode" scoped="" ref="0x7f158386b4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f158386b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f158387b0a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f158387b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158386d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f158386d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f158386d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f158386de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f158384a540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f158384a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15838483d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583848d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583848890"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583847260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f158384c0f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f158384c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158384b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f158384b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f158384b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f158384be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f158183a140" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f158183a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1581838b30"/>
        <function-ref name="fired" scoped="" ref="0x7f15818399f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15818384e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1581838020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1581836020"/>
        <function-ref name="start" scoped="" ref="0x7f1581839020"/>
        <function-ref name="stop" scoped="" ref="0x7f1581839530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1581834b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1581834b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15818304e0"/>
        <function-ref name="fired" scoped="" ref="0x7f15818324e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1581832e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15818329a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15818309a0"/>
        <function-ref name="start" scoped="" ref="0x7f15818339d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1581832020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1581836690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1581836690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15818355b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1581834020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1581835a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f15818344e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f15837d5490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f15837d5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15837d5810"/>
        <function-ref name="runTask" scoped="" ref="0x7f15837d59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f15837d91d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15837d91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15837d6b30"/>
        <function-ref name="fired" scoped="" ref="0x7f15837d89f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15837d64e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15837d6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15837d5020"/>
        <function-ref name="start" scoped="" ref="0x7f15837d8020"/>
        <function-ref name="stop" scoped="" ref="0x7f15837d8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15837dfcf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15837dfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15837da220"/>
        <function-ref name="fired" scoped="" ref="0x7f15837dd7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15837db590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15837db110"/>
        <function-ref name="getdt" scoped="" ref="0x7f15837dab20"/>
        <function-ref name="gett0" scoped="" ref="0x7f15837da6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15837ddc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15837de940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15837dbba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15837dee10"/>
        <function-ref name="stop" scoped="" ref="0x7f15837dd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1583785e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1583785e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583784220"/>
        <function-ref name="runTask" scoped="" ref="0x7f15837843b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f158378ac30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f158378ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583785110"/>
        <function-ref name="fired" scoped="" ref="0x7f15837876a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15837864a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1583786020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1583785a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1583785590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583787b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583789860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583786ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1583789d30"/>
        <function-ref name="stop" scoped="" ref="0x7f1583787220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1583790690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583790690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f158378ccf0"/>
        <function-ref name="fired" scoped="" ref="0x7f158378d260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f158378c090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f158378dba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f158378a680"/>
        <function-ref name="gett0" scoped="" ref="0x7f158378a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158378d700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f158378f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f158378c6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f158378f880"/>
        <function-ref name="stop" scoped="" ref="0x7f158378fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1583781cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1583781cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1583780980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1583776020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1583776020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1583776e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583775800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583775340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583775cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1583768020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1583768020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583764630"/>
        <function-ref name="fired" scoped="" ref="0x7f1583767a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1583766920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15837664a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1583763020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1583764ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583766020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583768c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583764020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1583767110"/>
        <function-ref name="stop" scoped="" ref="0x7f15837675e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f158375f4e0" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f158375f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f158375f860"/>
        <function-ref name="rand32" scoped="" ref="0x7f158375f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f158375c370" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f158375c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158375f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15837624f0" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15837624f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583762870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f15837574e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f15837574e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1583757860"/>
        <function-ref name="rand32" scoped="" ref="0x7f15837579f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1583758390" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1583758390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583757020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158375ba90" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158375ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158375be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7f158373ae60" loc="72:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7f158373ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f1583748210"/>
        <function-ref name="isRoot" scoped="" ref="0x7f15837483a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f1583748530"/>
        <function-ref name="hasParent" scoped="" ref="0x7f15837486c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f1583748850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f15837489e0"/>
        <function-ref name="getRank" scoped="" ref="0x7f1583748b70"/>
        <function-ref name="getEtx" scoped="" ref="0x7f1583748d00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f1583747020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f15837471b0"/>
        <function-ref name="isParent" scoped="" ref="0x7f1583747340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f15837474d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f1583747660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f15837478f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f1583739a80" loc="76:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f1583739a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1583739e00"/>
        <function-ref name="recv" scoped="" ref="0x7f1583737020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1583747bb0" loc="73:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1583747bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1583739020"/>
        <function-ref name="stop" scoped="" ref="0x7f15837391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f15837443b0" loc="71:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f15837443b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1583744730"/>
        <function-ref name="recv" scoped="" ref="0x7f15837448c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7f15836dc720" loc="91:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f15836dc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f15836dcaa0"/>
        <function-ref name="initiate" scoped="" ref="0x7f15836dcc30"/>
        <function-ref name="linkResult" scoped="" ref="0x7f15836dcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f15836e9a50" loc="89:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f15836e9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f15836e9dd0"/>
        <function-ref name="changed" scoped="" ref="0x7f15836ef020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f15836ef1b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f15836ef340"/>
        <function-ref name="setSource" scoped="" ref="0x7f15836ef4d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f15836ef660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f15836ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f15836f7c70" loc="86:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f15836f7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15836f9020"/>
        <function-ref name="recv" scoped="" ref="0x7f15836f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f15836cc8a0" loc="93:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f15836cc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f15836db660"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f15836ccdb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f15836db020"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f15836db1b0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f15836db340"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f15836ccc20"/>
        <function-ref name="getContext" scoped="" ref="0x7f15836db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f15836d55f0" loc="92:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f15836d55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f15836d5970"/>
        <function-ref name="OCP" scoped="" ref="0x7f15836d5b00"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f15836d5c90"/>
        <function-ref name="getRank" scoped="" ref="0x7f15836d5e20"/>
        <function-ref name="resetRank" scoped="" ref="0x7f15836e0020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f15836e01b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f15836e0340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f15836e04d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f15836e0660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f15836e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7f15836fd800" loc="80:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f15836fd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f15836fdb80"/>
        <function-ref name="isRoot" scoped="" ref="0x7f15836fdd10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f15836fc020"/>
        <function-ref name="hasParent" scoped="" ref="0x7f15836fc1b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f15836fc340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f15836fc4d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f15836fc660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f15836fc7f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f15836fc980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f15836fcb10"/>
        <function-ref name="isParent" scoped="" ref="0x7f15836fcca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f15836fce30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f15836fb020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f15836fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7f15836f7580" loc="83:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7f15836f7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15836f7900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7f15836f8760" loc="88:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7f15836f8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f15836f8ae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f15836f6b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f15836f6ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f15836f6020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f15836f61b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f15836f6340"/>
        <function-ref name="getRank" scoped="" ref="0x7f15836f64d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f15836f6660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f15836f8e00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f15836f67f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f15836f6980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f15836f8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f15836e1580" loc="90:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f15836e1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f15836e1900"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f15836e1a90"/>
        <function-ref name="delRoute" scoped="" ref="0x7f15836e1c20"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f15836e1db0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f15836ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f15836f2cc0" loc="87:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f15836f2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f15836f80a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f15836f8230"/>
        <function-ref name="findTLV" scoped="" ref="0x7f15836f83c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7f1583681380" loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7f1583681380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583681800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1583681990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15836fb570" loc="81:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15836fb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15836fb8f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15836fba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f15836fbdc0" loc="82:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f15836fbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15836fa180"/>
        <function-ref name="recv" scoped="" ref="0x7f15836fa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f15835f3080" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f15835f3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f15835f3400"/>
        <function-ref name="setRoot" scoped="" ref="0x7f15835f3590"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f15835f3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7f15835f2320" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f15835f2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f15835f26a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f15835f1670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f15835f1800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f15835f2b50"/>
        <function-ref name="validInstance" scoped="" ref="0x7f15835f2ce0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f15835f2e70"/>
        <function-ref name="getRank" scoped="" ref="0x7f15835f1030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f15835f11c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f15835f29c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f15835f1350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f15835f14e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f15835f2830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15835f39e0" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15835f39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15835f3d60"/>
        <function-ref name="stop" scoped="" ref="0x7f15835f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f158350e880" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f158350e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f158350ec00"/>
        <function-ref name="setRoot" scoped="" ref="0x7f158350ed90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f158350d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7f158350aab0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7f158350aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158350ae30"/>
        <function-ref name="recv" scoped="" ref="0x7f1583509020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7f15834f6a10" loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f15834f6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f15834f5020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f15834f51b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f15834f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7f15834f3ac0" loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7f15834f3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15834f3e40"/>
        <function-ref name="runTask" scoped="" ref="0x7f15834f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7f1583504730" loc="56:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7f1583504730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583501c40"/>
        <function-ref name="fired" scoped="" ref="0x7f15835021e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1583501020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1583502ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15834ff590"/>
        <function-ref name="gett0" scoped="" ref="0x7f15834ff110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583502660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583503390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583501630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1583503860"/>
        <function-ref name="stop" scoped="" ref="0x7f1583503d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f15834fae00" loc="58:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f15834fae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f15834f91c0"/>
        <function-ref name="rand32" scoped="" ref="0x7f15834f9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f15835093d0" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7f15835093d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583506870"/>
        <function-ref name="fired" scoped="" ref="0x7f1583508e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1583507c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1583507780"/>
        <function-ref name="getdt" scoped="" ref="0x7f15835041e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1583506cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583507300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1583508020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1583506260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15835084f0"/>
        <function-ref name="stop" scoped="" ref="0x7f15835089c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f15834f1ad0" loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7f15834f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15834f1e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f15834f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f15834f7270" loc="60:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f15834f7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f15834f75f0"/>
        <function-ref name="changed" scoped="" ref="0x7f15834f7780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f15834f7910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f15834f7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15834f7c30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f15834f7dc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f15834f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7f15834f02f0" loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7f15834f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15834f0670"/>
        <function-ref name="runTask" scoped="" ref="0x7f15834f0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f158350a310" loc="52:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f158350a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158350a690"/>
        <function-ref name="recv" scoped="" ref="0x7f158350a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f15834f4a40" loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f15834f4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7f15834f37f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f15834f3020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f15834f31b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f15834f3340"/>
        <function-ref name="matchContext" scoped="" ref="0x7f15834f34d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7f15834f4dc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f15834f3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f15834f95e0" loc="59:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f15834f95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f15834f9960"/>
        <function-ref name="isRoot" scoped="" ref="0x7f15834f9af0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f15834f9c80"/>
        <function-ref name="hasParent" scoped="" ref="0x7f15834f9e10"/>
        <function-ref name="validInstance" scoped="" ref="0x7f15834f8020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f15834f81b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f15834f8340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f15834f84d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f15834f8660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f15834f87f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f15834f8980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f15834f8b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f15834f8ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f15834f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f15834f5590" loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f15834f5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f15834f5910"/>
        <function-ref name="OCP" scoped="" ref="0x7f15834f5aa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f15834f5c30"/>
        <function-ref name="getRank" scoped="" ref="0x7f15834f5dc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7f15834f4020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f15834f41b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f15834f4340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f15834f44d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f15834f4660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f15834f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7f15834f12f0" loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7f15834f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15834f1670"/>
        <function-ref name="runTask" scoped="" ref="0x7f15834f1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7f15834f0ad0" loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7f15834f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15834f0e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f15834ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7f15834ffae0" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f15834ffae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15834fa110"/>
        <function-ref name="fired" scoped="" ref="0x7f15834fd5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15834fc4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15834fc020"/>
        <function-ref name="getdt" scoped="" ref="0x7f15834faa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f15834fa590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15834fda30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15834fe750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15834fcab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15834fec20"/>
        <function-ref name="stop" scoped="" ref="0x7f15834fd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7f158350da10" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f158350da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f158350dd90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f158350be30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f158350a020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f158350b340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f158350b4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f158350b660"/>
        <function-ref name="getRank" scoped="" ref="0x7f158350b7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f158350b980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f158350bb10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f158350bca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f158350b020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f158350b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7f15834f62b0" loc="61:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7f15834f62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15834f6630"/>
        <function-ref name="stop" scoped="" ref="0x7f15834f67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f158350d270" loc="48:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f158350d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f158350d5f0"/>
        <function-ref name="stop" scoped="" ref="0x7f158350d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15834e9140" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15834e9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15834e5630"/>
        <function-ref name="fired" scoped="" ref="0x7f15834e8b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15834e7920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15834e74a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15834e4020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15834e5ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15834e7020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15834e9d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15834e5020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15834e8220"/>
        <function-ref name="stop" scoped="" ref="0x7f15834e86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15834e3b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15834e3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15834de110"/>
        <function-ref name="fired" scoped="" ref="0x7f15834e15b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15834df4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15834df020"/>
        <function-ref name="getdt" scoped="" ref="0x7f15834dea10"/>
        <function-ref name="gett0" scoped="" ref="0x7f15834de590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15834e1a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15834e2750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15834dfab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15834e2c20"/>
        <function-ref name="stop" scoped="" ref="0x7f15834e1130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15834dc4e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15834dc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15834d8a20"/>
        <function-ref name="fired" scoped="" ref="0x7f15834d9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15834d9da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15834d9920"/>
        <function-ref name="getdt" scoped="" ref="0x7f15834d74a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15834d7020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15834d94a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15834db110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15834d8410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15834db5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f15834dbab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f15834d68d0" loc="30:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f15834d68d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f15834d6c50"/>
        <function-ref name="changed" scoped="" ref="0x7f15834d6de0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f15834d2020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f15834d21b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15834d2340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f15834d24d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f15834d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f15834d1020" loc="31:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f15834d1020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f158439fb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f158439fb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f15834d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f15834c6800" loc="36:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f15834c6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f15834c6b80"/>
        <function-ref name="changed" scoped="" ref="0x7f15834c6d10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15834ca020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f15834ca1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f15834ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f15834cc020" loc="32:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f15834cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f15834cc3a0"/>
        <function-ref name="changed" scoped="" ref="0x7f15834cc530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f15834cc6c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f15834cc850"/>
        <function-ref name="setSource" scoped="" ref="0x7f15834cc9e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f15834ccb70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f15834ccd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f15834cb4a0" loc="33:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f15834cb4a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f158439fb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f158439fb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f15834cb820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f15834d0690" loc="3:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f15834d0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f15834d0a10"/>
        <function-ref name="changed" scoped="" ref="0x7f15834d0ba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15834d0d30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1583488020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f15834881b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f1583484da0" loc="8:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1583484da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1583483180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1583476b80" loc="10:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1583476b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1583482020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f15834821b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1583482340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f15834824d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1583482660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15834827f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1583482980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1583482b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1583482ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1583482e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1583481020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f15834811b0"/>
        <function-ref name="sync" scoped="" ref="0x7f1583481340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15834815d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1583481760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f1583485300" loc="5:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f1583485300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f1583485680"/>
        <function-ref name="changed" scoped="" ref="0x7f1583485810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15834859a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1583485b30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1583485cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583488c50" loc="4:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583488c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1583463020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1583463020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f15834633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f15834587e0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f15834587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1583458b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1583458cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1583458e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1583457030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f15834571c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1583457350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15834574e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1583457670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1583457800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1583457990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1583457b20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1583457cb0"/>
        <function-ref name="sync" scoped="" ref="0x7f1583457e40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1583453120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f15834532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f158344b1b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f158344b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158344bda0"/>
        <function-ref name="readDone" scoped="" ref="0x7f158344a260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f158344cd90" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f158344cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1583452180"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1583452310"/>
        <function-ref name="rxOn" scoped="" ref="0x7f15834524a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1583452630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f15834527c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1583452950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1583452ae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1583452c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1583454980" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1583454980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1583454d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1583458020"/>
        <function-ref name="request" scoped="" ref="0x7f15834581b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1583458340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15834584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f15834449f0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f15834449f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1583444d70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1583443020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f15834431b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1583443340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f15834434d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1583443660"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15834437f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1583443980"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1583443b10"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1583443ca0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1583443e30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1583442020"/>
        <function-ref name="sync" scoped="" ref="0x7f15834421b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1583442440"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f15834425d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f15834238e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f15834238e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583423c60"/>
        <function-ref name="write" scoped="" ref="0x7f1583423df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f158343e450" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f158343e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f158343e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f158343ee40" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f158343ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f158343b6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f158343c6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f158343b090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158343cb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f158343bba0"/>
        <function-ref name="start" scoped="" ref="0x7f158343dca0"/>
        <function-ref name="stop" scoped="" ref="0x7f158343c1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f15834275f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15834275f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583427970"/>
        <function-ref name="write" scoped="" ref="0x7f1583427b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f1583438380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1583438380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583438700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583438890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583438a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583438bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1583438d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583437020"/>
        <function-ref name="set" scoped="" ref="0x7f15834371b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583437340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1583441cd0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1583441cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583440940"/>
        <function-ref name="readDone" scoped="" ref="0x7f1583440dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f1583412820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f1583412820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583412ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1583412d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f15834221c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f15834221c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583422540"/>
        <function-ref name="write" scoped="" ref="0x7f15834226d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1583422a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1583422a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583422df0"/>
        <function-ref name="write" scoped="" ref="0x7f1583421020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f158342c3d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f158342c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158342c750"/>
        <function-ref name="write" scoped="" ref="0x7f158342c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f158342d810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f158342d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f158342db90"/>
        <function-ref name="changed" scoped="" ref="0x7f158342dd20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1583434020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f15834341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f15834390e0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f15834390e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583439460"/>
        <function-ref name="isInput" scoped="" ref="0x7f15834395f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583439780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583439910"/>
        <function-ref name="get" scoped="" ref="0x7f1583439aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583439c30"/>
        <function-ref name="set" scoped="" ref="0x7f1583439dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583438020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f1583420120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1583420120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15834206a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f15834376a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f15834376a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583437a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583437bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583437d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583436020"/>
        <function-ref name="get" scoped="" ref="0x7f15834361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583436340"/>
        <function-ref name="set" scoped="" ref="0x7f15834364d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583436660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583445610" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583445610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1583445990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1583423020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1583423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15834233a0"/>
        <function-ref name="write" scoped="" ref="0x7f1583423530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f1583420a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1583420a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1583420dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f158341f1d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f158341f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158341f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158341f6e0"/>
        <function-ref name="request" scoped="" ref="0x7f158341f870"/>
        <function-ref name="granted" scoped="" ref="0x7f158341fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158341fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f158341dd90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f158341dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158341c180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158341c310"/>
        <function-ref name="request" scoped="" ref="0x7f158341c4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f158341c630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158341c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f15834428d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f15834428d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1583442c50"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1583442de0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1583441020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f15834411b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1583441340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f15834414d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1583441660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f15834417f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f158342cc80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f158342cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15834270a0"/>
        <function-ref name="write" scoped="" ref="0x7f1583427230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f1583425b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1583425b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583425e80"/>
        <function-ref name="write" scoped="" ref="0x7f158342c030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f158341e2b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f158341e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f158341e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f158341ca80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f158341ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f158341ce00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f158341b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f158341b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f158341b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f158341b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f158341b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f158341b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f158341be30"/>
        <function-ref name="set" scoped="" ref="0x7f158341b980"/>
        <function-ref name="led0On" scoped="" ref="0x7f158341bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f158341bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f1583413940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f1583413940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583413cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1583413e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1583445c80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1583445c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15834440a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1583444230"/>
        <function-ref name="request" scoped="" ref="0x7f15834443c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1583444550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15834446e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f1583431520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1583431520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15834318a0"/>
        <function-ref name="write" scoped="" ref="0x7f1583431a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f1583428a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1583428a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583431020"/>
        <function-ref name="write" scoped="" ref="0x7f15834311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f15834350e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f15834350e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583435460"/>
        <function-ref name="disable" scoped="" ref="0x7f15834355f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1583435780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1583435910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f158341d020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f158341d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158341d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158341d530"/>
        <function-ref name="request" scoped="" ref="0x7f158341d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f158341d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158341d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f158341e9c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f158341e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f158341ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158339b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158339b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158339bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1583396220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583396220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583394b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1583395a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f15833944e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583394020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1583393020"/>
        <function-ref name="start" scoped="" ref="0x7f1583395090"/>
        <function-ref name="stop" scoped="" ref="0x7f15833955a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1583390260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1583390260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15833905e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1583390af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1583390af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1583356390"/>
        <function-ref name="fired" scoped="" ref="0x7f1583357360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1583357ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1583357820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1583356850"/>
        <function-ref name="start" scoped="" ref="0x7f1583358970"/>
        <function-ref name="stop" scoped="" ref="0x7f1583358e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15816e42a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15816e42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15816e2b30"/>
        <function-ref name="fired" scoped="" ref="0x7f15816e3aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15816e24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15816e2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15816e0020"/>
        <function-ref name="start" scoped="" ref="0x7f15816e30d0"/>
        <function-ref name="stop" scoped="" ref="0x7f15816e35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15816e5a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15816e5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15816e5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15816dc2a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15816dc2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15816dab30"/>
        <function-ref name="fired" scoped="" ref="0x7f15816dbaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f15816da4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15816da020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15816d9020"/>
        <function-ref name="start" scoped="" ref="0x7f15816db0d0"/>
        <function-ref name="stop" scoped="" ref="0x7f15816db5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15816dea10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15816dea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15816ded90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f15816c4c10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15816c4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15816c3020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15816c31b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15816c3340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15816c34d0"/>
        <function-ref name="fired" scoped="" ref="0x7f15816c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f15816c61b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15816c61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15816c6530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15816c66c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15816c6850"/>
        <function-ref name="get" scoped="" ref="0x7f15816c69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15816c6b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15816c6d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f15816c5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15816c51b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15816c5340"/>
        <function-ref name="setMode" scoped="" ref="0x7f15816c54d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15816c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f15816c58f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15816c58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15816c5c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f15816c5e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15816c4020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15816c41b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15816c4340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15816c44d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15816c4660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15816c47f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15816c4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f15816baa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f15816baa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15816bae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f15816b9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f15816b91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f15816b9340"/>
        <function-ref name="fired" scoped="" ref="0x7f15816b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f15816bc020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f15816bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15816bc3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15816bc530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15816bc6c0"/>
        <function-ref name="get" scoped="" ref="0x7f15816bc850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15816bc9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15816bcb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f15816bcd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15816bb020"/>
        <function-ref name="overflow" scoped="" ref="0x7f15816bb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f15816bb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f15816bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15816c1da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15816c1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15816bd670"/>
        <function-ref name="fired" scoped="" ref="0x7f15816bf610"/>
        <function-ref name="startAt" scoped="" ref="0x7f15816bd020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15816bfad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15816bdb30"/>
        <function-ref name="start" scoped="" ref="0x7f15816c0bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f15816bf150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15816c1510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15816c1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15816c1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f15816bb760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15816bb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15816bbae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f15816bbc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15816bbe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15816ba020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15816ba1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15816ba340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15816ba4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15816ba660"/>
        <function-ref name="setControl" scoped="" ref="0x7f15816ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f158337a080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f158337a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1583379020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15833799a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15833794e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583379e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f15833720f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f15833720f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1583370020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15833709a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15833704e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583370e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1583375cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1583375cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1583374b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1583373550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1583373090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1583373a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f15816d75f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f15816d75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15816d4e50"/>
        <function-ref name="fired" scoped="" ref="0x7f15816d6e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f15816d4800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15816d4340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15816d3340"/>
        <function-ref name="start" scoped="" ref="0x7f15816d6430"/>
        <function-ref name="stop" scoped="" ref="0x7f15816d6940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f15816d1d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f15816d1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15816cd670"/>
        <function-ref name="fired" scoped="" ref="0x7f15816ce550"/>
        <function-ref name="startAt" scoped="" ref="0x7f15816cd020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15816cea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15816cdb30"/>
        <function-ref name="start" scoped="" ref="0x7f15816d0b60"/>
        <function-ref name="stop" scoped="" ref="0x7f15816ce090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f15816d39b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15816d39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15816d27e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15816d11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15816d2ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f15816d1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f1583350090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1583350090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583350410"/>
        <function-ref name="isInput" scoped="" ref="0x7f15833505a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583350730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15833508c0"/>
        <function-ref name="get" scoped="" ref="0x7f1583350a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583350be0"/>
        <function-ref name="set" scoped="" ref="0x7f1583350d70"/>
        <function-ref name="clr" scoped="" ref="0x7f158334f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f158334f390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f158334f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158334f710"/>
        <function-ref name="isInput" scoped="" ref="0x7f158334f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158334fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158334fbc0"/>
        <function-ref name="get" scoped="" ref="0x7f158334fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158334d020"/>
        <function-ref name="set" scoped="" ref="0x7f158334d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f158334d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f158334d6a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f158334d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158334da20"/>
        <function-ref name="isInput" scoped="" ref="0x7f158334dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158334dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158334c020"/>
        <function-ref name="get" scoped="" ref="0x7f158334c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158334c340"/>
        <function-ref name="set" scoped="" ref="0x7f158334c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f158334c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f1583352e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1583352e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583351210"/>
        <function-ref name="isInput" scoped="" ref="0x7f15833513a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583351530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15833516c0"/>
        <function-ref name="get" scoped="" ref="0x7f1583351850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15833519e0"/>
        <function-ref name="set" scoped="" ref="0x7f1583351b70"/>
        <function-ref name="clr" scoped="" ref="0x7f1583351d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f158334bce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f158334bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158334a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f158334a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f158334a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158334a550"/>
        <function-ref name="get" scoped="" ref="0x7f158334a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158334a870"/>
        <function-ref name="set" scoped="" ref="0x7f158334aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f158334ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f1583398b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1583398b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583352020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15833521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583352340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15833524d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583352660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15833527f0"/>
        <function-ref name="set" scoped="" ref="0x7f1583352980"/>
        <function-ref name="clr" scoped="" ref="0x7f1583352b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f158334c9b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f158334c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158334cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f158334b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f158334b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158334b340"/>
        <function-ref name="get" scoped="" ref="0x7f158334b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158334b660"/>
        <function-ref name="set" scoped="" ref="0x7f158334b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f158334b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f15833472f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f15833472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583347670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583347800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583347990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583347b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583347cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583347e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583346020"/>
        <function-ref name="get" scoped="" ref="0x7f15833461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583346340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15833464d0"/>
        <function-ref name="set" scoped="" ref="0x7f1583346660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15833467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583346980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583346c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1583346da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1583348020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1583348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15833483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583348530"/>
        <function-ref name="toggle" scoped="" ref="0x7f15833486c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583348850"/>
        <function-ref name="get" scoped="" ref="0x7f15833489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583348b70"/>
        <function-ref name="set" scoped="" ref="0x7f1583348d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1583347020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1583343de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583343de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583342180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583342310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15833424a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583342630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15833427c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583342950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583342ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1583342c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583342e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583341020"/>
        <function-ref name="set" scoped="" ref="0x7f15833411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583341340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15833414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583341760"/>
        <function-ref name="clr" scoped="" ref="0x7f15833418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1583344b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1583344b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583343020"/>
        <function-ref name="isInput" scoped="" ref="0x7f15833431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583343340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15833434d0"/>
        <function-ref name="get" scoped="" ref="0x7f1583343660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15833437f0"/>
        <function-ref name="set" scoped="" ref="0x7f1583343980"/>
        <function-ref name="clr" scoped="" ref="0x7f1583343b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f158333e930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158333e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158333ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f158333ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f158333d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f158333d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158333d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f158333d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158333d660"/>
        <function-ref name="get" scoped="" ref="0x7f158333d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f158333d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f158333db10"/>
        <function-ref name="set" scoped="" ref="0x7f158333dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f158333de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f158333c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f158333c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f158333c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f158333f710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f158333f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158333fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f158333fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f158333fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158333e020"/>
        <function-ref name="get" scoped="" ref="0x7f158333e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158333e340"/>
        <function-ref name="set" scoped="" ref="0x7f158333e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f158333e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1583339480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583339480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583339800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583339990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583339b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583339cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583339e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583337020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15833371b0"/>
        <function-ref name="get" scoped="" ref="0x7f1583337340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15833374d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583337660"/>
        <function-ref name="set" scoped="" ref="0x7f15833377f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583337980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583337b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583337da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583336020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f158333a1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f158333a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158333a550"/>
        <function-ref name="isInput" scoped="" ref="0x7f158333a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158333a870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158333aa00"/>
        <function-ref name="get" scoped="" ref="0x7f158333ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158333ad20"/>
        <function-ref name="set" scoped="" ref="0x7f1583339020"/>
        <function-ref name="clr" scoped="" ref="0x7f15833391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1583333020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1583333020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15833333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583333530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15833336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1583333850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15833339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1583333b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583333d00"/>
        <function-ref name="get" scoped="" ref="0x7f1583332020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15833321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583332340"/>
        <function-ref name="set" scoped="" ref="0x7f15833324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583332660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15833327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1583332a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1583332c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1583335d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1583335d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1583334180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1583334310"/>
        <function-ref name="toggle" scoped="" ref="0x7f15833344a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583334630"/>
        <function-ref name="get" scoped="" ref="0x7f15833347c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583334950"/>
        <function-ref name="set" scoped="" ref="0x7f1583334ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583334c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f158332fde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158332fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158332e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f158332e310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f158332e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158332e630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158332e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f158332e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158332eae0"/>
        <function-ref name="get" scoped="" ref="0x7f158332ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f158332ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f158332d020"/>
        <function-ref name="set" scoped="" ref="0x7f158332d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f158332d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f158332d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f158332d760"/>
        <function-ref name="clr" scoped="" ref="0x7f158332d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1583330b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1583330b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158332f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f158332f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f158332f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158332f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f158332f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158332f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f158332f980"/>
        <function-ref name="clr" scoped="" ref="0x7f158332fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f158332a930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f158332a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158332acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f158332ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1583329020"/>
        <function-ref name="toggle" scoped="" ref="0x7f15833291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1583329340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15833294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1583329660"/>
        <function-ref name="get" scoped="" ref="0x7f15833297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1583329980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1583329b10"/>
        <function-ref name="set" scoped="" ref="0x7f1583329ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1583329e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1583328020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15833282b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1583328440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f158332b710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f158332b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f158332ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f158332bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f158332bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f158332a020"/>
        <function-ref name="get" scoped="" ref="0x7f158332a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f158332a340"/>
        <function-ref name="set" scoped="" ref="0x7f158332a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f158332a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f1583313150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1583313150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f15833134d0"/>
        <function-ref name="disable" scoped="" ref="0x7f1583313660"/>
        <function-ref name="captured" scoped="" ref="0x7f15833137f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1583313980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f1583313d60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1583313d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583312180"/>
        <function-ref name="disable" scoped="" ref="0x7f1583312310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15833124a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1583312630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f1583312a20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1583312a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583312da0"/>
        <function-ref name="disable" scoped="" ref="0x7f158330e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f158330e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f158330e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f15832f98f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f15832f98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f15832f9c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f15832f9e00"/>
        <function-ref name="captured" scoped="" ref="0x7f15832f7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15832f71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15832f7340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f15832f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f158330ba20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f158330ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f158330bda0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832fa020"/>
        <function-ref name="captured" scoped="" ref="0x7f15832fa1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f15832fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f15832fa5d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f15832fa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f15832fa950"/>
        <function-ref name="getControl" scoped="" ref="0x7f15832faae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f15832fac70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f15832fae00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f15832f9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f15832f91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f15832f9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f15832f94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f15832f9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f15832f77a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f15832f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15832f7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f15832f7cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f15832f7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f15832f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15832f61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f15832f6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15832f64d0"/>
        <function-ref name="get" scoped="" ref="0x7f15832f6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f15832f67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f15832f6980"/>
        <function-ref name="set" scoped="" ref="0x7f15832f6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f15832f6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f15832f6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f15832f5120"/>
        <function-ref name="clr" scoped="" ref="0x7f15832f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f15832e88a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f15832e88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e7020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f15832dea30" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f15832dea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832dedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15832dd020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832dd1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832dd340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832dd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f15832e58a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f15832e58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e5c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e4020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f15832e38a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f15832e38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e2020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e2340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f15832ee8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f15832ee8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832eec20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832eedb0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e9020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e91b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e9340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f15832e08a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f15832e08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e0d20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832df020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832df1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832df340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832df4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f15832e78a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f15832e78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e6020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f15832dda30" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f15832dda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832dddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15832dc020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832dc1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832dc340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832dc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f15832eb8f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f15832eb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832ebc70"/>
        <function-ref name="fired" scoped="" ref="0x7f15832ebe00"/>
        <function-ref name="disable" scoped="" ref="0x7f15832ef020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832ef1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832ef340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f15832e28a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f15832e28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e2c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e2db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e1020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f15832e98a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f15832e98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e8020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f15832dfa30" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f15832dfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832dfdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15832de020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832de1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832de340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832de4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f15832e68a0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f15832e68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e5020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f15832e48a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f15832e48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e3020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f15832ef8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f15832ef8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832efc20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832efdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832ee020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832ee1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832ee340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f15832e18a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f15832e18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832e1c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832e1db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832e0020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832e01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832e0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f15832d58a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f15832d58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d5c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d5db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d4020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d4340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f15832caa30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f15832caa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832cadb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15832c9020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832c91b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832c9340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832c94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f15832d18a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f15832d18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d1c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d1db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d0020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d0340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f15832cf8a0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f15832cf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832cfc20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832cfdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832ce020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832ce1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832ce340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f15832d78a0" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f15832d78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d7c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d6020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d61b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f15832cc8a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f15832cc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832ccd20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832cb020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832cb1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832cb340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832cb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f15832d48a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f15832d48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d4c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d4db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d3020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d31b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f15832c9a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f15832c9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832c9db0"/>
        <function-ref name="fired" scoped="" ref="0x7f15832c8020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832c81b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832c8340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832c84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f15832db810" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f15832db810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832dbb90"/>
        <function-ref name="fired" scoped="" ref="0x7f15832dbd20"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d8020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f15832ce8a0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f15832ce8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832cec20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832cedb0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832cd020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832cd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832cd340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f15832d68a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f15832d68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d6c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d5020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d51b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d5340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f15832cba30" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f15832cba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832cbdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f15832ca020"/>
        <function-ref name="disable" scoped="" ref="0x7f15832ca1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f15832ca340"/>
        <function-ref name="enable" scoped="" ref="0x7f15832ca4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f15832d38a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f15832d38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d3c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d3db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d1020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d1340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f15832d08a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f15832d08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d0c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d0db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832cf020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832cf1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832cf340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f15832d88a0" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f15832d88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832d8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832d8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832d7020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832d71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832d7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f15832cd8a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f15832cd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15832cdc20"/>
        <function-ref name="fired" scoped="" ref="0x7f15832cddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f15832cc020"/>
        <function-ref name="edge" scoped="" ref="0x7f15832cc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f15832cc340"/>
        <function-ref name="getValue" scoped="" ref="0x7f15832cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f15831e9610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f15831e9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15831e9990"/>
        <function-ref name="fired" scoped="" ref="0x7f15831e9b20"/>
        <function-ref name="disable" scoped="" ref="0x7f15831e9cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f15831e9e40"/>
        <function-ref name="enable" scoped="" ref="0x7f15831e8020"/>
        <function-ref name="getValue" scoped="" ref="0x7f15831e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f15831f7a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f15831f7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15831f7db0"/>
        <function-ref name="disable" scoped="" ref="0x7f15831e9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15831e91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15831e9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f15831e6610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f15831e6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15831e6990"/>
        <function-ref name="fired" scoped="" ref="0x7f15831e6b20"/>
        <function-ref name="disable" scoped="" ref="0x7f15831e6cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f15831e6e40"/>
        <function-ref name="enable" scoped="" ref="0x7f15831e5020"/>
        <function-ref name="getValue" scoped="" ref="0x7f15831e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f15831e7a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f15831e7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15831e7df0"/>
        <function-ref name="disable" scoped="" ref="0x7f15831e6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15831e61b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15831e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1582d93e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d93e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d92410"/>
        <function-ref name="write" scoped="" ref="0x7f1582d925a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1582d9c160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1582d9c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1582d96e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d95210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1582d8f880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582d8f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8fc00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1582d860a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1582d860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d86420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d865b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1582d8d0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1582d8d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8d420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1582d7b500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1582d7b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7b880"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1582d7d500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1582d7d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7d880"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1582d9b490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1582d9b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1582d83880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1582d83880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d83c00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d83d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1582d7e500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1582d7e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7e880"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1582d95e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1582d95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d94210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1582d94e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d94e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d93210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1582d89880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1582d89880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d89c00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d89d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1582d8a0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1582d8a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8a420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1582d8d880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d8d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8dc00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1582d9fa90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1582d9fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1582d9fe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1582d9e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1582d9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1582d9ae00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1582d9ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d991c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1582d99490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1582d99490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d99910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1582d82c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1582d82c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d800a0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d80230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1582d99be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1582d99be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1582d7ece0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1582d7ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1582d9a160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d9a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1582d830a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1582d830a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d83420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d835b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1582d94670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1582d94670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d949f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d94b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1582d95670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d959f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d95b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1582d9ead0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d9ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1582d840a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1582d840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d84420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d845b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1582d86880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1582d86880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d86c00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d86d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1582d84880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1582d84880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d84c00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d84d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1582d7cce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1582d7cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1582d7dce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1582d7dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1582d8a880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1582d8a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8ac00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1582d850a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1582d850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d85420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d855b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1582d7fce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1582d7fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1582d8c880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1582d8c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8cc00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1582d7bce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1582d7bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582d790a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582d79230"/>
        <function-ref name="write" scoped="" ref="0x7f1582d793c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582d79550"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582d796e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1582d9e480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1582d9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1582d96670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1582d96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d969f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d96b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1582d93670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1582d93670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d939f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d93b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1582d870a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1582d870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d87420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1582d8c0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d8c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8c420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1582d87880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1582d87880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d87c00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d87d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1582d92870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d92870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d92bf0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d92d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1582d9c7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1582d9c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1582d8f0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1582d8f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8f420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1582da0e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1582da0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582d9f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582d9f350"/>
        <function-ref name="request" scoped="" ref="0x7f1582d9f4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1582d9f670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582d9f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1582d982f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1582d982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d98670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1582d96020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1582d96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1582d7f500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1582d7f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7f880"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1582d80ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d80ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1582d9a7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1582d9a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1582d80500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1582d80500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d80880"/>
        <function-ref name="write" scoped="" ref="0x7f1582d80a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1582d7c500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1582d7c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d7c880"/>
        <function-ref name="write" scoped="" ref="0x7f1582d7ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1582d890a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1582d890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d89420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d895b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1582d85880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1582d85880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d85c00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d85d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1582d9ce00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1582d9ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1582d9bae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d9bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d9be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1582d8b0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1582d8b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8b420"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1582d98940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1582d98940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d98cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1582d8b880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1582d8b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d8bc00"/>
        <function-ref name="write" scoped="" ref="0x7f1582d8bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1582d820a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1582d820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d82820"/>
        <function-ref name="write" scoped="" ref="0x7f1582d829b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1582d799b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1582d799b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582d79d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582d78020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d781b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582d78340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582d784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f15831a6630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f15831a6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15831a69b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15831a6b40"/>
        <function-ref name="write" scoped="" ref="0x7f15831a6cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f15831a6e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f15831a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f15831a7670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f15831a79f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f15831a7b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f15831a7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f15831a58c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f15831a58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15831a5c40"/>
        <function-ref name="write" scoped="" ref="0x7f15831a5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f15831a36f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f15831a36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15831a3a70"/>
        <function-ref name="write" scoped="" ref="0x7f15831a3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15831aa950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15831aa950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15831aacd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15831aae60"/>
        <function-ref name="request" scoped="" ref="0x7f15831a7020"/>
        <function-ref name="granted" scoped="" ref="0x7f15831a71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15831a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f15831a2510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f15831a2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15831a2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f158318c680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f158318c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158318ca00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158318cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f158319dbb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f158319dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f158319b020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f158319b1b0"/>
        <function-ref name="write" scoped="" ref="0x7f158319b340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f158319b4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f158319b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f15831a1920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15831a1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f15831a1ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f15831a1e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f158319e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f1583196080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1583196080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1583196400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f1583188b90" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f1583188b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1583193020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15831931b0"/>
        <function-ref name="isState" scoped="" ref="0x7f1583193340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15831934d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1583193660"/>
        <function-ref name="forceState" scoped="" ref="0x7f15831937f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1583198400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1583198400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1583198780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1583198910"/>
        <function-ref name="request" scoped="" ref="0x7f1583198aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f1583198c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1583198dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f158319a020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f158319a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158319a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f158319a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f158319adb0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f158319adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1583199180"/>
        <function-ref name="write" scoped="" ref="0x7f1583199310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1583193a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1583193a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1583193df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f158318d020"/>
        <function-ref name="led1On" scoped="" ref="0x7f158318d1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f158318d340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f158318d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f158318d660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f158318d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f158318de30"/>
        <function-ref name="set" scoped="" ref="0x7f158318d980"/>
        <function-ref name="led0On" scoped="" ref="0x7f158318db10"/>
        <function-ref name="led2On" scoped="" ref="0x7f158318dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f158319e810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f158319e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158319eb90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158319ed20"/>
        <function-ref name="request" scoped="" ref="0x7f158319d020"/>
        <function-ref name="granted" scoped="" ref="0x7f158319d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158319d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f1583184bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f1583184bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583182020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15831821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1583199ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1583199ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1583198020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1583129770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1583129770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1583129af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1583129c80"/>
        <function-ref name="isState" scoped="" ref="0x7f1583129e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1583120020"/>
        <function-ref name="requestState" scoped="" ref="0x7f15831201b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1583120340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f15831241d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f15831241d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1583124550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15831246e0"/>
        <function-ref name="isState" scoped="" ref="0x7f1583124870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1583124a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f1583124b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f1583124d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158311f020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158311f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158311f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f158311fb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f158311fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f158311e020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f158311e1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f158311e340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f158311e4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f158311e660"/>
        <function-ref name="forceState" scoped="" ref="0x7f158311e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1582dca020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1582dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582dca3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582dca530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f15831058f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f15831058f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1583105c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1583106c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1583106c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1583105020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15831051b0"/>
        <function-ref name="request" scoped="" ref="0x7f1583105340"/>
        <function-ref name="granted" scoped="" ref="0x7f15831054d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1583105660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15815ec8f0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15815ec8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15815ecc70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15815ece00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f15815ea2b0" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f15815ea2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15815ea630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15815ea7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f15815eaa50" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f15815eaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15815eadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f15815eb0c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f15815eb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f15815eb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15815efc30" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15815efc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15815ec020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15815ec1b0"/>
        <function-ref name="request" scoped="" ref="0x7f15815ec340"/>
        <function-ref name="granted" scoped="" ref="0x7f15815ec4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15815ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f15815eb6d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f15815eb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f15815eba50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f15815ebbe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f15815ebd70"/>
        <function-ref name="write" scoped="" ref="0x7f15815ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f15830a05e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15830a05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15830a0960"/>
        <function-ref name="configure" scoped="" ref="0x7f15830a0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f158309d510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f158309d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158309d890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158309da20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f158309a600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f158309a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f158309a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f15830a0dd0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f15830a0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f158309f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f158309c370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f158309c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158309c6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158309c880"/>
        <function-ref name="request" scoped="" ref="0x7f158309ca10"/>
        <function-ref name="granted" scoped="" ref="0x7f158309cba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158309cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15830a6a20" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15830a6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15830a6da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15830a2020"/>
        <function-ref name="request" scoped="" ref="0x7f15830a21b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15830a2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15830a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f158309f480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f158309f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f158309f800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f158309f990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f158309fb20"/>
        <function-ref name="write" scoped="" ref="0x7f158309fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f15830966a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15830966a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1583096a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f1583096bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1583025c40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1583025c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1583024020"/>
        <function-ref name="configure" scoped="" ref="0x7f15830241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1583023700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1583023700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1583023aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1583023c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1583022e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1583022e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15830211c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1583024440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1583024440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f15830247c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1583021490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1583021490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1583021810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f15830219a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1583021b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1583021cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1583021e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1583020020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f15830201b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1583020340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15830204d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1583020660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15830207f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1583020980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1583020b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1583020da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f158301f020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f158301f1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f158301f340"/>
        <function-ref name="isUart" scoped="" ref="0x7f158301f4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f158301f660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f158301f7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f158301f980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f158301fb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f158301fca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f158301fe30"/>
        <function-ref name="getMode" scoped="" ref="0x7f158301e020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f158301e3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f158301e540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f158301e6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f158301e860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f158301e9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f158301eb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f158301ed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f158301d020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f158301d1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f158301d340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f158301d4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f158301d660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f158301d7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f158301d980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f158301db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f158301c5a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f158301c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f158301c920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f158301cab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f158301cc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f158301cdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f158301b020"/>
        <function-ref name="get" scoped="" ref="0x7f158301b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f158301b340"/>
        <function-ref name="led2On" scoped="" ref="0x7f158301b980"/>
        <function-ref name="set" scoped="" ref="0x7f158301b660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f158301b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f158301b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1583022060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1583022060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1583022400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1583022590"/>
        <function-ref name="request" scoped="" ref="0x7f1583022720"/>
        <function-ref name="granted" scoped="" ref="0x7f15830228b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1583022a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1583026e80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1583026e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1583025240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15830253d0"/>
        <function-ref name="request" scoped="" ref="0x7f1583025560"/>
        <function-ref name="granted" scoped="" ref="0x7f15830256f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1583025880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1583024a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1583024a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1583024dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1583023020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f15830231b0"/>
        <function-ref name="write" scoped="" ref="0x7f1583023340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f158301dde0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f158301dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f158301c180"/>
        <function-ref name="txDone" scoped="" ref="0x7f158301c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f158301bc50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f158301bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1583019020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15830191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f158300a8a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f158300a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f158300ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f158300d3b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f158300d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f158300d730"/>
        <function-ref name="txDone" scoped="" ref="0x7f158300d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1583014860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1583014860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1583014be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1583014d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1583011020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f15830111b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1583011340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15830114d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1583011660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15830117f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1583011980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1583011b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1583011ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1583011e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1583010020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f15830102b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1583010440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f15830105d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1583010760"/>
        <function-ref name="isUart" scoped="" ref="0x7f15830108f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1583010a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1583010c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1583010da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f158300f020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f158300f1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f158300f340"/>
        <function-ref name="getMode" scoped="" ref="0x7f158300f4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f158300f860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f158300f9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f158300fb80"/>
        <function-ref name="tx" scoped="" ref="0x7f158300fd10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f158300e020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f158300e1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f158300e340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f158300e4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f158300e660"/>
        <function-ref name="rx" scoped="" ref="0x7f158300e7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f158300e980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f158300eb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f158300eca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f158300ee30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f158300d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1582fd1670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1582fd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582fd19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582fd1b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582fd1d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582fd0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582fd01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582fd0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582fd04d0"/>
        <function-ref name="get" scoped="" ref="0x7f1582fd0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582fd07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582fd0980"/>
        <function-ref name="set" scoped="" ref="0x7f1582fd0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582fd0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582fd0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582fcf120"/>
        <function-ref name="clr" scoped="" ref="0x7f1582fcf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1583004dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1583004dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1583003180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1583003310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1582fcf670" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1582fcf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582fcf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582fcfb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582fcfd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582fce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582fce1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582fce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582fce4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1582fce660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582fce7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582fce980"/>
        <function-ref name="set" scoped="" ref="0x7f1582fceb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582fceca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582fcee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582fcd120"/>
        <function-ref name="clr" scoped="" ref="0x7f1582fcd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1582fcd670" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1582fcd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582fcd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582fcdb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582fcdd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582fcc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582fcc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582fcc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582fcc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1582fcc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582fcc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582fcc980"/>
        <function-ref name="set" scoped="" ref="0x7f1582fccb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582fccca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582fcce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582fcb120"/>
        <function-ref name="clr" scoped="" ref="0x7f1582fcb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1583008020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1583008020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f15830083a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1583008530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f15830086c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1583008850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f15830089e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1583008b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1583008d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1583007020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15830071b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1583007340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15830074d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1583007660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f15830077f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1583007a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1583007c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1583007da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1583006020"/>
        <function-ref name="isUart" scoped="" ref="0x7f15830061b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1583006340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f15830064d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1583006660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f15830067f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1583006980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1583006b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1583006ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1583005220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15830053b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1583005540"/>
        <function-ref name="tx" scoped="" ref="0x7f15830056d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1583005860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f15830059f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1583005b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1583005d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1583004020"/>
        <function-ref name="rx" scoped="" ref="0x7f15830041b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1583004340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15830044d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1583004660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f15830047f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1583004980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f1582fda5b0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1582fda5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1582fda930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1582fdaac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1582fdac50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1582fdade0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1583001020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f15830011b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1583001340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f15830014d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1583001660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f15830017f0"/>
        <function-ref name="getData" scoped="" ref="0x7f1583001980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1583001b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1583001ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1583000020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f15830001b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1583000340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f15830004d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1583000660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f15830007f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1583000980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1583000b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1583000ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1583000e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1582fd9020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1582fd91b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1582fd9540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1582fd96d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1582fd9860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1582fd99f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1582fd9b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1582fd9d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1582fd8020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1582fd81b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1582fd8340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1582fd84d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1582fd8660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1582fd87f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1582fd8980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1582fd8b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1582fd8ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1582fd8e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1582fd7020"/>
        <function-ref name="setData" scoped="" ref="0x7f1582fd71b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1582fd7340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1582fd74d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1582fd7660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1582fd77f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1582fd7980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1582fd7b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1582fd6420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1582fd65b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1582fd6740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1582fd68d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1582fd6a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1582fd6bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1582fd6d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1582fd5020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1582fd51b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1582fd5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1582fd3670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1582fd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582fd39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582fd3b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582fd3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582fd2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582fd21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582fd2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582fd24d0"/>
        <function-ref name="get" scoped="" ref="0x7f1582fd2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582fd27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582fd2980"/>
        <function-ref name="set" scoped="" ref="0x7f1582fd2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582fd2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582fd2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582fd1120"/>
        <function-ref name="clr" scoped="" ref="0x7f1582fd12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1583003750" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1583003750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1583003ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1582fd5700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1582fd5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582fd5a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582fd5c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582fd5da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582fd4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582fd41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582fd4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582fd44d0"/>
        <function-ref name="get" scoped="" ref="0x7f1582fd4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582fd47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582fd4980"/>
        <function-ref name="set" scoped="" ref="0x7f1582fd4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582fd4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582fd4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582fd3120"/>
        <function-ref name="clr" scoped="" ref="0x7f1582fd32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15815e22c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15815e22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15815e2640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15815e27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f15815d9440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f15815d9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15815d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15815d2760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15815d2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15815d2ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f15815d2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f15815d9a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f15815d9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f15815d9dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f15815d8020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f15815d81b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f15815d8340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f15815d84d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f15815d8660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f15815d87f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f15815d8980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f15815d8b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f15815d8ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f15815d8e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f15815d7020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f15815d71b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f15815d7440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f15815d75d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f15815d7760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f15815d78f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f15815d7a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f15815d7c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f15815d7da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f15815d6020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f15815d61b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f15815d6340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f15815d64d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f15815d6660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f15815d69f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f15815d6b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f15815d6d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f15815d5020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f15815d51b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f15815d5340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f15815d54d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f15815d5660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f15815d57f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f15815d5980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f15815d5b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f15815d5ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f15815d5e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f15815d4020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f15815d41b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f15815d4340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f15815d44d0"/>
        <function-ref name="setData" scoped="" ref="0x7f15815d4660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f15815d47f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f15815d4980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f15815d4b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f15815d4ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f15815d4e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f15815d3020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f15815d35b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f15815d3740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f15815d38d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f15815d3a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f15815d3bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f15815d3d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f15815d2020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f15815d21b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f15815d2340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f15815d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f15815dbc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f15815dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15815d9020"/>
        <function-ref name="txDone" scoped="" ref="0x7f15815d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15815e3640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15815e3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15815e39c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15815e3b50"/>
        <function-ref name="request" scoped="" ref="0x7f15815e3ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f15815e3e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15815e2030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f15815df2b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15815df2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f15815df630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f15815df7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f15815df950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f15815dfae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f15815dfc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15815dfe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f15815de020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15815de1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f15815de340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f15815de4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f15815de660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f15815de7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f15815de980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f15815dec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f15815deda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f15815dd020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f15815dd1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f15815dd340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f15815dd4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f15815dd660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f15815dd7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f15815dd980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f15815ddb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f15815ddca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f15815dde30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f15815dc220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15815dc3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f15815dc540"/>
        <function-ref name="tx" scoped="" ref="0x7f15815dc6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f15815dc860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f15815dc9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f15815dcb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f15815dcd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f15815db020"/>
        <function-ref name="rx" scoped="" ref="0x7f15815db1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f15815db340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15815db4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f15815db660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f15815db7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f15815db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15815e2a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15815e2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15815e2de0"/>
        <function-ref name="userId" scoped="" ref="0x7f15815df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1582f298a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1582f298a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1582f29c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1582f29db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1582f27020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1582f27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1582f273a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1582f27530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1582f2fa80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1582f2fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1582f2fe00"/>
        <function-ref name="txDone" scoped="" ref="0x7f1582f2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1582f2b5c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1582f2b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582f2b940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582f2bad0"/>
        <function-ref name="request" scoped="" ref="0x7f1582f2bc60"/>
        <function-ref name="granted" scoped="" ref="0x7f1582f2bdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582f29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1582f2c9a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1582f2c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1582f2cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1582f28130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582f28130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1582f284b0"/>
        <function-ref name="userId" scoped="" ref="0x7f1582f28640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1582f124b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582f124b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1582f12830"/>
        <function-ref name="userId" scoped="" ref="0x7f1582f129c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1582f255c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1582f255c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1582f25960"/>
        <function-ref name="txDone" scoped="" ref="0x7f1582f25af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1582f13e70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1582f13e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1582f12220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1582f13020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1582f13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1582f133c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1582f13690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1582f13690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1582f13a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f1582f13ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1582e98bf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1582e98bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1582e97020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1582e971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1582e96930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1582e96930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1582e96cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1582e96e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1582e97400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1582e97400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582e97780"/>
        <function-ref name="requested" scoped="" ref="0x7f1582e97910"/>
        <function-ref name="granted" scoped="" ref="0x7f1582e97aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582e97c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1582e97dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1582e99e60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1582e99e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582e98230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582e983c0"/>
        <function-ref name="request" scoped="" ref="0x7f1582e98550"/>
        <function-ref name="granted" scoped="" ref="0x7f1582e986e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582e98870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1582e96060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1582e96060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1582e963e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1582e96570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158156b140" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158156b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158156b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f158156b750" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f158156b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f158156bad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f158156bc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f158156bdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f158156a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1581567850" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581567850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1581567bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581567d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1581565590" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581565590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1581565930"/>
        <function-ref name="configure" scoped="" ref="0x7f1581565ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1581565d50" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1581565d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1581564100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1581564290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1581564420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15815645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1581566020" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581566020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15815663a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1581566530"/>
        <function-ref name="granted" scoped="" ref="0x7f15815666c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581566850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15815669e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1581564800" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1581564800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1581564b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1581564d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f1581563020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15815631b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1581563340"/>
        <function-ref name="get" scoped="" ref="0x7f15815634d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1581563660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1581563ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1581563980"/>
        <function-ref name="led2On" scoped="" ref="0x7f15815637f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1581563b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1581568970" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1581568970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581568d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581567020"/>
        <function-ref name="request" scoped="" ref="0x7f15815671b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1581567340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15815674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1581566c30" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581566c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1581565020"/>
        <function-ref name="userId" scoped="" ref="0x7f15815651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1581562020" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1581562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15815623a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1581562530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1582e8e880" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1582e8e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1582e8ec00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1582e8ed90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1582e8b020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1582e8b1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1582e8b340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1582e8b4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1582e8b660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1582e8b7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1582e8b980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1582e8bb10"/>
        <function-ref name="getData" scoped="" ref="0x7f1582e8bca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1582e8be30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1582e8a020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1582e8a2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1582e8a440"/>
        <function-ref name="getIV" scoped="" ref="0x7f1582e8a5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1582e8a760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1582e8a8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1582e8aa80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1582e8ac10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1582e8ada0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1582e89020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1582e891b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1582e89340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1582e894d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1582e89860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1582e899f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1582e89b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1582e89d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1582e88020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1582e881b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1582e88340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1582e884d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1582e88660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1582e887f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1582e88980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1582e88b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1582e88ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1582e88e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1582e87020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1582e871b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1582e87340"/>
        <function-ref name="setData" scoped="" ref="0x7f1582e874d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1582e87660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1582e877f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1582e87980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1582e87b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1582e87ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1582e87e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1582e86420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1582e865b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1582e86740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1582e868d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1582e86a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1582e86bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1582e86d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1582e85020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1582e851b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1582e85340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f1582e7b250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f1582e7b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1582e7b5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1582e7b760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1582e7b8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1582e7ba80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1582e7bc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1582e7bda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1582e7a020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1582e7a1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1582e7a340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1582e7a4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1582e7a660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1582e7a7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1582e7a980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1582e7ac10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1582e7ada0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1582e79020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1582e791b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1582e79340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1582e794d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1582e79660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1582e797f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1582e79980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1582e79b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1582e79ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1582e79e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1582e78220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1582e783b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1582e78540"/>
        <function-ref name="tx" scoped="" ref="0x7f1582e786d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1582e78860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1582e789f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1582e78b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1582e78d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1582e77020"/>
        <function-ref name="rx" scoped="" ref="0x7f1582e771b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1582e77340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1582e774d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1582e77660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1582e777f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1582e77980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1582e75cb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1582e75cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582e740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582e74230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582e743c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582e74550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582e746e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582e74870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582e74a00"/>
        <function-ref name="get" scoped="" ref="0x7f1582e74b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582e74d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582e73020"/>
        <function-ref name="set" scoped="" ref="0x7f1582e731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582e73340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582e734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582e73760"/>
        <function-ref name="clr" scoped="" ref="0x7f1582e738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f1582e82430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1582e82430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1582e827b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1582e82940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1582e82ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1582e82c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1582e82df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1582e81020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1582e811b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1582e81340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1582e814d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1582e81660"/>
        <function-ref name="getData" scoped="" ref="0x7f1582e817f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1582e81980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1582e81b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1582e81da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1582e80020"/>
        <function-ref name="getIV" scoped="" ref="0x7f1582e801b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1582e80340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1582e804d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1582e80660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1582e807f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1582e80980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1582e80b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1582e80ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1582e80e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1582e7f020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1582e7f3b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1582e7f540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1582e7f6d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1582e7f860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1582e7f9f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1582e7fb80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1582e7fd10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1582e7e020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1582e7e1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1582e7e340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1582e7e4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1582e7e660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1582e7e7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1582e7e980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1582e7eb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1582e7eca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1582e7ee30"/>
        <function-ref name="setData" scoped="" ref="0x7f1582e7d020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1582e7d1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1582e7d340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1582e7d4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1582e7d660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1582e7d7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1582e7d980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1582e7c020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1582e7c1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1582e7c340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1582e7c4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1582e7c660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1582e7c7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1582e7c980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1582e7cb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1582e7cca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1582e7ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1582e77d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1582e77d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582e760e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582e76270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1582e76400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582e76590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582e76720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1582e768b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582e76a40"/>
        <function-ref name="get" scoped="" ref="0x7f1582e76bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1582e76d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1582e75020"/>
        <function-ref name="set" scoped="" ref="0x7f1582e751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1582e75340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1582e754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1582e75760"/>
        <function-ref name="clr" scoped="" ref="0x7f1582e758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1582d60c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d60c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5f210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1582d6bda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1582d6bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d6a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1582d64b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d64b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d63020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1582d5e670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582d5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1582d57e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1582d57e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d56210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1582d5ee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1582d5ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5d210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1582d4a2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1582d4a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4a670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1582d4c2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1582d4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4c670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1582d69120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1582d69120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d694a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1582d52670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1582d52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d529f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d52b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1582d4e2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1582d4e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4e670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1582d63c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1582d63c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d61020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1582d61c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d61c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d60020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1582d58670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1582d58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d589f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1582d5ae50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1582d5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d59210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1582d5d670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1582d6c760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1582d6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1582d6cae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1582d6cc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1582d6ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1582d67aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1582d67aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d67e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1582d66120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1582d66120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d665a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1582d51a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1582d51a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d51df0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1582d66870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1582d66870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d66bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1582d4ead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1582d4ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4ee50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1582d69dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d69dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d67180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1582d53e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1582d53e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d52210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1582d61480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1582d61480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d61800"/>
        <function-ref name="write" scoped="" ref="0x7f1582d61990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1582d63480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d63480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d63800"/>
        <function-ref name="write" scoped="" ref="0x7f1582d63990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1582d6b750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d6b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d6bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1582d55e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1582d55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d53210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1582d56670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1582d56670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d569f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d56b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1582d53670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1582d53670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d539f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d53b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1582d4bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1582d4bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4be50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1582d4cad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1582d4cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4ce50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1582d59670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1582d59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d599f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1582d56e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1582d56e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d55210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1582d4fad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1582d4fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4fe50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1582d5c670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1582d5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1582d4aad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1582d4aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582d4ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582d49020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d491b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582d49340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582d494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1582d6b100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1582d6b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d6b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1582d64370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1582d64370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d646f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d64880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1582d60480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1582d60480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d60800"/>
        <function-ref name="write" scoped="" ref="0x7f1582d60990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1582d58e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1582d58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d57210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1582d5de50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d5de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5c210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1582d57670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1582d57670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d579f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d57b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1582d5f670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1582d6a450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1582d6a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d6a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1582d5fe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1582d5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5e210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1582d6da80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1582d6da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582d6de00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582d6c020"/>
        <function-ref name="request" scoped="" ref="0x7f1582d6c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1582d6c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582d6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1582d65020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1582d65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1582d65cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1582d65cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d640a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1582d4f2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1582d4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4f670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1582d50ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d50ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d50e50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1582d67450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1582d67450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d677d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1582d502f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1582d502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d50670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d50800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1582d4b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1582d4b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d4b670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d4b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1582d59e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1582d59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d58210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1582d55670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1582d55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d559f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1582d6aaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1582d6aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d6ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1582d69770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d69770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d69af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1582d5ce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1582d5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5a210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1582d65670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1582d65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d659f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1582d5a670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1582d5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d5a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d5ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1582d52e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1582d52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d51610"/>
        <function-ref name="write" scoped="" ref="0x7f1582d517a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1582d497a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1582d497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582d49b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582d49cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d49e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582d48020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582d481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1582d34c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1582d34c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d33210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1582d3fda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1582d3fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1582d37b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1582d37b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d36020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1582d31670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582d31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d319f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d31b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1582d2ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1582d2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d29210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1582d31e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1582d31e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d30210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1582d1e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1582d1e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d1e670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d1e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1582d202f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1582d202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d20670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d20800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1582d3c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1582d3c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1582d26670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1582d26670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d269f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d26b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1582d212f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1582d212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d21670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d21800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1582d36c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1582d36c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d35020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1582d35c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1582d35c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d34020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1582d2c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1582d2c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1582d2ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1582d2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2d210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1582d30670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1582d30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d309f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d30b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1582d40760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1582d40760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1582d40ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1582d40c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1582d40e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1582d3baa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1582d3baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1582d3a120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1582d3a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1582d25a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1582d25a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d25df0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1582d3a870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1582d3a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1582d21ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1582d21ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d21e50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1582d3cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1582d3cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1582d27e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1582d27e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d26210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1582d35480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1582d35480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d35800"/>
        <function-ref name="write" scoped="" ref="0x7f1582d35990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1582d36480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1582d36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d36800"/>
        <function-ref name="write" scoped="" ref="0x7f1582d36990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1582d3f750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1582d3f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1582d28e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1582d28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d27210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1582d29670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1582d29670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d299f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d29b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1582d27670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1582d27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d279f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d27b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1582d1fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1582d1fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d1fe50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1582d20ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1582d20ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d20e50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1582d2d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1582d2d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1582d29e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1582d29e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d28210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1582d22ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1582d22ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d22e50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1582d2f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1582d2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1582d1ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1582d1ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582d1ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582d1c020"/>
        <function-ref name="write" scoped="" ref="0x7f1582d1c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582d1c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582d1c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1582d3f100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1582d3f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1582d37370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1582d37370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d376f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d37880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1582d34480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1582d34480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d34800"/>
        <function-ref name="write" scoped="" ref="0x7f1582d34990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1582d2ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1582d2ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2a210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1582d30e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1582d30e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2f210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1582d2a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1582d2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1582d33670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1582d33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d339f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1582d3d450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1582d3d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1582d33e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1582d33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d31210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1582d419e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1582d419e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582d41d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582d40020"/>
        <function-ref name="request" scoped="" ref="0x7f1582d401b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1582d40340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582d404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1582d39020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1582d39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1582d39cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1582d39cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d370a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1582d222f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1582d222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d22670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d22800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1582d23ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1582d23ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d23e50"/>
        <function-ref name="write" scoped="" ref="0x7f1582d22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1582d3b450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1582d3b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1582d232f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1582d232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d23670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d23800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1582d1f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1582d1f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d1f670"/>
        <function-ref name="write" scoped="" ref="0x7f1582d1f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1582d2de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1582d2de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2c210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1582d28670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1582d28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d289f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d28b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1582d3daa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1582d3daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1582d3c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1582d3c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d3caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1582d2fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1582d2fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2e210"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1582d39670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1582d39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582d399f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1582d2e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1582d2e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d2e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d2eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1582d26e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1582d26e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582d25610"/>
        <function-ref name="write" scoped="" ref="0x7f1582d257a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1582d1c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1582d1c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582d1cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582d1ccb0"/>
        <function-ref name="write" scoped="" ref="0x7f1582d1ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582d1b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582d1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f1582d14b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1582d14b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1582d11020"/>
        <function-ref name="changed" scoped="" ref="0x7f1582d111b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1582d11340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1582d114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7f1582cf2020" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f1582cf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f1582cf23a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f1582cf2530"/>
        <function-ref name="startDAO" scoped="" ref="0x7f1582cf26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f1582cf1020" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f1582cf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582cf13a0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582cf1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15834d36f0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15834d36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15834d3a70"/>
        <function-ref name="stop" scoped="" ref="0x7f15834d3c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f1582c21270" loc="57:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f1582c21270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f1582c215f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f1582c21780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f1582c21910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7f1582c260f0" loc="55:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7f1582c260f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1582c23260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582c25660"/>
        <function-ref name="empty" scoped="" ref="0x7f1582c26ce0"/>
        <function-ref name="put" scoped="" ref="0x7f1582c25ae0"/>
        <function-ref name="size" scoped="" ref="0x7f1582c251e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7f1582c2ebb0" loc="52:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7f1582c2ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582c2d020"/>
        <function-ref name="recv" scoped="" ref="0x7f1582c2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1582c2e410" loc="51:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1582c2e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1582c2e790"/>
        <function-ref name="rand32" scoped="" ref="0x7f1582c2e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7f1582c1f2f0" loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7f1582c1f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582c1f670"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582c1f800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7f1582c39ae0" loc="49:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7f1582c39ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582c34110"/>
        <function-ref name="fired" scoped="" ref="0x7f1582c375b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582c354a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582c35020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582c34a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582c34590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582c37a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582c38750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582c35ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582c38c20"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c37130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f1582c2b5a0" loc="54:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f1582c2b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1582c294a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1582c27260"/>
        <function-ref name="element" scoped="" ref="0x7f1582c278d0"/>
        <function-ref name="full" scoped="" ref="0x7f1582c2a680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582c29020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1582c29b50"/>
        <function-ref name="empty" scoped="" ref="0x7f1582c2a200"/>
        <function-ref name="size" scoped="" ref="0x7f1582c2ab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1582c2d400" loc="53:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1582c2d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1582c2d780"/>
        <function-ref name="changed" scoped="" ref="0x7f1582c2d910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1582c2daa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1582c2dc30"/>
        <function-ref name="setSource" scoped="" ref="0x7f1582c2ddc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1582c2b020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1582c2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7f1582c1fad0" loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7f1582c1fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582c1fe50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582c1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7f1582c3f4b0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f1582c3f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f1582c3f830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f1582c3f9c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f1582c3fb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7f1582c3e720" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f1582c3e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582c3ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f1582c3c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582c3a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582c3cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582c39590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582c39110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582c3c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582c3d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582c3a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582c3d860"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c3dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7f1582c33020" loc="50:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f1582c33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582c2f630"/>
        <function-ref name="fired" scoped="" ref="0x7f1582c32a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582c30920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582c304a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582c2e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582c2fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582c30020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582c33c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582c2f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582c32110"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c325e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7f1582c23980" loc="56:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f1582c23980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f1582c23d00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f1582c22e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f1582c21020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f1582c22340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f1582c224d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f1582c22660"/>
        <function-ref name="getRank" scoped="" ref="0x7f1582c227f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f1582c22980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f1582c22b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f1582c22ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f1582c22020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f1582c221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f1582c21b60" loc="58:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f1582c21b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f1582c20020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f1582c201b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f1582c20340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f1582c20590" loc="59:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582c20590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f1582c20910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f1582c20aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f1582c20c30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f1582c20dc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f1582c1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1582c3fda0" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1582c3fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582c3e180"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c3e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1582c19bd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1582c19bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582c15110"/>
        <function-ref name="fired" scoped="" ref="0x7f1582c176a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582c164a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582c16020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582c15a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582c15590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582c17b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582c18860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582c16ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582c18d30"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c17220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1582c12560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1582c12560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582c0fa20"/>
        <function-ref name="fired" scoped="" ref="0x7f1582c10020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582c10da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582c10920"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582c0d4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582c0d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582c104a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582c111b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582c0f410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582c11680"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c11b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1582c0b020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1582c0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582c08630"/>
        <function-ref name="fired" scoped="" ref="0x7f1582c0aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582c09920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582c094a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582c06020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582c08ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582c09020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582c0bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582c08020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582c0a110"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c0a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1582c02510" loc="31:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1582c02510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582c02890"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582c02a20"/>
        <function-ref name="start" scoped="" ref="0x7f1582c02bb0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582c02d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f1582bfe6e0" loc="36:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f1582bfe6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f1582bfea60"/>
        <function-ref name="initiate" scoped="" ref="0x7f1582bfebf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f1582bfed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f1582bfc930" loc="35:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f1582bfc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f1582bfccb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f1582bfce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f1582c01d40" loc="33:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f1582c01d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582c000e0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582c00270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f1582bfd9d0" loc="41:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f1582bfd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582bfdd50"/>
        <function-ref name="stop" scoped="" ref="0x7f1582bfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f1582c00560" loc="34:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582c00560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f1582c008e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f1582c00a70"/>
        <function-ref name="delRoute" scoped="" ref="0x7f1582c00c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f1582c00d90"/>
        <function-ref name="addRoute" scoped="" ref="0x7f1582bff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f1582bfd130" loc="40:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1582bfd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582bfd4b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582bfd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582c01540" loc="32:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582c01540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582c018c0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582c01a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1582bf7a10" loc="17:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1582bf7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1582bf7d90"/>
        <function-ref name="changed" scoped="" ref="0x7f1582bf6020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1582bf61b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1582bf6340"/>
        <function-ref name="setSource" scoped="" ref="0x7f1582bf64d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1582bf6660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1582bf67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1582bf5bf0" loc="20:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582bf5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1582bf4020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582bf41b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1582bf4340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582bf44d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1582bf4660"/>
        <function-ref name="get" scoped="" ref="0x7f1582bf47f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582bf4980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1582bf3020"/>
        <function-ref name="set" scoped="" ref="0x7f1582bf4b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1582bf4ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1582bf4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7f1582bf6ae0" loc="18:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7f1582bf6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582bf6e60"/>
        <function-ref name="recv" scoped="" ref="0x7f1582bf5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f1582bf52d0" loc="19:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f1582bf52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f1582bf5650"/>
        <function-ref name="delTLV" scoped="" ref="0x7f1582bf57e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f1582bf5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582bf71d0" loc="14:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582bf71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582bf7550"/>
        <function-ref name="recv" scoped="" ref="0x7f1582bf76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f1582bdc890" loc="22:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f1582bdc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f1582bdcc10"/>
        <function-ref name="initiate" scoped="" ref="0x7f1582bdcda0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f1582bdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7f1582bd81d0" loc="28:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f1582bd81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582bd8550"/>
        <function-ref name="recv" scoped="" ref="0x7f1582bd86e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582bd8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f1582bd2790" loc="31:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f1582bd2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f1583c9b110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1582bd0860"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582bd1cb0"/>
        <function-ref name="empty" scoped="" ref="0x7f1582bd13b0"/>
        <function-ref name="put" scoped="" ref="0x7f1582bd0170"/>
        <function-ref name="size" scoped="" ref="0x7f1582bd1830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7f1582bbae40" loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f1582bbae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582bb81e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582bb8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f1582bdda50" loc="21:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f1582bdda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f1582bdddd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f1582bdc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f1582bdba90" loc="24:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f1582bdba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582bdbe10"/>
        <function-ref name="recv" scoped="" ref="0x7f1582bda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1582bda2a0" loc="25:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1582bda2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1582bda620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1582bd8b20" loc="29:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1582bd8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1582bd7020"/>
        <function-ref name="changed" scoped="" ref="0x7f1582bd71b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1582bd7340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1582bd74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1582bd7660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1582bd77f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1582bd7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7f1582bce1c0" loc="34:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7f1582bce1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582bca630"/>
        <function-ref name="fired" scoped="" ref="0x7f1582bcdc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582bcc9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582bcc550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582bc9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582bcaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582bcc0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582bcedb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582bca020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582bcd2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582bcd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f1582bf8d20" loc="20:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582bf8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f1582bdd0e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f1582bdd270"/>
        <function-ref name="delRoute" scoped="" ref="0x7f1582bdd400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f1582bdd590"/>
        <function-ref name="addRoute" scoped="" ref="0x7f1582bdd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f1582bd7c30" loc="30:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f1582bd7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f1582bd2020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f1582bd21b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f1582bd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582bdb290" loc="23:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582bdb290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582bdb610"/>
        <function-ref name="recv" scoped="" ref="0x7f1582bdb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f1582b4b020" loc="11:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f1582b4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b4b3a0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b4b530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582b4b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f1582b44720" loc="15:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f1582b44720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b44aa0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b44c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582b44dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f1582b4c020" loc="10:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f1582b4cd00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f1582b4c530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f1582b4c6c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f1582b4c850"/>
        <function-ref name="matchContext" scoped="" ref="0x7f1582b4c9e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f1582b4c3a0"/>
        <function-ref name="getContext" scoped="" ref="0x7f1582b4cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1582b4b980" loc="12:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1582b4b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582b4bd00"/>
        <function-ref name="stop" scoped="" ref="0x7f1582b4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f1582b49da0" loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f1582b49da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b41180"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b41310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582b414a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f1582b34300" loc="45:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f1582b34300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f1582b34780"/>
        <function-ref name="changed" scoped="" ref="0x7f1582b34910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1582b34aa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1582b34c30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1582b34dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1582b38450" loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1582b38450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1582b387d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1582b38960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f1582b37900" loc="43:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f1582b37900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b37c80"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b37e10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582b35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7f1582b3e0a0" loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7f1582b3e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b3e420"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b3e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1582b352d0" loc="44:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1582b352d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1582b35650"/>
        <function-ref name="changed" scoped="" ref="0x7f1582b357e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1582b35970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1582b35b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1582b35c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1582b35e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1582b34020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7f1582b3f060" loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7f1582b3f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b3f3e0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b3f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f1582b417a0" loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582b417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f1582b404d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f1582b41cb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f1582b41e40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f1582b40020"/>
        <function-ref name="matchContext" scoped="" ref="0x7f1582b401b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f1582b41b20"/>
        <function-ref name="getContext" scoped="" ref="0x7f1582b40340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7f1582b3e8a0" loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7f1582b3e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b3ec20"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b3edb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7f1582b3f860" loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7f1582b3f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582b3fbe0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582b3fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7f1582b3d270" loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7f1582b3d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582b396e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1582b3ccb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582b3aa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582b3a5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582b38020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582b39b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582b3a170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582b3de60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582b390d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582b3c360"/>
        <function-ref name="stop" scoped="" ref="0x7f1582b3c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f1582b38c50" loc="42:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f1582b38c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f1582b37020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f1582b371b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f1582b37340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f1582b374d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f1582b37660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7f1582b01380" loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7f1582b01380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582b01700"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582b01890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1582b40790" loc="30:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1582b40790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582b40b10"/>
        <function-ref name="stop" scoped="" ref="0x7f1582b40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582aa6a30" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582aa6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582aa6dd0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7f1582aa1280" loc="50:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7f1582aa1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582aa1600"/>
        <function-ref name="recv" scoped="" ref="0x7f1582aa1790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1582a9f2d0" loc="54:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1582a9f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1582a9f650"/>
        <function-ref name="changed" scoped="" ref="0x7f1582a9f7e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1582a9f970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1582a9fb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1582a9fc90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1582a9fe20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1582a9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1582a9e2a0" loc="55:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582a9e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1582a9e620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582a9e7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1582a9e940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582a9ead0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1582a9ec60"/>
        <function-ref name="get" scoped="" ref="0x7f1582a9edf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582a9d020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1582a9d660"/>
        <function-ref name="set" scoped="" ref="0x7f1582a9d1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1582a9d340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1582a9d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f1582aa1a80" loc="53:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582aa1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582aa1e00"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a9f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f158142d9f0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f158142d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158142dd70"/>
        <function-ref name="recv" scoped="" ref="0x7f158142c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f158142d1f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f158142d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158142d590"/>
        <function-ref name="recv" scoped="" ref="0x7f158142d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582a6f9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582a6f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582a6fd50"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f1581422820" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f1581422820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581422ba0"/>
        <function-ref name="recv" scoped="" ref="0x7f1581422d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1581422020" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1581422020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15814223c0"/>
        <function-ref name="recv" scoped="" ref="0x7f1581422550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582a6d9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582a6d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582a6dd50"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f1581417020" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f1581417020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15814173a0"/>
        <function-ref name="recv" scoped="" ref="0x7f1581417530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f15814186a0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f15814186a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581418a40"/>
        <function-ref name="recv" scoped="" ref="0x7f1581418bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582a6b9b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582a6b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582a6bd50"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a6a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f158140d5e0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f158140d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158140d960"/>
        <function-ref name="recv" scoped="" ref="0x7f158140daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f158140fdb0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f158140fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158140d180"/>
        <function-ref name="recv" scoped="" ref="0x7f158140d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1582a697b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1582a697b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582a65c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1582a66260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582a65020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582a66b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582a64590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582a64110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582a666e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582a67400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582a65630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582a678d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582a67da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1582a51020" loc="35:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1582a51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582a513a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582a51530"/>
        <function-ref name="start" scoped="" ref="0x7f1582a516c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582a51850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f1582a4f020" loc="37:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f1582a4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f1582a578c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f1582a56090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1582a4e170"/>
        <function-ref name="get" scoped="" ref="0x7f1582a4fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f1582a51af0" loc="36:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f1582a51af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582a51e70"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a50030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582a501c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1582a49230" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1582a49230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1582a495b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1582a49870" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582a49870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1582a49bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582a49d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f1582a48020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582a481b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1582a48340"/>
        <function-ref name="get" scoped="" ref="0x7f1582a484d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582a48660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1582a48ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1582a487f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1582a48980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1582a48b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1582a306d0" loc="43:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1582a306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582a30a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582a30be0"/>
        <function-ref name="start" scoped="" ref="0x7f1582a30d70"/>
        <function-ref name="stop" scoped="" ref="0x7f1582a2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7f1582a0b5f0" loc="68:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7f1582a0b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1582a08710"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582a09b10"/>
        <function-ref name="empty" scoped="" ref="0x7f1582a09210"/>
        <function-ref name="put" scoped="" ref="0x7f1582a08020"/>
        <function-ref name="size" scoped="" ref="0x7f1582a09690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f1582a2e940" loc="49:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f1582a2e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f1582a578c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f1582a56090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1582a2da70"/>
        <function-ref name="get" scoped="" ref="0x7f1582a2d560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f1582a2b060" loc="53:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f1582a2b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582a2b3e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582a2b570"/>
        <function-ref name="start" scoped="" ref="0x7f1582a2b700"/>
        <function-ref name="stop" scoped="" ref="0x7f1582a2b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f1582a2fd60" loc="47:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f1582a2fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582a2e180"/>
        <function-ref name="recv" scoped="" ref="0x7f1582a2e310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582a2e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7f1582a1e020" loc="62:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f1582a1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f1582a1e3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f1582a1e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f1582a0ecb0" loc="64:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1582a0ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1582a1b0a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1582a1b230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1582a1b3c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1582a1b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1582a2f720" loc="44:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1582a2f720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f158439fb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f158439fb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1582a2faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f1582a04c50" loc="70:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f1582a04c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1582a01ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1582a00880"/>
        <function-ref name="element" scoped="" ref="0x7f15829fe020"/>
        <function-ref name="full" scoped="" ref="0x7f1582a02ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582a01660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1582a001d0"/>
        <function-ref name="empty" scoped="" ref="0x7f1582a02860"/>
        <function-ref name="size" scoped="" ref="0x7f1582a011e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7f15829fe900" loc="73:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7f15829fe900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15829fbe80"/>
        <function-ref name="fired" scoped="" ref="0x7f15829fc4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15829fb260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15829fcda0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15829f97a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f15829f9320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15829fc920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15829fd560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15829fb870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15829fda30"/>
        <function-ref name="stop" scoped="" ref="0x7f15829fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f15827816e0" loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f15827816e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582781a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582781bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f1582a284e0" loc="60:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1582a284e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f1582a1f340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f1582a289f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f1582a28b80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f1582a28d10"/>
        <function-ref name="matchContext" scoped="" ref="0x7f1582a1f020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f1582a28860"/>
        <function-ref name="getContext" scoped="" ref="0x7f1582a1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7f1582a1ba10" loc="67:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7f1582a1ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1582a0dc00"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582a0d090"/>
        <function-ref name="empty" scoped="" ref="0x7f1582a13750"/>
        <function-ref name="put" scoped="" ref="0x7f1582a0d510"/>
        <function-ref name="size" scoped="" ref="0x7f1582a13bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15829f9bc0" loc="75:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15829f9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15829f8020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15829f81b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f15829f8340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15829f84d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15829f8660"/>
        <function-ref name="get" scoped="" ref="0x7f15829f87f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15829f8980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15829f7020"/>
        <function-ref name="set" scoped="" ref="0x7f15829f8b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f15829f8ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f15829f8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7f1582a290f0" loc="56:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f1582a290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582a29470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582a29600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582a29790"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582a29920"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582a29ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7f1582a2bbd0" loc="55:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1582a2bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1582a2a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1582a2a1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582a2a340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582a2a4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1582a2a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7f1582a1d020" loc="63:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1582a1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1582a1d3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1582a1d530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1582a1d6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1582a1d850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1582a1d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7f1582a06150" loc="69:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7f1582a06150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1582a04260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582a05660"/>
        <function-ref name="empty" scoped="" ref="0x7f1582a06d40"/>
        <function-ref name="put" scoped="" ref="0x7f1582a05ae0"/>
        <function-ref name="size" scoped="" ref="0x7f1582a051e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7f1582a29e20" loc="57:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f1582a29e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582a281c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1582752420" loc="19:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1582752420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15827527a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582752930"/>
        <function-ref name="start" scoped="" ref="0x7f1582752ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582752c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f158274ea30" loc="23:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f158274ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158274edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f158274f020" loc="21:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f158274f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f158274f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f158274f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158274f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158274f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f158274f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f158274fd00" loc="22:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f158274fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158274e0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158274e230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158274e3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f158274e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158274e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f158274db40" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f158274db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f158274a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f158274a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f158274a340"/>
        <function-ref name="stop" scoped="" ref="0x7f158274a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1582731170" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582731170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f15827314f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f158273a470" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f158273a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f158273a7f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f158273a980"/>
        <function-ref name="getRetries" scoped="" ref="0x7f158273ab10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f158273aca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f158273ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f158273b640" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f158273b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f158273b9c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f158273bb50"/>
        <function-ref name="getRssi" scoped="" ref="0x7f158273bce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f158273be70"/>
        <function-ref name="getPower" scoped="" ref="0x7f1582743030"/>
        <function-ref name="getLqi" scoped="" ref="0x7f15827431c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1582746d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1582746d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15827450e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582745270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582745400"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582745590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582745720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f15827317f0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f15827317f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1582731b70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1582731d00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f158273a020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f158273a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1582748820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1582748820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582748ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1582742080" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582742080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1582742400"/>
        <function-ref name="noAck" scoped="" ref="0x7f1582742590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1582742720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f158274ad00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f158274ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15827490a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582749230"/>
        <function-ref name="request" scoped="" ref="0x7f15827493c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1582749550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15827496e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1582749a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1582749a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582749d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582748020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15827481b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582748340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15827484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1582746020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1582746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15827463a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1582746530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15827466c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582746850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15827469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1582745a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582745a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582745e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1582735b20" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1582735b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f158272f020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f158272f1b0"/>
        <function-ref name="start" scoped="" ref="0x7f158272f340"/>
        <function-ref name="stop" scoped="" ref="0x7f158272f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1582724230" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1582724230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f15827245b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1582724740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f15827248d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1582724a60"/>
        <function-ref name="setCca" scoped="" ref="0x7f1582724bf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1582724d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f158272f790" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f158272f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158272fb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158272fca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158272fe30"/>
        <function-ref name="cancel" scoped="" ref="0x7f158272e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158272e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f158272e490" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f158272e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158272e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f158272dd90" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f158272dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582722180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582722310"/>
        <function-ref name="start" scoped="" ref="0x7f15827224a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582722630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1582721650" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1582721650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f15827219d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1582721b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1582721cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1582721e80"/>
        <function-ref name="setCca" scoped="" ref="0x7f1582720030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f15827201c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f158271de00" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f158271de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f158271c1c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f158271c350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f158271c4e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f158271c670"/>
        <function-ref name="setCca" scoped="" ref="0x7f158271c800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f158271c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1582714b00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1582714b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1582714e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1582713030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f15827131c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1582713350"/>
        <function-ref name="getPower" scoped="" ref="0x7f15827134e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1582713670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f158271d080" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f158271d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158271d400"/>
        <function-ref name="cancel" scoped="" ref="0x7f158271d590"/>
        <function-ref name="modify" scoped="" ref="0x7f158271d720"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158271d8b0"/>
        <function-ref name="resend" scoped="" ref="0x7f158271da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15827228f0" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15827228f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582722c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582722e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582721020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15827211b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582721340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f158271cc60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f158271cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1582715020"/>
        <function-ref name="rand32" scoped="" ref="0x7f15827151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f158271e3e0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f158271e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f158271e760"/>
        <function-ref name="stop" scoped="" ref="0x7f158271e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f158270b130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f158270b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f158270b4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f158270b640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f158270b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f158271f1a0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f158271f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f158271f520"/>
        <function-ref name="rfOff" scoped="" ref="0x7f158271f6b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f158271f840"/>
        <function-ref name="startVReg" scoped="" ref="0x7f158271f9d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f158271fb60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f158271fcf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f158271fe80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f158271e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1582715470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582715470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15827157f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582715980"/>
        <function-ref name="led1On" scoped="" ref="0x7f1582715b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582715ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1582715e30"/>
        <function-ref name="get" scoped="" ref="0x7f1582714020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15827141b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15827147f0"/>
        <function-ref name="set" scoped="" ref="0x7f1582714340"/>
        <function-ref name="led0On" scoped="" ref="0x7f15827144d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1582714660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f15827204b0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15827204b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582720830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15827209c0"/>
        <function-ref name="request" scoped="" ref="0x7f1582720b50"/>
        <function-ref name="granted" scoped="" ref="0x7f1582720ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582720e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f158270bb90" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f158270bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15827110a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1582711230"/>
        <function-ref name="isState" scoped="" ref="0x7f15827113c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1582711550"/>
        <function-ref name="requestState" scoped="" ref="0x7f15827116e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1582711870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f15827075d0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f15827075d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582707950"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582707ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f1582708660" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f1582708660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15827089e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582708b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f1582709730" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f1582709730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582709ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582709c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f15826bb020" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f15826bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f15826bb3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f15826bb530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f15826bb6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f15826bb850"/>
        <function-ref name="setCca" scoped="" ref="0x7f15826bb9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f15826bbb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f15826baca0" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f15826baca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f15826b90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f15826bc300" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f15826bc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15826bc680"/>
        <function-ref name="cancel" scoped="" ref="0x7f15826bc810"/>
        <function-ref name="modify" scoped="" ref="0x7f15826bc9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15826bcb30"/>
        <function-ref name="resend" scoped="" ref="0x7f15826bccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15826bf9b0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15826bf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15826bfd30"/>
        <function-ref name="stop" scoped="" ref="0x7f15826bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f15826b9470" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f15826b9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f15826b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f15826aecf0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f15826aecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f15826ad0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f15826ad230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f15826ad3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f15826ad550"/>
        <function-ref name="setCca" scoped="" ref="0x7f15826ad6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f15826ad870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f15826a5200" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15826a5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15826a47c0"/>
        <function-ref name="clear" scoped="" ref="0x7f158269c020"/>
        <function-ref name="isValid" scoped="" ref="0x7f15826a4090"/>
        <function-ref name="set" scoped="" ref="0x7f158269c750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1582688990" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1582688990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582688d10"/>
        <function-ref name="write" scoped="" ref="0x7f1582687020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1582687380" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1582687380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582687700"/>
        <function-ref name="write" scoped="" ref="0x7f1582687890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f15826adc90" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f15826adc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f15826ac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f158268be60" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f158268be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f158268a210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f15826991e0" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f15826991e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1582699560"/>
        <function-ref name="disable" scoped="" ref="0x7f15826996f0"/>
        <function-ref name="captured" scoped="" ref="0x7f1582699880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1582699a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f15826ab020" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f15826ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15826a9870"/>
        <function-ref name="fired" scoped="" ref="0x7f15826aa840"/>
        <function-ref name="startAt" scoped="" ref="0x7f15826a9220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15826aad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f15826a9d30"/>
        <function-ref name="start" scoped="" ref="0x7f15826abe30"/>
        <function-ref name="stop" scoped="" ref="0x7f15826aa380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f15826a7210" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f15826a7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f15826a7590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f15826a7720"/>
        <function-ref name="getRssi" scoped="" ref="0x7f15826a78b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f15826a7a40"/>
        <function-ref name="getPower" scoped="" ref="0x7f15826a7bd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f15826a7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f158268dd80" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f158268dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158268c180"/>
        <function-ref name="write" scoped="" ref="0x7f158268c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f158268c6b0" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f158268c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158268ca30"/>
        <function-ref name="write" scoped="" ref="0x7f158268cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f1582680780" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1582680780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582680b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1582680c90"/>
        <function-ref name="sfd" scoped="" ref="0x7f1582680e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15826ae020" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15826ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15826ae3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15826ae530"/>
        <function-ref name="modify" scoped="" ref="0x7f15826ae6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15826ae850"/>
        <function-ref name="resend" scoped="" ref="0x7f15826ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f158268e4e0" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f158268e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f158268e860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f158268e9f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f158268eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f158268a5c0" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f158268a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f158268a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1582697080" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1582697080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582697400"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582697590"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582697720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15826978b0"/>
        <function-ref name="get" scoped="" ref="0x7f1582697a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582697bd0"/>
        <function-ref name="set" scoped="" ref="0x7f1582697d60"/>
        <function-ref name="clr" scoped="" ref="0x7f1582691020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15826af020" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15826af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15826af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f15826a60c0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15826a60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f15826a6440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f15826a65d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f15826a6760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1582692570" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1582692570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15826928f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f1582692a80"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582692c10"/>
        <function-ref name="set" scoped="" ref="0x7f1582692da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f158268ad00" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f158268ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582689410"/>
        <function-ref name="write" scoped="" ref="0x7f15826895a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f15826906e0" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f15826906e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582690a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1582690bf0"/>
        <function-ref name="request" scoped="" ref="0x7f1582690d80"/>
        <function-ref name="granted" scoped="" ref="0x7f158268e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158268e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f1582699d60" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1582699d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1582698210"/>
        <function-ref name="isInput" scoped="" ref="0x7f15826983a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582698530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15826986c0"/>
        <function-ref name="get" scoped="" ref="0x7f1582698850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15826989e0"/>
        <function-ref name="set" scoped="" ref="0x7f1582698b70"/>
        <function-ref name="clr" scoped="" ref="0x7f1582698d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1582687bf0" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1582687bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582686020"/>
        <function-ref name="write" scoped="" ref="0x7f15826861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f1582686530" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1582686530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15826868b0"/>
        <function-ref name="write" scoped="" ref="0x7f1582686a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f158268b020" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f158268b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f158268b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f1582691370" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1582691370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15826916f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1582691880"/>
        <function-ref name="toggle" scoped="" ref="0x7f1582691a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1582691ba0"/>
        <function-ref name="get" scoped="" ref="0x7f1582691d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1582690020"/>
        <function-ref name="set" scoped="" ref="0x7f15826901b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1582690340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1582685110" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582685110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1582685490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582685620"/>
        <function-ref name="led1On" scoped="" ref="0x7f15826857b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582685940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1582685ad0"/>
        <function-ref name="get" scoped="" ref="0x7f1582685c60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582685df0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15826844d0"/>
        <function-ref name="set" scoped="" ref="0x7f1582684020"/>
        <function-ref name="led0On" scoped="" ref="0x7f15826841b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1582684340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f15826880c0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f15826880c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582688440"/>
        <function-ref name="write" scoped="" ref="0x7f15826885d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15826af6a0" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15826af6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15826afa20"/>
        <function-ref name="stop" scoped="" ref="0x7f15826afbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f158268d020" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f158268d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f158268d3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f158268d530"/>
        <function-ref name="write" scoped="" ref="0x7f158268d6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f158268d850"/>
        <function-ref name="readDone" scoped="" ref="0x7f158268d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f158268b730" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f158268b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f158268bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f1582689930" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1582689930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1582689cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f15826ac4b0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f15826ac4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f15826ac830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f15825e4c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f15825e4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e3210"/>
        <function-ref name="write" scoped="" ref="0x7f15825e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f15825ee020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f15825ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f15825e8c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15825e8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e7020"/>
        <function-ref name="write" scoped="" ref="0x7f15825e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f15825e2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f15825e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e29f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825e2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f15825dbe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f15825dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825da210"/>
        <function-ref name="write" scoped="" ref="0x7f15825da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f15825e2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f15825e2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e1210"/>
        <function-ref name="write" scoped="" ref="0x7f15825e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f15825ce2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f15825ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825ce670"/>
        <function-ref name="write" scoped="" ref="0x7f15825ce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f15825d02f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f15825d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d0670"/>
        <function-ref name="write" scoped="" ref="0x7f15825d0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f15825ed370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f15825ed370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ed6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f15825d6670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f15825d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d69f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f15825d22f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f15825d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d2670"/>
        <function-ref name="write" scoped="" ref="0x7f15825d2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f15825e7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f15825e7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e5020"/>
        <function-ref name="write" scoped="" ref="0x7f15825e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f15825e5c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f15825e5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e4020"/>
        <function-ref name="write" scoped="" ref="0x7f15825e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f15825dc670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f15825dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825dc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f15825dee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f15825dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825dd210"/>
        <function-ref name="write" scoped="" ref="0x7f15825dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f15825e1670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f15825e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e19f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825e1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f15825f08f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15825f08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f15825f0c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f15825f0e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f15825ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f15825ebd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f15825ebd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ea0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f15825ea370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f15825ea370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ea7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f15825d5a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f15825d5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d5df0"/>
        <function-ref name="write" scoped="" ref="0x7f15825d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f15825eaac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f15825eaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825eae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f15825d2ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f15825d2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d2e50"/>
        <function-ref name="write" scoped="" ref="0x7f15825d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f15825eb060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f15825eb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825eb3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f15825d7e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f15825d7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d6210"/>
        <function-ref name="write" scoped="" ref="0x7f15825d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f15825e5480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f15825e5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e5800"/>
        <function-ref name="write" scoped="" ref="0x7f15825e5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f15825e7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15825e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e7800"/>
        <function-ref name="write" scoped="" ref="0x7f15825e7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f15825ef940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f15825ef940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825efcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f15825d8e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f15825d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d7210"/>
        <function-ref name="write" scoped="" ref="0x7f15825d73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f15825da670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f15825da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825da9f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f15825d7670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f15825d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d79f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f15825cfad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f15825cfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825cfe50"/>
        <function-ref name="write" scoped="" ref="0x7f15825ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f15825d0ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f15825d0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d0e50"/>
        <function-ref name="write" scoped="" ref="0x7f15825cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f15825dd670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f15825dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825dd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f15825dae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f15825dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d8210"/>
        <function-ref name="write" scoped="" ref="0x7f15825d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f15825d3ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f15825d3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d3e50"/>
        <function-ref name="write" scoped="" ref="0x7f15825d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f15825e0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f15825e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e09f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f15825cead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f15825cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15825cee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15825cd020"/>
        <function-ref name="write" scoped="" ref="0x7f15825cd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f15825cd340"/>
        <function-ref name="readDone" scoped="" ref="0x7f15825cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f15825ef2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f15825ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ef670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f15825e8490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f15825e8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e8810"/>
        <function-ref name="write" scoped="" ref="0x7f15825e89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f15825e4480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f15825e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e4800"/>
        <function-ref name="write" scoped="" ref="0x7f15825e4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f15825dce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f15825dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825db210"/>
        <function-ref name="write" scoped="" ref="0x7f15825db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f15825e1e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f15825e1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e0210"/>
        <function-ref name="write" scoped="" ref="0x7f15825e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f15825db670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f15825db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825db9f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f15825e3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f15825e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e39f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825e3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f15825ee670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f15825ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ee9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f15825e3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f15825e3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825e2210"/>
        <function-ref name="write" scoped="" ref="0x7f15825e23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15825f1c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15825f1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15825f0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15825f01b0"/>
        <function-ref name="request" scoped="" ref="0x7f15825f0340"/>
        <function-ref name="granted" scoped="" ref="0x7f15825f04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15825f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f15825e9160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f15825e9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825e94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f15825e9e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f15825e9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825e81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f15825d32f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f15825d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d3670"/>
        <function-ref name="write" scoped="" ref="0x7f15825d3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f15825d4ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f15825d4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d4e50"/>
        <function-ref name="write" scoped="" ref="0x7f15825d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f15825eb6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15825eb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825eba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f15825d42f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f15825d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d4670"/>
        <function-ref name="write" scoped="" ref="0x7f15825d4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f15825cf2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f15825cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825cf670"/>
        <function-ref name="write" scoped="" ref="0x7f15825cf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f15825dde50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f15825dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825dc210"/>
        <function-ref name="write" scoped="" ref="0x7f15825dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f15825d8670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f15825d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d89f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f15825eecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f15825eecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825ed0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f15825ed9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f15825ed9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825edd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f15825e0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f15825e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825de210"/>
        <function-ref name="write" scoped="" ref="0x7f15825de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f15825e97b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f15825e97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825e9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f15825de670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f15825de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825de9f0"/>
        <function-ref name="write" scoped="" ref="0x7f15825deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f15825d6e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f15825d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825d5610"/>
        <function-ref name="write" scoped="" ref="0x7f15825d57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f15825cd7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f15825cd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15825cdb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15825cdcb0"/>
        <function-ref name="write" scoped="" ref="0x7f15825cde40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f15825cc020"/>
        <function-ref name="readDone" scoped="" ref="0x7f15825cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f15825c1df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f15825c1df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15825be1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f15825be350"/>
        <function-ref name="sfd" scoped="" ref="0x7f15825be4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15825be7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15825be7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15825beb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f15825bd020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f15825bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f15825bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15825c15c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15825c15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15825c1940"/>
        <function-ref name="stop" scoped="" ref="0x7f15825c1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f15825b5380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f15825b5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15825b5700"/>
        <function-ref name="isInput" scoped="" ref="0x7f15825b5890"/>
        <function-ref name="toggle" scoped="" ref="0x7f15825b5a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15825b5bb0"/>
        <function-ref name="get" scoped="" ref="0x7f15825b5d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15825b4020"/>
        <function-ref name="set" scoped="" ref="0x7f15825b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f15825b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f15825aeb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f15825aeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f15825ad020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f15825ad1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f15825ad340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f15825ad4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f15825ad660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f15825ad7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f15825ad980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f15825adb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f15825adca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f15825ade30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f15825ac020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f15825ac1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f15825ac340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f15825ac5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f15825ac760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f15825979d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f15825979d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582597d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582596020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f15825acd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f15825acd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f15825a9330"/>
        <function-ref name="clear" scoped="" ref="0x7f15825a9a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f15825abba0"/>
        <function-ref name="set" scoped="" ref="0x7f15825a8210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f15825b46b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f15825b46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15825b4a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f15825b4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f15825b4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15825b3020"/>
        <function-ref name="get" scoped="" ref="0x7f15825b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15825b3340"/>
        <function-ref name="set" scoped="" ref="0x7f15825b34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f15825b3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f15825a7cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f15825a7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825a60a0"/>
        <function-ref name="write" scoped="" ref="0x7f15825a6230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f15825a6590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f15825a6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825a6910"/>
        <function-ref name="write" scoped="" ref="0x7f15825a6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f15825a56d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f15825a56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825a5a50"/>
        <function-ref name="write" scoped="" ref="0x7f15825a5be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f15825af330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f15825af330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f15825af6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f15825af840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f15825af9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f15825afb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f15825afcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f15825afe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f15825b8550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f15825b8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15825b88d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f15825b8a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f15825b8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f15825b03a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f15825b03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825b0720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f15825b6020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f15825b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f15825b63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f15825b6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f15825b66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f15825b6850"/>
        <function-ref name="get" scoped="" ref="0x7f15825b69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f15825b6b70"/>
        <function-ref name="set" scoped="" ref="0x7f15825b6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f15825b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f15825a3020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f15825a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825a33a0"/>
        <function-ref name="write" scoped="" ref="0x7f15825a3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15825b9620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15825b9620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15825b99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f15825ae1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825ae1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f15825ae560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f15825ae6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f15825ae880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15825b7020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15825b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15825b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f15825b26e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f15825b26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15825b2a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15825b2bf0"/>
        <function-ref name="request" scoped="" ref="0x7f15825b2d80"/>
        <function-ref name="granted" scoped="" ref="0x7f15825b1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15825b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f15825a6e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f15825a6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825a51c0"/>
        <function-ref name="write" scoped="" ref="0x7f15825a5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f15825b1530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f15825b1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15825b18b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f15825b1a40"/>
        <function-ref name="write" scoped="" ref="0x7f15825b1bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f15825b1d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f15825b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f15825a38b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f15825a38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825a3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f15825b77c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f15825b77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f15825b7b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15825a2150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15825a2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15825a24d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15825a2660"/>
        <function-ref name="led1On" scoped="" ref="0x7f15825a27f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15825a2980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15825a2b10"/>
        <function-ref name="get" scoped="" ref="0x7f15825a2ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15825a2e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15825a14d0"/>
        <function-ref name="set" scoped="" ref="0x7f15825a1020"/>
        <function-ref name="led0On" scoped="" ref="0x7f15825a11b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f15825a1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f15825a73e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f15825a73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15825a7760"/>
        <function-ref name="write" scoped="" ref="0x7f15825a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f15825a8b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f15825a8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f15825b3a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f15825b3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f15825b3dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f15825b2020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f15825b21b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f15825b2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f15825b0ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15825b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15825af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f15825b9ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15825b9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15825b80a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15825b8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1582536a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582536a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1582536df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f158253a670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f158253a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f158253a9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f158253ab80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f158253ad10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1582537020"/>
        <function-ref name="getPower" scoped="" ref="0x7f15825371b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1582537340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1582535550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1582535550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1582534b00"/>
        <function-ref name="clear" scoped="" ref="0x7f15825322a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f15825343d0"/>
        <function-ref name="set" scoped="" ref="0x7f15825329d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f15825360c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f15825360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1582536440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f15825365d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1582536760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f158252d480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f158252d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158252d800"/>
        <function-ref name="isSet" scoped="" ref="0x7f158252d990"/>
        <function-ref name="cancel" scoped="" ref="0x7f158252db20"/>
        <function-ref name="set" scoped="" ref="0x7f158252dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1582531660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1582531660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1582530ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f158252e460"/>
        <function-ref name="isValid" scoped="" ref="0x7f15825305b0"/>
        <function-ref name="set" scoped="" ref="0x7f158252eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f15825376e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f15825376e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1582537a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f1582537bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1582537d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1582526020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1582526020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f15825263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f158252cd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f158252cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f15825280e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1582528270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1582528400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1582528590"/>
        <function-ref name="getPower" scoped="" ref="0x7f1582528720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f15825288b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f158251d4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f158251d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f158251d820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f158251d9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158251db40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158251dcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f158251de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1582526a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1582526a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1582523020"/>
        <function-ref name="clear" scoped="" ref="0x7f1582523750"/>
        <function-ref name="isValid" scoped="" ref="0x7f15825258d0"/>
        <function-ref name="set" scoped="" ref="0x7f1582523e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1582527640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1582527640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f15825279c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1582527b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1582527ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f158251e8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f158251e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158251ec30"/>
        <function-ref name="isSet" scoped="" ref="0x7f158251edc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f158251d020"/>
        <function-ref name="set" scoped="" ref="0x7f158251d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f158251c3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f158251c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158251a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f158251a6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f158251a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15825193d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1582522af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1582522af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f158251f0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f158251f800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1582521970"/>
        <function-ref name="set" scoped="" ref="0x7f158251e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1582528c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1582528c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1582527020"/>
        <function-ref name="noAck" scoped="" ref="0x7f15825271b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1582527340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f15824cbcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f15824cbcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15824ca980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f15824c8020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f15824c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15824c8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f15824c7800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f15824c7340"/>
        <function-ref name="overflow" scoped="" ref="0x7f15824c7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f15824c40b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f15824c40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f15824c0630"/>
        <function-ref name="fired" scoped="" ref="0x7f15824c3b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f15824c1920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f15824c14a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15824bf020"/>
        <function-ref name="gett0" scoped="" ref="0x7f15824c0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f15824c1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15824c4ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f15824c0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f15824c31b0"/>
        <function-ref name="stop" scoped="" ref="0x7f15824c3680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f15824ae620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f15824ae620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824aeba0"/>
        <function-ref name="write" scoped="" ref="0x7f15824aed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f15824b9940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f15824b9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f15824b2620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f15824b2620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824b29a0"/>
        <function-ref name="write" scoped="" ref="0x7f15824b2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f15824ac060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f15824ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824ac3e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824ac570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f15824a5840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f15824a5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a5bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f15824ac840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f15824ac840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824acbc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824acd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1582499c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1582499c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582498020"/>
        <function-ref name="write" scoped="" ref="0x7f15824981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f158249cc60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f158249cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249b020"/>
        <function-ref name="write" scoped="" ref="0x7f158249b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f15824b8cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f15824b8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f15824a0060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f15824a0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a03e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f158249dc60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f158249dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249c020"/>
        <function-ref name="write" scoped="" ref="0x7f158249c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f15824b1620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f15824b1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824b19a0"/>
        <function-ref name="write" scoped="" ref="0x7f15824b1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f15824b0620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f15824b0620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824b09a0"/>
        <function-ref name="write" scoped="" ref="0x7f15824b0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f15824a6060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f15824a6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a63e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f15824a9840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f15824a9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a9bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f15824ab060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f15824ab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824ab3e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824ab570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f15824ba2b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f15824ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f15824ba630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f15824ba7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f15824ba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f15824b66b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f15824b66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f15824b6d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f15824b6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f158249f480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f158249f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249f800"/>
        <function-ref name="write" scoped="" ref="0x7f158249f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f15824b4490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f15824b4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f158249c480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f158249c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249c800"/>
        <function-ref name="write" scoped="" ref="0x7f158249c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f15824b79c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f15824b79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b7d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f15824a2840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f15824a2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a2bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f15824b1e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f15824b1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824b01c0"/>
        <function-ref name="write" scoped="" ref="0x7f15824b0350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f15824b2e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f15824b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824b11c0"/>
        <function-ref name="write" scoped="" ref="0x7f15824b1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f15824b92f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f15824b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f15824a3840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f15824a3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a3bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f15824a4060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f15824a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a43e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f15824a2060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f15824a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a23e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1582499480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1582499480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582499800"/>
        <function-ref name="write" scoped="" ref="0x7f1582499990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f158249b480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f158249b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249b800"/>
        <function-ref name="write" scoped="" ref="0x7f158249b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f15824a8060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f15824a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a83e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f15824a4840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f15824a4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a4bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f158249d480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f158249d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249d800"/>
        <function-ref name="write" scoped="" ref="0x7f158249d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f15824aa060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f15824aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824aa3e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824aa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1582498480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1582498480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1582498800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582498990"/>
        <function-ref name="write" scoped="" ref="0x7f1582498b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582498cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582498e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f15824bac20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f15824bac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f15824b3e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f15824b3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824b21c0"/>
        <function-ref name="write" scoped="" ref="0x7f15824b2350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f15824b0e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f15824b0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824ae1c0"/>
        <function-ref name="write" scoped="" ref="0x7f15824ae350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f15824a6840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f15824a6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a6bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f15824ab840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f15824ab840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824abbc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824abd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f15824a5060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f15824a5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a53e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f15824ad060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f15824ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824ad3e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824ad570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f15824b8020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f15824b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f15824ad840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f15824ad840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824adbc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824add50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15824bc520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15824bc520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15824bc8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15824bca30"/>
        <function-ref name="request" scoped="" ref="0x7f15824bcbc0"/>
        <function-ref name="granted" scoped="" ref="0x7f15824bcd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15824ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f15824b4ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f15824b4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f15824b37b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f15824b37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f158249ec60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f158249ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249d020"/>
        <function-ref name="write" scoped="" ref="0x7f158249d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f158249e480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f158249e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249e800"/>
        <function-ref name="write" scoped="" ref="0x7f158249e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f15824b6060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f15824b6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b63e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f158249fc60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f158249fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249e020"/>
        <function-ref name="write" scoped="" ref="0x7f158249e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f158249bc60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f158249bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1582499020"/>
        <function-ref name="write" scoped="" ref="0x7f15824991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f15824a8840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f15824a8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a8bc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a8d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f15824a3060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f15824a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a33e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f15824b8670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f15824b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f15824b7370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f15824b7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f15824aa840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f15824aa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824aabc0"/>
        <function-ref name="write" scoped="" ref="0x7f15824aad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f15824b3160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f15824b3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f15824b34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f15824a9060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f15824a9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f15824a93e0"/>
        <function-ref name="write" scoped="" ref="0x7f15824a9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f15824a0840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f15824a0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f158249f020"/>
        <function-ref name="write" scoped="" ref="0x7f158249f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1582497160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1582497160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f15824974e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1582497670"/>
        <function-ref name="write" scoped="" ref="0x7f1582497800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1582497990"/>
        <function-ref name="readDone" scoped="" ref="0x7f1582497b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1582471390" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1582471390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1582471710"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15824718a0"/>
        <function-ref name="isState" scoped="" ref="0x7f1582471a30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1582471bc0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1582471d50"/>
        <function-ref name="forceState" scoped="" ref="0x7f158246f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1582462b50" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1582462b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582461020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15824611b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582461340"/>
        <function-ref name="cancel" scoped="" ref="0x7f15824614d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582461660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1582465dd0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1582465dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582462180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582462310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15824624a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582462630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15824627c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f158245db40" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f158245db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158245c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158245c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158245c340"/>
        <function-ref name="cancel" scoped="" ref="0x7f158245c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158245c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f158245e660" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f158245e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158245e9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158245eb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158245ed00"/>
        <function-ref name="cancel" scoped="" ref="0x7f158245d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158245d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f158245b760" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f158245b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f158245bae0"/>
        <function-ref name="rand32" scoped="" ref="0x7f158245bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158245d430" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158245d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158245d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f158245a020" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f158245a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f158245a3a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f158245a530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f158245a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f158245c8f0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f158245c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f158245cc70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f158245ce00"/>
        <function-ref name="isState" scoped="" ref="0x7f158245b020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f158245b1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f158245b340"/>
        <function-ref name="forceState" scoped="" ref="0x7f158245b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f158245f690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f158245f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f158245fa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f158245fba0"/>
        <function-ref name="isState" scoped="" ref="0x7f158245fd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1582449020"/>
        <function-ref name="requestState" scoped="" ref="0x7f15824491b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1582449340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1582443950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1582443950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582443cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1582446aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1582446aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582446e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1582443200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1582443200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582443580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f158243d3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f158243d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158243d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158243fb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158243fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158243d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1582442e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1582442e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158243f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f158243da70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f158243da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f158243ddf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f158243c020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f158243c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f158243f570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f158243f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158243f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f158240f020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f158240f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158240f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f158240f6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f158240f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158240fa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158240fbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158240fd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f158240e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158240e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15824138e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15824138e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582413c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582413df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582412020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15824121b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582412340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1582412c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1582412c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15824110a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582411230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15824113c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582411550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15824116e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15824125e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15824125e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582412960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1582414be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1582414be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582413020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15824131b0"/>
        <function-ref name="request" scoped="" ref="0x7f1582413340"/>
        <function-ref name="granted" scoped="" ref="0x7f15824134d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582413660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1582411a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582411a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582411dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1582410170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1582410170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15824104f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1582410680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582410810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15824109a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1582410b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1582405d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1582405d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582404180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582404310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15824044a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582404630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15824047c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1582404b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1582404b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582403020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f15823d6db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f15823d6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15823d5180"/>
        <function-ref name="runTask" scoped="" ref="0x7f15823d5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f15824032f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f15824032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1582403670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1582403800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1582403990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1582403b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f1582403cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1582403e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1582407a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1582407a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582407da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582406020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15824061b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582406340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15824064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1582402b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1582402b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1582401020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15824011b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1582401340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15824014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1582402170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1582402170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f15824024f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1582402680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1582402810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1582407370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1582407370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15824076f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f158240a7b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f158240a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158240ab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158240acc0"/>
        <function-ref name="request" scoped="" ref="0x7f158240ae50"/>
        <function-ref name="granted" scoped="" ref="0x7f1582409020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15824091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f15824094d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f15824094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582409850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15824099e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582409b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582409d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1582406840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1582406840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582406bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1582405020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1582405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15824053a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1582405530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15824056c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582405850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15824059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15823b6dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15823b6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15823b5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f15823b5410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f15823b5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15823b5790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15823b5920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15823b5ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15823b5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15823a9b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15823a9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15823a8020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15823a81b0"/>
        <function-ref name="start" scoped="" ref="0x7f15823a8340"/>
        <function-ref name="stop" scoped="" ref="0x7f15823a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15823a7860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f15823a7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15823a7be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15823a7d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15823a6020"/>
        <function-ref name="cancel" scoped="" ref="0x7f15823a61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15823a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f15823a6690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f15823a6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15823a6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15823adce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15823adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15823aa0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15823aa230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15823aa3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15823aa550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15823aa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f15823a9080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f15823a9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15823a9400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f15823a9590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15823a9720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f15823a98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f15823a8800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f15823a8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15823a8b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15823a8d10"/>
        <function-ref name="isState" scoped="" ref="0x7f15823a7020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15823a71b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f15823a7340"/>
        <function-ref name="forceState" scoped="" ref="0x7f15823a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f15823a6d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f15823a6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15823a5180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15823a5310"/>
        <function-ref name="start" scoped="" ref="0x7f15823a54a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15823a5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15823aa980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15823aa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15823aad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f15823a22d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f15823a22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f15823a2650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f15823a27e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15823a2970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f15823a2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f15823a4580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f15823a4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15823a4900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f15823a4a90"/>
        <function-ref name="isState" scoped="" ref="0x7f15823a4c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f15823a4db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f15823a3020"/>
        <function-ref name="forceState" scoped="" ref="0x7f15823a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1582395d70" loc="47:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1582395d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582394180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582394310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15823944a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582394630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15823947c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15823962a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15823962a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582396620"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15823967b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582396940"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582396ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582396c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1582395020" loc="43:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1582395020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f15823953a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1582395530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f15823956c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1582395850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f15823959e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1582390dd0" loc="47:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1582390dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158238f180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158238f310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158238f4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f158238f630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158238f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f15823842a0" loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f15823842a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582384620"/>
        <function-ref name="runTask" scoped="" ref="0x7f15823847b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f158238c650" loc="50:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f158238c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582389c40"/>
        <function-ref name="fired" scoped="" ref="0x7f158238a1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582389020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f158238aae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582388590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582388110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158238a660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f158238b390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582389630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f158238b860"/>
        <function-ref name="stop" scoped="" ref="0x7f158238bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f15823933a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f15823933a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582393720"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15823938b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582393a40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582393bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582393d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f158238faf0" loc="48:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f158238faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f158238fe70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f158238d030"/>
        <function-ref name="isState" scoped="" ref="0x7f158238d1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f158238d350"/>
        <function-ref name="requestState" scoped="" ref="0x7f158238d4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f158238d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1582388a30" loc="51:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1582388a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1582388db0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1582386020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f15823861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f158238d9a0" loc="49:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f158238d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f158238dd20"/>
        <function-ref name="noAck" scoped="" ref="0x7f158238c020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f158238c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1582390080" loc="43:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1582390080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1582390400"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1582390590"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1582390720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f15823908b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1582390a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1582359350" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1582359350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f15823596d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1582359860"/>
        <function-ref name="isState" scoped="" ref="0x7f15823599f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1582359b80"/>
        <function-ref name="requestState" scoped="" ref="0x7f1582359d10"/>
        <function-ref name="forceState" scoped="" ref="0x7f1582358020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1582357750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1582357750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582354c40"/>
        <function-ref name="fired" scoped="" ref="0x7f15823551e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582354020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582355ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1582352590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582352110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582355660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582356390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582354630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582356860"/>
        <function-ref name="stop" scoped="" ref="0x7f1582356d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1582750dd0" loc="11:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1582750dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1582340180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1582340310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f15823404a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1582340630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f158233f670" loc="13:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f158233f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f158233f9f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f158233fb80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f158233fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f15823408f0" loc="12:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f15823408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1582340c70"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1582340e00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f158233f020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f158233f1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f158233f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f158233b020" loc="12:../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f158233b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f158233b3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f158233b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1582335c70" loc="10:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1582335c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1582334020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f15823341b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1582334340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f15823344d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f1582334660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f15823347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f1582335450" loc="9:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f1582335450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f15823357d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f1582335960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f158233ce70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f158233ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f158232c390"/>
        <function-ref name="fired" scoped="" ref="0x7f158232f970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f158232d720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f158232d2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f158232cc90"/>
        <function-ref name="gett0" scoped="" ref="0x7f158232c810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f158232fdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1582339a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f158232dd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f158232f020"/>
        <function-ref name="stop" scoped="" ref="0x7f158232f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f1582325a40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f1582325a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15822ffb90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15822ff020"/>
        <function-ref name="empty" scoped="" ref="0x7f1582300670"/>
        <function-ref name="put" scoped="" ref="0x7f15822ff4a0"/>
        <function-ref name="size" scoped="" ref="0x7f1582300af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f1581328210" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f1581328210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1581325330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1581327780"/>
        <function-ref name="empty" scoped="" ref="0x7f1581328e00"/>
        <function-ref name="put" scoped="" ref="0x7f1581327c00"/>
        <function-ref name="size" scoped="" ref="0x7f1581327300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581329af0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581329af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581329e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f15822fb020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f15822fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15822f8110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15822fa550"/>
        <function-ref name="empty" scoped="" ref="0x7f15822fbc10"/>
        <function-ref name="put" scoped="" ref="0x7f15822fa9d0"/>
        <function-ref name="size" scoped="" ref="0x7f15822fa0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f1581316d80" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f1581316d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1581313e70"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1581313300"/>
        <function-ref name="empty" scoped="" ref="0x7f15813149a0"/>
        <function-ref name="put" scoped="" ref="0x7f1581313780"/>
        <function-ref name="size" scoped="" ref="0x7f1581314e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581316690" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581316690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581316a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f15822f5850" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f15822f5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f15836ffd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f15822d86e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f15822d7490"/>
        <function-ref name="element" scoped="" ref="0x7f15822d7b00"/>
        <function-ref name="full" scoped="" ref="0x7f15822d9900"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15822d8260"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15822d8d90"/>
        <function-ref name="empty" scoped="" ref="0x7f15822d9480"/>
        <function-ref name="size" scoped="" ref="0x7f15822d9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f15822d3020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f15822d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15822d0110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15822d2550"/>
        <function-ref name="empty" scoped="" ref="0x7f15822d3c10"/>
        <function-ref name="put" scoped="" ref="0x7f15822d29d0"/>
        <function-ref name="size" scoped="" ref="0x7f15822d20d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f15812f7020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f15812f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15812eb110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15812f6550"/>
        <function-ref name="empty" scoped="" ref="0x7f15812f7c10"/>
        <function-ref name="put" scoped="" ref="0x7f15812f69d0"/>
        <function-ref name="size" scoped="" ref="0x7f15812f60d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15812f8900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15812f8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15812f8c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15822c7440" loc="11:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15822c7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15822c77c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15822c7950"/>
        <function-ref name="start" scoped="" ref="0x7f15822c7ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f15822c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7f15822c31a0" loc="16:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7f15822c31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f15822c3520"/>
        <function-ref name="stopDone" scoped="" ref="0x7f15822c36b0"/>
        <function-ref name="start" scoped="" ref="0x7f15822c3840"/>
        <function-ref name="stop" scoped="" ref="0x7f15822c39d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7f15822c3dd0" loc="17:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f15822c3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15822c2180"/>
        <function-ref name="stop" scoped="" ref="0x7f15822c2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f15822c25c0" loc="18:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f15822c25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f15822c2940"/>
        <function-ref name="changed" scoped="" ref="0x7f15822c2ad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f15822c2c60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f15822c2df0"/>
        <function-ref name="setSource" scoped="" ref="0x7f15822c1020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f15822c11b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f15822c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f15822c48c0" loc="15:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f15822c48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15822c4c40"/>
        <function-ref name="stop" scoped="" ref="0x7f15822c4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f15822c4020" loc="14:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f15822c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f15822c43a0"/>
        <function-ref name="stop" scoped="" ref="0x7f15822c4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7f15822a7020" loc="15:../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f15822a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f15822a73a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f15822a7530"/>
        <function-ref name="findTLV" scoped="" ref="0x7f15822a76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f158228ea40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f158228ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f1583c9b110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158228cb90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f158228c020"/>
        <function-ref name="empty" scoped="" ref="0x7f158228d670"/>
        <function-ref name="put" scoped="" ref="0x7f158228c4a0"/>
        <function-ref name="size" scoped="" ref="0x7f158228daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f15812dcd10" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f15812dcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f1583c9b110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15812dae10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15812da2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f15812db940"/>
        <function-ref name="put" scoped="" ref="0x7f15812da720"/>
        <function-ref name="size" scoped="" ref="0x7f15812dbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15812dc620" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15812dc620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15812dc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1582289970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1582289970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583ea8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1583cce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1582286e80"/>
        <function-ref name="fired" scoped="" ref="0x7f15822874a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1582286260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1582287da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f15822847a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1582284320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1582287920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f15822885a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1582286870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1582288a70"/>
        <function-ref name="stop" scoped="" ref="0x7f1582287020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f1582279ae0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1582279ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1582276990"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1582275740"/>
        <function-ref name="element" scoped="" ref="0x7f1582275db0"/>
        <function-ref name="full" scoped="" ref="0x7f1582278bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1582276510"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1582275090"/>
        <function-ref name="empty" scoped="" ref="0x7f1582278750"/>
        <function-ref name="size" scoped="" ref="0x7f1582276090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f15822714a0" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f15822714a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158226f570"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15822709d0"/>
        <function-ref name="empty" scoped="" ref="0x7f15822700d0"/>
        <function-ref name="put" scoped="" ref="0x7f1582270e50"/>
        <function-ref name="size" scoped="" ref="0x7f1582270550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f15812ba020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f15812ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f1583be8020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f1583be84f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f15812b7110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f15812b9550"/>
        <function-ref name="empty" scoped="" ref="0x7f15812bac10"/>
        <function-ref name="put" scoped="" ref="0x7f15812b99d0"/>
        <function-ref name="size" scoped="" ref="0x7f15812b90d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15812bb900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15812bb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15812bbc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f1582266540" loc="8:../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f1582266540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f15822668c0"/>
        <function-ref name="OCP" scoped="" ref="0x7f1582266a50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f1582266be0"/>
        <function-ref name="getRank" scoped="" ref="0x7f1582266d70"/>
        <function-ref name="resetRank" scoped="" ref="0x7f1582263020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f15822631b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f1582263340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f15822634d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f1582263660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f15822637f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7f158225c260" loc="43:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7f158225c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f158225c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f158225c9b0" loc="44:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f158225c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f158225cd30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f158225b020"/>
        <function-ref name="startDAO" scoped="" ref="0x7f158225b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f1582262360" loc="40:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f1582262360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f15822626e0"/>
        <function-ref name="OCP" scoped="" ref="0x7f1582262870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f1582262a00"/>
        <function-ref name="getRank" scoped="" ref="0x7f1582262b90"/>
        <function-ref name="resetRank" scoped="" ref="0x7f1582262d20"/>
        <function-ref name="getOCP" scoped="" ref="0x7f158225f020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f158225f1b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f158225f340"/>
        <function-ref name="getParent" scoped="" ref="0x7f158225f4d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f158225f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f158225e8b0" loc="42:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f158225e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f158225ec30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f158225dca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f158225de30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f158225d1b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f158225d340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f158225d4d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f158225d660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f158225d7f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f158225d020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f158225d980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f158225db10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f158225edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f158225f990" loc="41:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f158225f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f158225fd10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f158225e020"/>
        <function-ref name="delRoute" scoped="" ref="0x7f158225e1b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f158225e340"/>
        <function-ref name="addRoute" scoped="" ref="0x7f158225e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f158225b540" loc="45:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f158225b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f158225b8c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7f158225ba50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f158225bbe0"/>
        <function-ref name="hasParent" scoped="" ref="0x7f158225bd70"/>
        <function-ref name="validInstance" scoped="" ref="0x7f158225a020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f158225a1b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f158225a340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f158225a4d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f158225a660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f158225a7f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f158225a980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f158225ab10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f158225aca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f1582259020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1582220840" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1582220840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582220be0"/>
        <function-ref name="recv" scoped="" ref="0x7f1582220d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f15812a6ae0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f15812a6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15812a6e60"/>
        <function-ref name="recv" scoped="" ref="0x7f15812a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f15812a62e0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f15812a62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15812a6680"/>
        <function-ref name="recv" scoped="" ref="0x7f15812a6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15822095c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15822095c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582209940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582209ad0"/>
        <function-ref name="start" scoped="" ref="0x7f1582209c60"/>
        <function-ref name="stop" scoped="" ref="0x7f1582209df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1582205600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1582205600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582205980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582205b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582205ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582205e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582204020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1582204e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1582204e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f15822031c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1582203350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15822034e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582203670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1582203800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1582204800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1582204800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582204b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15821f1300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15821f1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15821f1680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15821f1810"/>
        <function-ref name="led1On" scoped="" ref="0x7f15821f19a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15821f1b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15821f1cc0"/>
        <function-ref name="get" scoped="" ref="0x7f15821f1e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15821ef020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15821ef660"/>
        <function-ref name="set" scoped="" ref="0x7f15821ef1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f15821ef340"/>
        <function-ref name="led2On" scoped="" ref="0x7f15821ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1582201800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582201800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1582201b80"/>
        <function-ref name="noAck" scoped="" ref="0x7f1582201d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15821f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1582202020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1582202020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f15822023a0"/>
        <function-ref name="source" scoped="" ref="0x7f1582202530"/>
        <function-ref name="address" scoped="" ref="0x7f15822026c0"/>
        <function-ref name="destination" scoped="" ref="0x7f1582202850"/>
        <function-ref name="setSource" scoped="" ref="0x7f15822029e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1582202b70"/>
        <function-ref name="type" scoped="" ref="0x7f1582202d00"/>
        <function-ref name="setType" scoped="" ref="0x7f1582201020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15822011b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1582201340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f15822014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f15821934a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f15821934a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582193820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15821939b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582193b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582193cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582193e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1582191120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1582191120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f15821914a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15821ed300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15821ed300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15821ed6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15821ed830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15821ed9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f15821edb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f15821edce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1582195d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1582195d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1582194180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1582194310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15821944a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1582194630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f15821947c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15821960d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15821960d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582196470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1582194a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1582194a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1582194d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f1582193020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f15821931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f15821966c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f15821966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1582196a40"/>
        <function-ref name="source" scoped="" ref="0x7f1582196bd0"/>
        <function-ref name="address" scoped="" ref="0x7f1582196d60"/>
        <function-ref name="destination" scoped="" ref="0x7f1582195020"/>
        <function-ref name="setSource" scoped="" ref="0x7f15821951b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1582195340"/>
        <function-ref name="type" scoped="" ref="0x7f15821954d0"/>
        <function-ref name="setType" scoped="" ref="0x7f1582195660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f15821957f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1582195980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1582195b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f158218fb90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f158218fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f158218c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f158218c1b0"/>
        <function-ref name="start" scoped="" ref="0x7f158218c340"/>
        <function-ref name="stop" scoped="" ref="0x7f158218c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f158218b790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f158218b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1583ebd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158218bb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f158218bca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f158218be30"/>
        <function-ref name="cancel" scoped="" ref="0x7f158218a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158218a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f158218f540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f158218f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f158218f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f158218cc60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f158218cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1583ebd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f158218b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15821892b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15821892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1582189630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15821897c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1582189950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582189ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1582189c70"/>
        <function-ref name="get" scoped="" ref="0x7f1582189e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582188020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1582188660"/>
        <function-ref name="set" scoped="" ref="0x7f15821881b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1582188340"/>
        <function-ref name="led2On" scoped="" ref="0x7f15821884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f1582184970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f1582184970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1583ebd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1582184cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f1582184e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1582189030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f15821817c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f15821817c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1582181b40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1582181cd0"/>
        <function-ref name="start" scoped="" ref="0x7f1582181e60"/>
        <function-ref name="stop" scoped="" ref="0x7f1582180020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f158211b6e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f158211b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f158211ba60"/>
        <function-ref name="runTask" scoped="" ref="0x7f158211bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1582170860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1582170860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582170be0"/>
        <function-ref name="stop" scoped="" ref="0x7f1582170d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f15821524f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f15821524f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582152870"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582152a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1582181170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1582181170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15821814f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f158216b480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f158216b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f158216b800"/>
        <function-ref name="flush" scoped="" ref="0x7f158216b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f158211ec70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f158211ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f158211d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f158211d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f1582179020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f1582179020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f15821793a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f1582179530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f15821796c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f1582179850"/>
        <function-ref name="putData" scoped="" ref="0x7f15821799e0"/>
        <function-ref name="putDone" scoped="" ref="0x7f1582179b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f1582179d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1582176020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582176020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15821763a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582176530"/>
        <function-ref name="led1On" scoped="" ref="0x7f15821766c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582176850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15821769e0"/>
        <function-ref name="get" scoped="" ref="0x7f1582176b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582176d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15821704d0"/>
        <function-ref name="set" scoped="" ref="0x7f1582170020"/>
        <function-ref name="led0On" scoped="" ref="0x7f15821701b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1582170340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f1582117a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f1582117a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1582117d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1582116020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f158217a720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f158217a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f158217aaa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f158217ac30"/>
        <function-ref name="startSend" scoped="" ref="0x7f158217adc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f158217f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f1582177c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f1582177c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f158217e020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f158217e1b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f158217e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f158204c020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f158204c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f158204c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f158204c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1582052de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1582052de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1583ebd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15820511c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1582051350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f15820514e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1582051670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582051800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f158204c800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f158204c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f158204cb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f158204cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f15820526c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f15820526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1583ebd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1582052a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f1582051c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f1582051c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f1583ebd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f158204f020"/>
        <function-ref name="offset" scoped="" ref="0x7f158204f1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f158204f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f158204e920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f158204e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f158204eca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f158204ee30"/>
        <function-ref name="led1On" scoped="" ref="0x7f158204d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f158204d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f158204d340"/>
        <function-ref name="get" scoped="" ref="0x7f158204d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f158204d660"/>
        <function-ref name="led2On" scoped="" ref="0x7f158204dca0"/>
        <function-ref name="set" scoped="" ref="0x7f158204d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f158204d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f158204db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f158204fe80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f158204fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f158204e220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f158204e3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f158204e540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f158204e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f158204f590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f158204f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f158204f910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f158204faa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f158204fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f158203cd20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f158203cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15820450e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1582045270"/>
        <function-ref name="receive" scoped="" ref="0x7f1582045400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1582045590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1582045720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f15820458b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1582045a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f158204ae00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f158204ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f15820471c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f1582047350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f15820474e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f1582047670"/>
        <function-ref name="putData" scoped="" ref="0x7f1582047800"/>
        <function-ref name="putDone" scoped="" ref="0x7f1582047990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f1582047b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1582045cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1582045cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15820440a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1582044230"/>
        <function-ref name="led1On" scoped="" ref="0x7f15820443c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1582044550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15820446e0"/>
        <function-ref name="get" scoped="" ref="0x7f1582044870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1582044a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f158203a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1582044b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f1582044d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f158203a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f158201e020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f158201e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158201e3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f158201e530"/>
        <function-ref name="receive" scoped="" ref="0x7f158201e6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f158201e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1582020890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1582020890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1582020c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1582020da0"/>
        <function-ref name="receive" scoped="" ref="0x7f158201f020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f158201f1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f158201f340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f158201f4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158201f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1582020080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1582020080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1582020400"/>
        <function-ref name="stop" scoped="" ref="0x7f1582020590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1581e8fc70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581e8fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1581e8e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581e8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1581e8d440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1581e8d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581e8d7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1581e8d950"/>
        <function-ref name="receive" scoped="" ref="0x7f1581e8dae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1581e8dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1581e8c020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1581e8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1581e8e440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1581e8e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581e8e7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1581e8e950"/>
        <function-ref name="receive" scoped="" ref="0x7f1581e8eae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1581e8ec70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1581e8ee00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1581e8d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581e8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1581e8f020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1581e8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581e8f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581e8f530"/>
        <function-ref name="request" scoped="" ref="0x7f1581e8f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1581e8f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581e8f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f158200da30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f158200da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f158200ddb0"/>
        <function-ref name="configure" scoped="" ref="0x7f158200c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1582009020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1582009020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15820093a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1582009530"/>
        <function-ref name="receive" scoped="" ref="0x7f15820096c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1582009850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1582007450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1582007450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f15820077d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f158200c860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f158200c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f158200cbe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f158200cd70"/>
        <function-ref name="receive" scoped="" ref="0x7f158200b020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f158200b1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f158200b340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f158200b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f158200b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f15820081d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f15820081d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1582008550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15820086e0"/>
        <function-ref name="request" scoped="" ref="0x7f1582008870"/>
        <function-ref name="granted" scoped="" ref="0x7f1582008a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1582008b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f158200e7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f158200e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158200eb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158200ecb0"/>
        <function-ref name="request" scoped="" ref="0x7f158200ee40"/>
        <function-ref name="granted" scoped="" ref="0x7f158200d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f158200d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f15820061d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f15820061d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1582006550"/>
        <function-ref name="txDone" scoped="" ref="0x7f15820066e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1581f9adc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581f9adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1581f99180"/>
        <function-ref name="configure" scoped="" ref="0x7f1581f99310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f1581f98890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f1581f98890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581f98c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f1581f98dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f1581f97020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f1581f971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f1581f963e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581f963e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1581f96780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1581f96a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1581f96a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1581f96dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1581f95020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1581f951b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1581f95340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1581f954d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1581f95660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1581f957f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1581f95980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1581f95b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1581f95ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1581f95e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1581f94020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1581f941b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1581f94440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1581f945d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1581f94760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1581f948f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1581f94a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1581f94c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1581f94da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1581f93020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1581f931b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1581f93340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1581f934d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1581f93660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1581f939f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1581f93b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1581f93d10"/>
        <function-ref name="tx" scoped="" ref="0x7f1581f92020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1581f921b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1581f92340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1581f924d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1581f92660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1581f927f0"/>
        <function-ref name="rx" scoped="" ref="0x7f1581f92980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1581f92b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1581f92ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1581f92e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1581f91020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1581f911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f1581f996d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f1581f996d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581f99a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f1581f99c00"/>
        <function-ref name="receive" scoped="" ref="0x7f1581f99d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f1581f98020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f1581f981b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f1581f98340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581f984d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1581f90020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1581f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1581f90e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1581f8f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1581f8f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1581f8fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1581f975b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1581f975b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581f97950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581f97ae0"/>
        <function-ref name="request" scoped="" ref="0x7f1581f97c70"/>
        <function-ref name="granted" scoped="" ref="0x7f1581f97e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1581f9a020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1581f9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581f9a3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581f9a550"/>
        <function-ref name="request" scoped="" ref="0x7f1581f9a6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1581f9a870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581f9aa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1581f915b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1581f915b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1581f91950"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581f91ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1581f8d120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1581f8d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1581f8d4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1581f8d630"/>
        <function-ref name="led1On" scoped="" ref="0x7f1581f8d7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1581f8d950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1581f8dae0"/>
        <function-ref name="get" scoped="" ref="0x7f1581f8dc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1581f8de00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1581f8c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1581f8c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1581f8c020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1581f8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1581f7e860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1581f7e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1581f7ebe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581f7ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1581f81500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581f81500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1581f81880"/>
        <function-ref name="stop" scoped="" ref="0x7f1581f81a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1581f81d30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1581f81d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1581f840e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1581f84270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1581f84400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1581f84590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1581f84720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1581f848b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1581f84a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1581f84bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1581f84d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1581f83020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1581f831b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1581f83340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1581f834d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1581f83760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1581f838f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1581f83a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1581f83c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f1581f83da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1581f80020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1581f801b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1581f80340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1581f804d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1581f80660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1581f807f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1581f80980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1581f80d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1581f7f020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1581f7f1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f1581f7f340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1581f7f4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1581f7f660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1581f7f7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1581f7f980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1581f7fb10"/>
        <function-ref name="rx" scoped="" ref="0x7f1581f7fca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1581f7fe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1581f7e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1581f7e1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1581f7e340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1581f7e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1581f71990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1581f71990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1581f71d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1581f70020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1581f701b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1581f70340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1581f704d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1581f70660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1581f707f0"/>
        <function-ref name="get" scoped="" ref="0x7f1581f70980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1581f70b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1581f70ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1581f70e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1581f6f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1581f6f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1581f6f440"/>
        <function-ref name="clr" scoped="" ref="0x7f1581f6f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1581f75130" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1581f75130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1581f754b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581f75640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1581f6f990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1581f6f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1581f6fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1581f6e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1581f6e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1581f6e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1581f6e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1581f6e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1581f6e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1581f6e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1581f6eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1581f6eca0"/>
        <function-ref name="set" scoped="" ref="0x7f1581f6ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1581f6d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1581f6d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1581f6d440"/>
        <function-ref name="clr" scoped="" ref="0x7f1581f6d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1581f6d990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1581f6d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1581f6dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1581f6c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1581f6c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1581f6c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1581f6c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1581f6c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1581f6c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1581f6c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1581f6cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1581f6cca0"/>
        <function-ref name="set" scoped="" ref="0x7f1581f6ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1581f6b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1581f6b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1581f6b440"/>
        <function-ref name="clr" scoped="" ref="0x7f1581f6b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1581f7a550" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1581f7a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1581f7a8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1581f7aa60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1581f7abf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1581f7ad80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1581f79020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1581f791b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1581f79340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1581f794d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1581f79660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1581f797f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1581f79980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1581f79b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1581f79ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1581f78020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1581f781b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1581f78340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1581f784d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1581f78660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1581f787f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1581f78980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1581f78b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1581f78ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1581f78e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1581f77020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1581f771b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1581f77540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1581f776d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1581f77860"/>
        <function-ref name="tx" scoped="" ref="0x7f1581f779f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1581f77b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1581f77d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1581f76020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1581f761b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1581f76340"/>
        <function-ref name="rx" scoped="" ref="0x7f1581f764d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1581f76660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1581f767f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1581f76980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1581f76b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1581f76ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1581f7dbc0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581f7dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1581f7a020"/>
        <function-ref name="stop" scoped="" ref="0x7f1581f7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1581f73990" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1581f73990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1581f73d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1581f72020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1581f721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1581f72340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1581f724d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1581f72660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1581f727f0"/>
        <function-ref name="get" scoped="" ref="0x7f1581f72980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1581f72b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1581f72ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1581f72e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1581f71020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1581f711b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1581f71440"/>
        <function-ref name="clr" scoped="" ref="0x7f1581f715d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1581f75a00" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1581f75a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1581f75d80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1581f74020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1581f741b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1581f74340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1581f744d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1581f74660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1581f747f0"/>
        <function-ref name="get" scoped="" ref="0x7f1581f74980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1581f74b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1581f74ca0"/>
        <function-ref name="set" scoped="" ref="0x7f1581f74e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1581f73020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1581f731b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1581f73440"/>
        <function-ref name="clr" scoped="" ref="0x7f1581f735d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1581eed110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1581eed110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1583cce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1583cce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1581eec020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1581eec9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1581eec4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1581eece60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15812295d0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15812295d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1581229950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581229ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15812237c0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15812237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1581223b40"/>
        <function-ref name="configure" scoped="" ref="0x7f1581223cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1581223020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1581223020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f15812233a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581223530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f158122a880" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f158122a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f158122ac00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f158122ad90"/>
        <function-ref name="request" scoped="" ref="0x7f1581229020"/>
        <function-ref name="granted" scoped="" ref="0x7f15812291b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581229340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f15812285a0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f15812285a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1581228920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1581228ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1581228c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1581228dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1581227020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f15812271b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1581227340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f15812274d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1581227660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f15812277f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1581227980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1581227b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1581227ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1581226020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f15812261b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1581226340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f15812264d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1581226660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f15812267f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1581226980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1581226b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1581226ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1581226e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1581225020"/>
        <function-ref name="getMode" scoped="" ref="0x7f15812251b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1581225540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f15812256d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1581225860"/>
        <function-ref name="tx" scoped="" ref="0x7f15812259f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1581225b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1581225d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1581224020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f15812241b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1581224340"/>
        <function-ref name="rx" scoped="" ref="0x7f15812244d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1581224660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f15812247f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1581224980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1581224b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1581224ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1581229d70" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581229d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1581228180"/>
        <function-ref name="userId" scoped="" ref="0x7f1581228310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1581ed1510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581ed1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1581ed1890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581ed1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1581ed0af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581ed0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1581ed0e70"/>
        <function-ref name="configure" scoped="" ref="0x7f1581ecf030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1581ed3510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1581ed3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1581ed3890"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581ed3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1581ed2280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1581ed2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581ed2600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581ed2790"/>
        <function-ref name="request" scoped="" ref="0x7f1581ed2920"/>
        <function-ref name="granted" scoped="" ref="0x7f1581ed2ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581ed2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1581ed1d20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ed1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1581ed00e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1581ed0270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1581ecb120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ecb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1581ecb4a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1581ecb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1581ece230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1581ece230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1581ece5d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581ece760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1581eccad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1581eccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1581ecce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1581eceb60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1581eceb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1581ecc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1581ecc2f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1581ecc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1581ecc670"/>
        <function-ref name="txDone" scoped="" ref="0x7f1581ecc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1581ec8bd0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1581ec8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1581ec7020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581ec71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1581ec6930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1581ec6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1581ec6cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1581ec6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1581ec7400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581ec7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581ec7780"/>
        <function-ref name="requested" scoped="" ref="0x7f1581ec7910"/>
        <function-ref name="granted" scoped="" ref="0x7f1581ec7aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581ec7c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581ec7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1581ec9e30" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1581ec9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581ec8210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581ec83a0"/>
        <function-ref name="request" scoped="" ref="0x7f1581ec8530"/>
        <function-ref name="granted" scoped="" ref="0x7f1581ec86c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581ec8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1581ec6060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581ec6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1581ec63e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1581ec6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f15811bfca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f15811bfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f15811be0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f15811be330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f15811be330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15811be6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15811be840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15811be9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15811beb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f15811ba3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f15811ba3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f15811ba740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15811ba8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f15811b8210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f15811b8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f15811b85b0"/>
        <function-ref name="configure" scoped="" ref="0x7f15811b8740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f15811b89d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f15811b89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f15811b8d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f15811b7020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f15811b71b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f15811b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f15811bab20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15811bab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15811b9020"/>
        <function-ref name="requested" scoped="" ref="0x7f15811b91b0"/>
        <function-ref name="granted" scoped="" ref="0x7f15811b9340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15811b94d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f15811b9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f15811b7590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f15811b7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f15811b7910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f15811b7aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f15811b7c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f15811b7dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f15811b6020"/>
        <function-ref name="get" scoped="" ref="0x7f15811b61b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f15811b6340"/>
        <function-ref name="led0On" scoped="" ref="0x7f15811b6980"/>
        <function-ref name="set" scoped="" ref="0x7f15811b6660"/>
        <function-ref name="led2On" scoped="" ref="0x7f15811b64d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f15811b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f15811bb540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f15811bb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f15811bb8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f15811bba70"/>
        <function-ref name="request" scoped="" ref="0x7f15811bbc00"/>
        <function-ref name="granted" scoped="" ref="0x7f15811bbd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f15811ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f15811b98b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f15811b98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15811b9c30"/>
        <function-ref name="userId" scoped="" ref="0x7f15811b9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f15811b6c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f15811b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f15811b5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f15811b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1581eab400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1581eab400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1581eab780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1581eab9d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1581eab9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581eabd50"/>
        <function-ref name="requested" scoped="" ref="0x7f1581eaa020"/>
        <function-ref name="granted" scoped="" ref="0x7f1581eaa1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581eaa340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581eaa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1581ec0b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1581ec0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1581eab020"/>
        <function-ref name="stop" scoped="" ref="0x7f1581eab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1581eaa720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581eaa720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1581eaaaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f1581eaac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1581185b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1581185b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1581185e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f15811840f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f15811840f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581184470"/>
        <function-ref name="requested" scoped="" ref="0x7f1581184600"/>
        <function-ref name="granted" scoped="" ref="0x7f1581184790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581184920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1581184ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f15811853a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f15811853a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1581185720"/>
        <function-ref name="stop" scoped="" ref="0x7f15811858b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1581184d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1581184d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f15811830a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1581183230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f1581e888e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f1581e888e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1581e88c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1581e86020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1581e86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1581e863a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1581e86530"/>
        <function-ref name="request" scoped="" ref="0x7f1581e866c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1581e86850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1581e869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1581e88080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1581e88080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1581e88400"/>
        <function-ref name="stop" scoped="" ref="0x7f1581e88590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f1581e758c0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f1581e758c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f1581e75c40"/>
        <function-ref name="offset" scoped="" ref="0x7f1581e75dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f1581e72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f1581e61020" loc="9:../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f1581e61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f1581e613a0"/>
        <function-ref name="bind" scoped="" ref="0x7f1581e61530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f1581e616c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f1581e61850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f1581e5c7f0" loc="13:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f1581e5c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f1582a52700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f1582a52bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581e5a990"/>
        <function-ref name="get" scoped="" ref="0x7f1581e5a480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f1581e5fa20" loc="12:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f1581e5fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f1581e5fda0"/>
        <function-ref name="bind" scoped="" ref="0x7f1581e5c020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f1581e5c1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f1581e5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f1581e55850" loc="15:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f1581e55850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f1582a52700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f1582a52bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581e54990"/>
        <function-ref name="get" scoped="" ref="0x7f1581e54480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581e55020" loc="14:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581e55020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f158439fb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f158439fb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581e553a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1581e52600" loc="19:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1581e52600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1581e52980"/>
        <function-ref name="changed" scoped="" ref="0x7f1581e52b10"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1581e52ca0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1581e52e30"/>
        <function-ref name="setSource" scoped="" ref="0x7f1581e51020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1581e511b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1581e51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f1581e56020" loc="13:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f1581e56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f1581e563a0"/>
        <function-ref name="bind" scoped="" ref="0x7f1581e56530"/>
        <function-ref name="sendtov" scoped="" ref="0x7f1581e566c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f1581e56850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f1581e54e20" loc="18:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1581e54e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581e521c0"/>
        <function-ref name="recv" scoped="" ref="0x7f1581e52350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f1581e06c80" loc="44:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1581e06c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1581e050a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1581e07020" loc="41:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1581e07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1581e073a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f1581e07650" loc="42:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f1581e07650"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f1581e079d0"/>
        <function-ref name="changed" scoped="" ref="0x7f1581e07b60"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f1581e07cf0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f1581e07e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f1581e06030"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f1581e061c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f1581e06350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7f1581e06620" loc="43:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f1581e06620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f1581e069a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f1581e053a0" loc="45:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f1581e053a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f1581e041b0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f1581e058b0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f1581e05a40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f1581e05bd0"/>
        <function-ref name="matchContext" scoped="" ref="0x7f1581e05d60"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f1581e05720"/>
        <function-ref name="getContext" scoped="" ref="0x7f1581e04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f1581df8130" loc="44:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f1581df8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f1581df84b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f1581df8640"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f1581df87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1581e0a8f0" loc="43:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1581e0a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1581e0ac70"/>
        <function-ref name="stop" scoped="" ref="0x7f1581e0ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1581df5980" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1581df5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581df5d20"/>
        <function-ref name="recv" scoped="" ref="0x7f1581df4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f1581175500" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f1581175500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581175880"/>
        <function-ref name="recv" scoped="" ref="0x7f1581175a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f1581176ce0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f1581176ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15811750a0"/>
        <function-ref name="recv" scoped="" ref="0x7f1581175230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1581d78870" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1581d78870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581d78bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d78d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d77020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1581d771b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581d77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1581d77590" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1581d77590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581d77910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1581d77aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d77c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d77dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1581d76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1581d76270" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1581d76270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1581d765f0"/>
        <function-ref name="source" scoped="" ref="0x7f1581d76780"/>
        <function-ref name="address" scoped="" ref="0x7f1581d76910"/>
        <function-ref name="destination" scoped="" ref="0x7f1581d76aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1581d76c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1581d76dc0"/>
        <function-ref name="type" scoped="" ref="0x7f1581d75020"/>
        <function-ref name="setType" scoped="" ref="0x7f1581d751b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1581d75340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1581d754d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1581d75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1581d758f0" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1581d758f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1581d75c70"/>
        <function-ref name="noAck" scoped="" ref="0x7f1581d75e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1581d74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f15811660c0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f15811660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581166440"/>
        <function-ref name="getPayload" scoped="" ref="0x7f15811665d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581166760"/>
        <function-ref name="cancel" scoped="" ref="0x7f15811668f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581166a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1581166d30" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1581166d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f15811650e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581165270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581165400"/>
        <function-ref name="cancel" scoped="" ref="0x7f1581165590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581165720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1581165970" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1581165970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1581165cf0"/>
        <function-ref name="source" scoped="" ref="0x7f1581165e80"/>
        <function-ref name="address" scoped="" ref="0x7f1581164030"/>
        <function-ref name="destination" scoped="" ref="0x7f15811641c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1581164350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f15811644e0"/>
        <function-ref name="type" scoped="" ref="0x7f1581164670"/>
        <function-ref name="setType" scoped="" ref="0x7f1581164800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1581164990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1581164b20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1581164cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1581dd2ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1581dd2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581dcf0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581dcf230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581dcf3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1581dcf550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581dcf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1581d85400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1581d85400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581d857a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d85930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d85ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1581d85c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581d85de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1581d86580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1581d86580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581d86920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d86ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d86c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f1581d86dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581d85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1581d82720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1581d82720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581d82aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1581d82c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d82dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d81020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1581d811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1581d81480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1581d81480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1581d81800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1581d81990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1581d81c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1581d81c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1581d80020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1581d801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1581d84060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1581d84060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1581d843e0"/>
        <function-ref name="source" scoped="" ref="0x7f1581d84570"/>
        <function-ref name="address" scoped="" ref="0x7f1581d84700"/>
        <function-ref name="destination" scoped="" ref="0x7f1581d84890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1581d84a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1581d84bb0"/>
        <function-ref name="type" scoped="" ref="0x7f1581d84d40"/>
        <function-ref name="setType" scoped="" ref="0x7f1581d82020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1581d821b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1581d82340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1581d824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f1581d70760" loc="43:../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1581d70760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1581d4f5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1581d4d020"/>
        <function-ref name="element" scoped="" ref="0x7f1581d4d4f0"/>
        <function-ref name="full" scoped="" ref="0x7f1581d50810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1581d4f170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1581d4fa70"/>
        <function-ref name="empty" scoped="" ref="0x7f1581d50390"/>
        <function-ref name="size" scoped="" ref="0x7f1581d50c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1581d46ca0" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1581d46ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f1581d45ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f1581d444a0"/>
        <function-ref name="element" scoped="" ref="0x7f1581d44970"/>
        <function-ref name="full" scoped="" ref="0x7f1581d48d40"/>
        <function-ref name="maxSize" scoped="" ref="0x7f1581d45660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1581d44020"/>
        <function-ref name="empty" scoped="" ref="0x7f1581d488c0"/>
        <function-ref name="size" scoped="" ref="0x7f1581d451e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1581d44df0" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1581d44df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1581d431c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d43350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d434e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1581d43670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1581d43800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1581d43a90" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1581d43a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1581d43e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1581d42020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1581d421b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1581d42340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1581d424d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f1581d3dd10" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f1581d3dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1581d3c0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1581d3c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581d4ccc0" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581d4ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581d490a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1581d42750" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1581d42750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1581d42ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1581d42c60"/>
        <function-ref name="led1On" scoped="" ref="0x7f1581d42df0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1581d41020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1581d411b0"/>
        <function-ref name="get" scoped="" ref="0x7f1581d41340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1581d414d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1581d41b10"/>
        <function-ref name="set" scoped="" ref="0x7f1581d41660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1581d417f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1581d41980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f1581d46400" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1581d46400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1581d46780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1581d232a0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1581d232a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1581d23620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1581d225a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1581d225a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1581d22920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f1581d22c00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f1581d22c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f1581d1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1581d19b90" loc="39:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1581d19b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1581d16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f1581d163c0" loc="40:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f1581d163c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1581d16740"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1581d168d0"/>
        <function-ref name="start" scoped="" ref="0x7f1581d16a60"/>
        <function-ref name="stop" scoped="" ref="0x7f1581d16bf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1583ea3270" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1583eaad70" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1583e76420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1583e79700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1583e77ce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1583e79020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f1583e79e70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f1583e7a0e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1583e7a7c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1583e775c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f158401e020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f15842e3c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1583e24020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1583e26cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1583e28390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1583e6fec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1583e6e940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1583e24890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1583e237b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1583e26560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1583e23020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1583e28b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1583e27350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1583e27da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1583e6fec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1583e6e940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1583e27b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1583e6fec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1583e6e940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1583e170e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1583e14730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1583e144b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1583e132e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1583e13060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1583e16ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1583e163e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1583e17a90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1583e17810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1583e1e3e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1583e1ed60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1583e1eae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1583e1d790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1583e1d510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1583e1b2a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1583e1b020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1583e1b990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1583e2e810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1583e2c2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1583e2c020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1583e2d020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1583e34aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1583e2d760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1583e319b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1583e2e120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1583e31270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1583e300e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1583e309f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1583e30770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1583e2ccb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1583e2ca30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1583ded1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f1583f41a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f1583f3e1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1583f412b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f158415a810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f158439d020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f158439c020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f158439d790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1584391270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1584391ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f1583c4b750" loc="43:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f1583c58930" loc="41:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f1583c4b070" loc="42:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1583c46020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1583c47c50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1583c44520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1583c442a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1583c47270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1583c46870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1583bcb0b0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583c1adf0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1583bca2a0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bca020" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1583bc5620" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bc5020" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583bc5350" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1583bc66d0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1583bc8730" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bc8170" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583bc84a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1583bd5a60" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1583bd5110" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1583bd5490" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583bd57c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1583bce620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bce020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583bce350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1583bcf6d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1583bd32a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bd3020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1583bd17f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bd1210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1583bd1560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7f1583bdb810" loc="47:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7f1583bdb120" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7f1583bdd980" loc="41:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1583be6820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f1583be6020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7f1583c412c0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f1583ca3140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1583c427f0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f1583ca3140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1583c42b40" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583c41020" loc="19:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7f1583c42020" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7f1583c4ac90" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7f1583c3f130" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f1583ca3140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1583c41a80" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f1583ca3140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7f1583c41e80" loc="22:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7f1583c3e6e0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f1583ca3140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f1583c3f8c0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f1583ca3140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1583c3fc10" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583c3e020" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f1583c3e430" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1583c49070" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1583c49880" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1583c6c4f0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1583c6c4f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1583c641f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1583c69aa0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1583c67860" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1583c67290" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1583c675d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1583c68aa0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1583c63270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1583c64980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1583c682b0" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1583c6b0b0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1583c6cde0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1583c65820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1583c65250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1583c65590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1583c6bb70" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1583c6b8f0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1583c69390" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1583bd9980" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583bd9020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1583bd9370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583bd96a0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1583c7d070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1583c7d820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1583c7c030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1583c7a020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1583c797d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1583c6f020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1583c7c7c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1583c6fb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1583c6f910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1583c7e8a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1583c7a800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1583c79020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7f1583c51ba0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7f1583c50510" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7f1583c50290" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7f1583c50c20" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7f1583c57030" loc="42:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f1583c54400" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f1583c54180" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7f1583c4f350" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f1583c55270" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7f1583c54be0" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7f1583c514a0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7f1583c53380" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7f1583c536f0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7f1583c53a80" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7f1583c53e00" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7f1583c511e0" loc="51:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7f1583c559c0" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f1583c57ad0" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f1583c57850" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7f1583c5a900" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1583b7a0e0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1583b7a810" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1583b7c270" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1583b79760" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1583b7c970" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1583b79020" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1583b7d440" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1583b7db10" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1583b4f7c0" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1583b4e020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1583b4ab10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1583b4a890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1583b51020" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1583b4d020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1583b49490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1583b4e760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1583b4f020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1583b4c770" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1583b517c0" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1583b52020" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1583b4d7a0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1583b4a020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1583b4c020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1583b52750" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1583901c40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1583901c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f15838fc5a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15838f75d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15838f75d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15838f7810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f15838f2390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15838f43b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f15838f39d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f15838f3400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f15838f3740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f15838f4b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f15838f2b80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f15838f6390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f15838f6110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15838f7810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f15838f6bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f15838864f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15838864f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1583886730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1583886730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1583885070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1583886730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1583884190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f15838858f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f15838848f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f158375d160" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f158375d160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f158375dca0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f158375d160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f158375da20" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f158375d160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7f158373b550" loc="102:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7f1583742350" loc="77:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7f158373a020" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7f158373bc60" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7f158373f780" loc="94:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f158373ddf0" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f158373db70" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7f15837434d0" loc="71:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f1583742da0" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f1583742b20" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f158373e5a0" loc="97:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7f158373fe60" loc="95:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7f158373d420" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7f158373ed50" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7f158373d190" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7f1583741800" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f1583741580" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7f158373f020" loc="90:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f158373abc0" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f158373a940" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7f1583743bd0" loc="74:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7f15837499d0" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1583749750" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f1583744020" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f1584a54a20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f1583746150" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7f1583746490" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15837467d0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f1584a54a20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f1583746be0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7f15836de360" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f15836dfc70" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f15836de0d0" loc="29:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7f15836df3e0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f15836eece0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f15836df150" loc="14:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7f15836dc360" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f15836decc0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7f15836dc0d0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7f15836f0b90" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15836f0910" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f15836e97b0" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7f15836e9530" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7f15836ecc10" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15836ec990" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7f15836ed660" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15836ed3e0" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f15836ec110" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f15836ede30" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7f15836eae70" loc="52:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7f15836ea6c0" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15836ea440" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7f15836cde80" loc="23:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7f15836cc600" loc="24:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7f15836cd6b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7f15836ce7b0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15836ceb00" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7f15836cd020" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7f15836cd400" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7f15836d2be0" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f1583cc8a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f1583cc7020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15836d2540" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7f15836d2950" loc="12:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f1583cc8a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f1583cc7020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7f15836d1ab0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15836d14b0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f15836d1820" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7f15836d0860" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7f15836d01f0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f15836d05d0" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7f15836ce020" loc="20:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f15836d6950" loc="27:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7f15836e8b30" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7f15836e88b0" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7f15836dac80" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7f15836daa00" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f15836d7390" loc="21:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7f15836d7a60" loc="22:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7f15836da270" loc="11:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7f15836d5350" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f15836d50d0" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7f15836d8420" loc="16:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f15836d8c10" loc="18:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7f15836d61f0" loc="24:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7f15836f72e0" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7f1583bdfec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7f1583bde520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7f15836f7020" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7f15836e12e0" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f1583c3ba30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f15836e1020" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7f15836e4c40" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f1583c3ba30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f15836e4610" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f15836e4970" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7f15836e5d40" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f1583c3b6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f15836e5ac0" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f1583c3b6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7f15836e3760" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f1583c3ba30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f1583c3b6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f15836e34a0" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f1583c3b6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7f15836e52d0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7f1583c3b6f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f15836e7490" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f15836e77f0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7f15836e7c30" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7f15836e5020" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7f15836f47e0" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7f15836f9d90" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7f15836f4180" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7f15836f4540" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7f15836f2a20" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15836f20d0" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f15836f2420" loc="22:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f15836f2780" loc="23:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7f15836f3970" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7f15836f3020" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f1583cc1770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f15836f3370" loc="18:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f15836f36d0" loc="19:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7f15834cf830" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15834cf5b0" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7f15834c8560" loc="5:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f1583cca210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f15834c6560" loc="10:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f15834c7e80" loc="8:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1583cca630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f15834c7c00" loc="8:../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1583cca630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f15834c7490" loc="7:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1583ccb670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7f1583ccaa70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f15834c8cf0" loc="6:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f1583cca630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f1583484a70" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1583ccb670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1583ccbdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f1583477640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f1583477060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f15834773b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f1583478020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f158347a690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f158347a020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f158347a400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f1583480a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f15834807c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f15834788a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f158347c540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f158347c2c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f158347fb90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f158347f910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f15834768a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f158347b6b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f158347b430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f1583476070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f158347e350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1583ccb670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1583ccbdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f158347eb40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f1583480020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f158347f1f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f158347cce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f15834515c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f15834515c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1583451e80" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1583448bd0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f15834515c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1583448620" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1583448940" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f15834515c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f158344e960" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f158344ca80" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f158344c2b0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f15834500e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f158344e120" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f158344d270" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f158344da90" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f1583450940" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1583455b60" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1583456b60" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f15834561f0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1583455390" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f15834545e0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1583426c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1583426990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1583425710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1583425490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f158342e560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f158342d4f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f158342ed40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1583430cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f15834306f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1583430a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f1583421e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f158342be80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f158342b020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f158342b890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f158342bbe0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1583428610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f158342a770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1583428020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1583428370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1583432c30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1583432470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f1583433ce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f1583433420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f1583311bb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f158330fd70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f158330f5c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f158330f340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f1583311350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f15832eda60" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f15832eb540" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f15832ed2d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f15832eccf0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f15832eca70" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f15832f0b00" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f15832ec2b0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f15831d9270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f15831d9ac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f15831d8350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f15831b2b60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15831b2580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15831b28d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f15831addd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15831ad490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15831ad7e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15831adb30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15831ae6b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15831ae0d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15831ae420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f15831b3730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1583efc020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15831b3150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15831b34a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f15831af2c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15831b0930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f15831b0c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f15831af020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1583192df0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1583192480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1583192810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1583192b50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f158318e3c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f158318f6a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f158318fa30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f158318fd70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f158318e110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f1583197c90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f1583197a10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f15831887f0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f158318bd40" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f1583188020" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f1583189c70" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f15831894d0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f1583195a80" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1583195800" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f158318b560" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f158318b2e0" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f15830ad6f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f15830ac070" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f15830a5710" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f15830e0020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f15830e0440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f15830aa2a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15830aa020" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f15830a8680" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15830a8400" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f15830aab10" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f15830a72a0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15830a7020" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f158309eca0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f158309e480" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f15830962a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1583096020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f1583097780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f1583073af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f158307e790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f158308b610" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830fc080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f15830fc8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f158308b390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830fc080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f15830fc8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f1583081870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f1583088a90" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830f7080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f15830f78c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1583088810" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830f7080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f15830f78c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1583078e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1583074480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f1583088070" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830fa020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f15830fa7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f15830872b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830f7080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f15830f78c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f1583083020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1583084d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1583084610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f1583078740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f1583089840" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830fa020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f15830fa7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f15830895c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830fa020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f15830fa7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1583086420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f15830765d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1583086e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1583086b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f1583082910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f15830810e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1583079840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f158307b790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f158307f7e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1583078020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f158307d020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f1583076cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1583083800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1583103dc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f15830fe680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f15830754c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f1583073350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f1583087c50" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f15830879d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f15830714d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1583071250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f158308bdf0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f15830fc080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f15830fc8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f158307f020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f158307d770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f1583079020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15830cee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f15830cd2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f158307acf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15830cee70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f15830cd2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f158307a2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f15830e0020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f15830e0440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f158307a020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f15830e0020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f15830e0440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f1583071d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1583075cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f1583082070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1583074be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f158307b020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f158307e020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f158300a600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f1582fe3070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f1582ff6b10" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f1582fead50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1582feaad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f1582ffe270" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f1582fe7350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f1582fefcf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f1582ff7c50" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f1582ff59c0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1582ff8c00" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f1582ff8980" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f1582ffa120" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f1582ff2790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f1582fe9c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f1582fe48f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f1582fea390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f1582fdfb60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f1582fda270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f1582ffc0e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f1582ff2020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f1582ff1910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f1582ff7500" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f1582fff020" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f1582fecba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1582fec920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f15830027d0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f1582fe8b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f1582fe37d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f1582fdc350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f1582fdba90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f1582fe5270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f1582fe1020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f1582fe9520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f1582fe0bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f1582ffc800" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f1582fed020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f1582fe0020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f1582fe4190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f1582fef520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f1582fef2a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f1582fdcaf0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f1582fec1f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f1582fe7ac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f1582fffaa0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15830bab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f15830b9020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1582fff820" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15830bab90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f15830b9020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f1582ff3870" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f1582ffb980" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1582ffb700" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f1582ff1120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1582ff2e70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f1582fdf3b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f1582ff8270" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f1582ffb020" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f1582fed9e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f1582fed760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f1582ffe9a0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f1582fe1740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f1582fe59e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f1582fe8420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f1582fee740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f1582fee4c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f1582ff3120" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f1582ff63b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f1582fdb2b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f1582ffaaa0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1582ffa820" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f1582fde350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f1582ff5270" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f1582fdeb10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1582f3d780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1582f3c020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1582f07900" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1582f06a20" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1582f07070" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1582f061f0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1582f05390" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1582efbb50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1582f03b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1582efb8d0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1582f03b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1582effb80" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1582efc6b0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1582f03b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1582efc430" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1582f03b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1582efb020" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1582f03b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1582ccdd70" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582ccdd70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1582cc70e0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582ccdd70"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f1582cc98a0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f1582cca6b0" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f1582cc8350" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582ccdd70"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f1582cc80d0" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582ccdd70"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1582cc9020" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1582cd7020" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582cd7020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f1582cd4790" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582cd7020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f1582cd22a0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582cd7020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f1582cd2020" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582cd7020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f1584a4bc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f1584a4bc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f1582cd12a0" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582cd7020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1582cd1020" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f1582cd6070" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f1582cd4020" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1582cd3390" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1582cd7020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f1582cd78d0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1582cd67f0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7f1582bffcb0" loc="43:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7f1582bfc5a0" loc="50:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7f1582bd6d30" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f1582bd6330" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f1583ca6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f1582bd6740" loc="19:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f1582bd6a90" loc="20:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f1582bd48e0" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f1582bd5e70" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1582bd4210" loc="29:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f1582bd4640" loc="30:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1582bd5740" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f1582bd54c0" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7f1582b47740" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f1583cc7d50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f1582b4ad10" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f1583cc7d50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f1582b47150" loc="19:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f1583c901b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f1582b474a0" loc="20:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f1582b44480" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f1582b469d0" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f1583ca3aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1582b46d40" loc="29:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f1582b441e0" loc="30:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f1583c925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1582b462a0" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f1582b46020" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f1583700870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7f1582a508f0" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f1582a508f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f1582a4db20" loc="34:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1582a4d450" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f1582a508f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7f1582a4d1d0" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f1582a508f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7f1582a1cc80" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a1ca00" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7f1582a1c2a0" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a1c020" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1582a0f2b0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a10bd0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1582a0f020" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1582a0e430" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a0e1b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1582a103e0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1582a129e0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1582a12760" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1582a27890" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a272d0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1582a27600" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1582a20020" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a22890" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1582a22bc0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1582a22020" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1582a25b90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a25910" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1582a260c0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a24a80" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1582a24dd0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1582a16680" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a16400" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1582a1a770" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a1a150" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1582a1a4e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1582a17650" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a173d0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1582a18b70" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a18550" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1582a188e0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1582a14650" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582a143d0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1582734780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582734500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f1582740be0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1582740600" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f1582740950" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f158273b3a0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f158273cd50" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f158273b110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f158273f6e0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1584a46110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f158273f460" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f158273c2a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f158273c020" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f1582744dd0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1582744b50" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f158273e2a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f158273e020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f15827392e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582739060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1582738510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582738290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1582736680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582736400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f1582726e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582726bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f1582727120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582728e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f158272a7a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f158272a520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f158272bbd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f158272b950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f15827282a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f1582728020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f1582726020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582727d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f158271a040" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f158271ba50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f158271bd80" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1582719350" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f1582716c50" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1582717e00" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1582716680" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f15827169b0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1582717600" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1582717020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1582717370" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f158271aad0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f158271a850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f158270eae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f158270e820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f158270e020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f1583efbdf0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f1583ef97d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f158270fbe0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f158270dde0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f1583ef73e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f1583ef52e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f158270dae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f15826ba890" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f15826a3020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f15826a3020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f15826a3260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15826a3260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f15826a10b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15826a3260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15826a2e00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f158269f2a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f158269f020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f15826a3e20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15826a3ba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f158269e610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15826a3260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f158269e020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f158269e380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f15826a3260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1582680420" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f1582682a20" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f1582680190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f1582682270" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f1582683a00" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1582683780" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1584a45920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f1582696cb0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582696a30" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f158269ac90" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f158269aa10" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1582693c80" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582693a00" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1582695ca0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582695a20" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f15821f4840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821f45c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f15821fe350" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821fe0d0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1582200790" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f15821ff2a0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821ff020" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f15821fac40" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821fa660" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15821fa9b0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f15821fc760" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821fc180" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f15821fc4d0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1583ebe560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f15821f72e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821f7060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f15821f6680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821f60d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f15821f63f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1583ebfd50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f15821f80b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821f9e00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f15821f2d00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f15821f2720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f15821f2a70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f15821f0b50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1583ebe180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f1582184020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1582185960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f1582185ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f1582187020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f1582185020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f15821878b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1583eae0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f1583ead6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f1582187c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f158216b190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f158216e9e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f1582175270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f15821736c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f1582171390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1582171110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f1582172020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f1582175de0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1582175b60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f1582171bf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f15821728d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f158217dc10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f158217b590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f158217d2a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f158217d020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f158217a2a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f158217a020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f1582178020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f1582178c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f15821789c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f1582177730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f15821774b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1582046dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1582046800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1582046b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f1582040ac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f1582040840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f158203e930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f158203e360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f158203e6a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f158203f740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f158203c2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f158203b920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f158203bc60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f158203c020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f1582040070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1582042720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1582043db0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1582042130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1582042480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f158201c5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f158201c330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f158201cdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f158201acf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f158201a700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f158201aa60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1584a45160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f1582018b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1582010420" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f15830cee70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f15830cd2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1581f82860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1581f810e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1581ebc470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1581d6fb80" loc="43:../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1581d6fb80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f1581d6a350" loc="80:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1581d6fb80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f1581d69580" loc="97:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1584398c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1581d6fb80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f1581d69300" loc="97:../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1581d6fb80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f1581d67020" loc="108:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1581d6fb80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1581d69d50" loc="108:../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f1581d6cbd0" loc="57:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f1581d6bba0" loc="72:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1581d6ab10" loc="88:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1581d6fb80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f1581d6c460" loc="50:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f15843a0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1581d6b390" loc="65:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1584a45520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f1581d460b0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f1581d49dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
