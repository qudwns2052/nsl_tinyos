<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76e3d8130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76ca09800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb76e3cc5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb76ca0a600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb76e3c37a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb76ca09e10"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb76ca09e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb76c999d60"/></to>
    </wire>
    <wire loc="67:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb76e482750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb76e6a5640"/></to>
    </wire>
    <wire loc="72:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb76e6a5640"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb76e4e7590"/></to>
    </wire>
    <wire loc="68:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76e4458b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76d406510"/></to>
    </wire>
    <wire loc="50:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76d406510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76caca440"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76e46e0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="51:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e386400"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7fb76e463820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e11c640"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e11c640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7fb76e44f6b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7fb76ddf6320"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7fb76ddf6320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7fb76dd10a10"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fb76e44c9f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fb76ddf70c0"/></to>
    </wire>
    <wire loc="62:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fb76ddf70c0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fb76dd11880"/></to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7fb76e449d90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76ddf7a20"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76ddf7a20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76dd10270"/></to>
    </wire>
    <wire loc="76:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7fb76e43da20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7fb76c664020"/></to>
    </wire>
    <wire loc="15:../../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7fb76c664020"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7fb76c662a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7fb76e3dcb50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76d4f4020"/></to>
    </wire>
    <wire loc="62:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76d4f4020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7fb76d4434b0"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e460c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76df6d020"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76df6d020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76e3e6b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></to>
    </wire>
    <wire loc="56:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df5b4e0"/></to>
    </wire>
    <wire loc="49:../../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c5265a0"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c550cc0"/></to>
    </wire>
    <wire loc="21:../../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c658020"/></to>
    </wire>
    <wire loc="103:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76b9c2ca0"/></to>
    </wire>
    <wire loc="59:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c994540"/></to>
    </wire>
    <wire loc="48:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76babf900"/></to>
    </wire>
    <wire loc="48:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bae0620"/></to>
    </wire>
    <wire loc="48:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bafc900"/></to>
    </wire>
    <wire loc="48:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bb19690"/></to>
    </wire>
    <wire loc="48:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bb2daf0"/></to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76cbb9dd0"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76cc42b70"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76cc62430"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76cdbd620"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76ceb3020"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76db9e7e0"/></to>
    </wire>
    <wire loc="58:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76d233720"/></to>
    </wire>
    <wire loc="103:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bd6f140"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76d923020"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76dc4d890"/></to>
    </wire>
    <wire loc="11:../../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76dc8dc50"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76df62a90"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e10b400"/></to>
    </wire>
    <wire loc="67:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb76e4e7c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb76eb9b3a0"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb76eb9b3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb76e745140"/></to>
    </wire>
    <wire loc="68:../../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fb76e4da6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e6a7ab0"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76e6a7ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e6a1cd0"/></to>
    </wire>
    <wire loc="71:../../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e4dadc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></to>
    </wire>
    <wire loc="49:../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb76e69e430"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fb76e69f390"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb76e69f390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e67d280"/></to>
    </wire>
    <wire loc="50:../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fb76e69eb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e697020"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fb76e69d380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e35edd0"/></to>
    </wire>
    <wire loc="46:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76e67d280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e666020"/></to>
    </wire>
    <wire loc="47:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb76e676850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb76e6666d0"/></to>
    </wire>
    <wire loc="48:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb76e81d4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb76e6659a0"/></to>
    </wire>
    <wire loc="113:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fb76e622730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e55f6d0"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fb76e60f0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e557b30"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fb76e618890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e564160"/></to>
    </wire>
    <wire loc="149:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fb76e5fca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e53ecb0"/></to>
    </wire>
    <wire loc="107:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fb76e620c10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e565480"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fb76e603020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e53e020"/></to>
    </wire>
    <wire loc="170:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fb76e5f9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e526cb0"/></to>
    </wire>
    <wire loc="154:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fb76e60a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e538220"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fb76e624d60"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e5b49d0"/></to>
    </wire>
    <wire loc="135:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fb76e5ffa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e54d2f0"/></to>
    </wire>
    <wire loc="134:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fb76e6053e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e54e610"/></to>
    </wire>
    <wire loc="133:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fb76e60e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e54f220"/></to>
    </wire>
    <wire loc="115:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fb76e617890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e55d7a0"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fb76e5fba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e5352f0"/></to>
    </wire>
    <wire loc="140:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fb76e60dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e5476d0"/></to>
    </wire>
    <wire loc="114:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fb76e61ea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e55eac0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fb76e62b1b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5c2540"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fb76e603da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e536610"/></to>
    </wire>
    <wire loc="106:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fb76e62a220"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e566020"/></to>
    </wire>
    <wire loc="161:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fb76e609a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e5306d0"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fb76e6138d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e56da90"/></to>
    </wire>
    <wire loc="142:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fb76e5fea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e5457a0"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fb76e61be60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e56ede0"/></to>
    </wire>
    <wire loc="141:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fb76e6041f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e546ac0"/></to>
    </wire>
    <wire loc="163:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fb76e5faa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e52e7a0"/></to>
    </wire>
    <wire loc="147:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fb76e60b0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e540b30"/></to>
    </wire>
    <wire loc="120:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="162:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fb76e602b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e52fac0"/></to>
    </wire>
    <wire loc="128:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fb76e600a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76e555cb0"/></to>
    </wire>
    <wire loc="169:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fb76e601a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e526020"/></to>
    </wire>
    <wire loc="127:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fb76e606570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb76e555020"/></to>
    </wire>
    <wire loc="168:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fb76e607020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb76e529b30"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb76e5c0450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5c1d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb76e5c0aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb76e521a90"/></to>
    </wire>
    <wire loc="96:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb76e5bf120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb76e51e260"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e56c930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5c2540"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e56a020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5c1d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e563020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5c2540"/></to>
    </wire>
    <wire loc="110:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e5627a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5c1d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e55c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5c2540"/></to>
    </wire>
    <wire loc="117:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e55bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5c1d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb76e5b92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb76e5b9940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb76e51e9f0"/></to>
    </wire>
    <wire loc="123:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb76e5b8020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb76e51d240"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e554b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="130:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e5522f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e54c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="137:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e54b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e544610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="144:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e543c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e53db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e53b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e534160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="158:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e5337a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e52d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="165:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e52cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76e525b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></to>
    </wire>
    <wire loc="172:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb76e5232f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76e743040"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fb76e73d490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fb76eb323b0"/></to>
    </wire>
    <wire loc="238:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fb76e39e5c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76e35edd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e389db0"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb76e37ea90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fb76e3875a0"/></to>
    </wire>
    <wire loc="58:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb76e3875a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76e145020"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb76e384ca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fb76e360830"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb76e360830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76e131b90"/></to>
    </wire>
    <wire loc="56:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb76e37c020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fb76e35fb50"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb76e35fb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76e12c710"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76e1342f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fb76e3059a0"/></to>
    </wire>
    <wire loc="486:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fb76e3059a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1e2d10"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76e130de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fb76e3039a0"/></to>
    </wire>
    <wire loc="487:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fb76e3039a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1dd740"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76e12b930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fb76e3019a0"/></to>
    </wire>
    <wire loc="488:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fb76e3019a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1d7100"/></to>
    </wire>
    <wire loc="442:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb76e347810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e27b740"/></to>
    </wire>
    <wire loc="455:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb76e332810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e24b100"/></to>
    </wire>
    <wire loc="531:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fb76e2e9ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e23c100"/></to>
    </wire>
    <wire loc="551:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fb76e2c4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1b1740"/></to>
    </wire>
    <wire loc="532:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fb76e2e6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e238d10"/></to>
    </wire>
    <wire loc="460:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fb76e32e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e241740"/></to>
    </wire>
    <wire loc="473:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fb76e31a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e211460"/></to>
    </wire>
    <wire loc="497:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fb76e2f59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1bb100"/></to>
    </wire>
    <wire loc="535:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fb76e2e0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e22e100"/></to>
    </wire>
    <wire loc="545:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fb76e2d0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1ce740"/></to>
    </wire>
    <wire loc="557:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fb76e2bccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1ac100"/></to>
    </wire>
    <wire loc="445:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb76e340810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e26c740"/></to>
    </wire>
    <wire loc="536:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fb76e2decc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e22ad10"/></to>
    </wire>
    <wire loc="450:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb76e33c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e263d10"/></to>
    </wire>
    <wire loc="463:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fb76e328810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e233740"/></to>
    </wire>
    <wire loc="476:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fb76e3139a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e203100"/></to>
    </wire>
    <wire loc="489:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fb76e2ff9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1d3d10"/></to>
    </wire>
    <wire loc="500:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fb76e2ef9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1ac100"/></to>
    </wire>
    <wire loc="440:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb76e34b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e284100"/></to>
    </wire>
    <wire loc="453:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb76e336810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e255d80"/></to>
    </wire>
    <wire loc="466:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fb76e322810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e224740"/></to>
    </wire>
    <wire loc="530:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fb76e2ebcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e23c100"/></to>
    </wire>
    <wire loc="548:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fb76e2cacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1c0740"/></to>
    </wire>
    <wire loc="555:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fb76e2becb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1ac100"/></to>
    </wire>
    <wire loc="541:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fb76e2d6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1e6100"/></to>
    </wire>
    <wire loc="471:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fb76e31e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e21be60"/></to>
    </wire>
    <wire loc="484:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fb76e3099a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1eb740"/></to>
    </wire>
    <wire loc="495:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fb76e2f99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1c5d10"/></to>
    </wire>
    <wire loc="549:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fb76e2c8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1bb100"/></to>
    </wire>
    <wire loc="538:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fb76e2dccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1f4100"/></to>
    </wire>
    <wire loc="443:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb76e344810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e276100"/></to>
    </wire>
    <wire loc="456:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb76e330810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e246d10"/></to>
    </wire>
    <wire loc="493:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fb76e2fd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1ce740"/></to>
    </wire>
    <wire loc="461:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fb76e32c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e23c100"/></to>
    </wire>
    <wire loc="474:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fb76e3189a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e20de00"/></to>
    </wire>
    <wire loc="498:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fb76e2f39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1b6d10"/></to>
    </wire>
    <wire loc="540:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fb76e2d8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1eb740"/></to>
    </wire>
    <wire loc="438:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb76e34d870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e2b4d10"/></to>
    </wire>
    <wire loc="451:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb76e33a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e25e740"/></to>
    </wire>
    <wire loc="464:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fb76e326810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e22e100"/></to>
    </wire>
    <wire loc="477:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fb76e3119a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1fed10"/></to>
    </wire>
    <wire loc="542:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fb76e2d4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e224740"/></to>
    </wire>
    <wire loc="546:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fb76e2cecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1c9100"/></to>
    </wire>
    <wire loc="552:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fb76e2c2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1ac100"/></to>
    </wire>
    <wire loc="482:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fb76e30d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1f4100"/></to>
    </wire>
    <wire loc="543:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fb76e2d2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e21f100"/></to>
    </wire>
    <wire loc="441:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb76e349810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e280d10"/></to>
    </wire>
    <wire loc="454:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb76e334810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e250740"/></to>
    </wire>
    <wire loc="467:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fb76e320810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e21f100"/></to>
    </wire>
    <wire loc="539:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fb76e2dacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1f0d10"/></to>
    </wire>
    <wire loc="550:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fb76e2c6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1b6d10"/></to>
    </wire>
    <wire loc="472:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fb76e31c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e2169f0"/></to>
    </wire>
    <wire loc="485:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fb76e3079a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1e6100"/></to>
    </wire>
    <wire loc="496:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fb76e2f79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1c0740"/></to>
    </wire>
    <wire loc="444:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb76e342810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e272d10"/></to>
    </wire>
    <wire loc="494:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fb76e2fb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1c9100"/></to>
    </wire>
    <wire loc="449:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb76e33e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e267100"/></to>
    </wire>
    <wire loc="462:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fb76e32a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e238d10"/></to>
    </wire>
    <wire loc="475:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fb76e3159a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e208740"/></to>
    </wire>
    <wire loc="499:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fb76e2f19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1b1740"/></to>
    </wire>
    <wire loc="439:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb76e357810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e289740"/></to>
    </wire>
    <wire loc="452:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb76e338810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e259100"/></to>
    </wire>
    <wire loc="465:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fb76e324810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e22ad10"/></to>
    </wire>
    <wire loc="478:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fb76e30f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1f9740"/></to>
    </wire>
    <wire loc="534:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fb76e2e2ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e233740"/></to>
    </wire>
    <wire loc="547:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fb76e2cccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1c5d10"/></to>
    </wire>
    <wire loc="533:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fb76e2e4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e233740"/></to>
    </wire>
    <wire loc="483:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fb76e30b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1f0d10"/></to>
    </wire>
    <wire loc="554:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fb76e2c0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1b1740"/></to>
    </wire>
    <wire loc="558:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fb76e2bacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e1d3d10"/></to>
    </wire>
    <wire loc="529:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fb76e2ed9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb76e241740"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e1091d0"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e1091d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76df95690"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76e10b400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76e010760"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fb76e101a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb76df86cf0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76e010760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c044490"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fb76df8fc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76dfe4cf0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76dfdd1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76e00f020"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76e00f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76c03e140"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76df7b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76e08d020"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76e08d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76e0510f0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76c044490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c029e60"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76c038b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76c044ce0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76c044ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76c028720"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76c03a690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76e08d020"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76c024910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76c02fc50"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76c02fc50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76c022020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76c02c2b0"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76c02c2b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76c021440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76c02b5d0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76c02b5d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fb76e60f0c0"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fb76e606570"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fb76e60dbe0"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fb76e6041f0"/></to>
    </wire>
    <wire loc="70:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fb76e60b0c0"/></to>
    </wire>
    <wire loc="72:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fb76e603020"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="75:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fb76e60a5a0"/></to>
    </wire>
    <wire loc="76:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fb76e603da0"/></to>
    </wire>
    <wire loc="78:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="79:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fb76e609a50"/></to>
    </wire>
    <wire loc="80:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fb76e602b80"/></to>
    </wire>
    <wire loc="82:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="83:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fb76e607020"/></to>
    </wire>
    <wire loc="84:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fb76e601a20"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb76e04e540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb76e084020"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb76e084020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76e07f0a0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0702c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fb76dfda490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fb76df8ae80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fb76df5f370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fb76df5c390"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76df67500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76df62a90"/></to>
    </wire>
    <wire loc="97:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7fb76df3ee60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76df02800"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7fb76df3ca80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76c5f9980"/></to>
    </wire>
    <wire loc="98:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76df4bbb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76df00570"/></to>
    </wire>
    <wire loc="99:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7fb76df483b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7fb76df00dc0"/></to>
    </wire>
    <wire loc="100:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7fb76defbc70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7fb76df3ca80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7fb76defd760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7fb76ddf6320"/></to>
    </wire>
    <wire loc="103:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76deeea50"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="36:../../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd1020"/></to>
    </wire>
    <wire loc="104:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76dee1720"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76d4016e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7fb76def6cc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7fb76caab020"/></to>
    </wire>
    <wire loc="106:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76decf8a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d350020"/></to>
    </wire>
    <wire loc="27:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d350020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d3467a0"/></to>
    </wire>
    <wire loc="107:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7fb76ded85f0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7fb76ca6a540"/></to>
    </wire>
    <wire loc="27:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7fb76ca6a540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7fb76ca66360"/></to>
    </wire>
    <wire loc="355:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7fb76de85380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7fb76dd0e310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7fb76df483b0"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7fb76dd0eab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76ca24840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7fb76dd0d3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76dced140"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76dced140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7fb76dd08730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76dce7b00"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76dce7b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76dcfee00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76dcfd5e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7fb76df3ee60"/></to>
    </wire>
    <wire loc="72:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcfb270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="73:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7fb76dcfa2b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76df4bbb0"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76dcfaa10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76d4f4020"/></to>
    </wire>
    <wire loc="75:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7fb76dd03ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76dcdf4e0"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76dcdf4e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7fb76dcf8590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7fb76ca6a540"/></to>
    </wire>
    <wire loc="77:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76dcf7a40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d350020"/></to>
    </wire>
    <wire loc="161:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7fb76dcf6ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7fb76dcf5ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7fb76dcf42f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7fb76dcf52f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7fb76dcf4ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76dcd5020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76dcd04a0"/></to>
    </wire>
    <wire loc="38:../../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dcca800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dcd4690"/></to>
    </wire>
    <wire loc="9:../../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dcd4690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dc8a300"/></to>
    </wire>
    <wire loc="12:../../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc89da0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc67020"/></to>
    </wire>
    <wire loc="17:../../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc7bb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc5c7e0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc5c7e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc47cf0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fb76dc4b330"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fb76dc43020"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fb76dc50d90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fb76dc45bf0"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76dc58980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76dc47020"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fb76dc41140"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db9b220"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db9b220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db95af0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb76dc3d510"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb76db56e60"/></to>
    </wire>
    <wire loc="72:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb76db56e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db49b60"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fb76dc3c830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fb76db526a0"/></to>
    </wire>
    <wire loc="75:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fb76db526a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db3ad70"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fb76dc3bb50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fb76db50ce0"/></to>
    </wire>
    <wire loc="77:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fb76db50ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db30710"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fb76dc345b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fb76db19d60"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fb76db19d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb76d9fba30"/></to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb76dc238f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d5a4e20"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d5a4e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb76dc22990"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fb76d5a17b0"/></to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb76d5a17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb76dc24100"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d5a0ae0"/></to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d5a0ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb76dc231d0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d5a2ad0"/></to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d5a2ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76dc24830"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d59f160"/></to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d59f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb76dc271d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d596870"/></to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d596870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb76dc27a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d594880"/></to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d594880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb76dc2b3c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d5930a0"/></to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d5930a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76dc2bc90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d59be50"/></to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d59be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76dc2a5f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d59a670"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d59a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb76dc339a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fb76d584500"/></to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb76d584500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb76dc33020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d585ce0"/></to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d585ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76dc26020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d597e50"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d597e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb76dc268c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fb76d59ae50"/></to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb76d59ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76dc251d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d599e50"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d599e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fb76dc20560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d572a80"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d572a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fb76dc216f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d5459e0"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d5459e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb76dc31dd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb76d519b20"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc42720"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc67020"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fb76dc14020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fb76dc15020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76db9e7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76db95260"/></to>
    </wire>
    <wire loc="51:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76db95260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bee9a10"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db95af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76bee82a0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76bee9a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bee1a10"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76bee82a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76beda5f0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76bee1a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76bec5510"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76bed4d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76bee02a0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76bee02a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76bec5da0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76bed79b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76db7f080"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76db7f080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76db7acd0"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76bec0020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76beca1b0"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76beca1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76bebf760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76bec98f0"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76bec98f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76bebea80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76bec8c10"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76bec8c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb76db760f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb76e084020"/></to>
    </wire>
    <wire loc="73:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fb76db54090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db43710"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fb76db53390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db3e1d0"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fb76db9cb10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db4d020"/></to>
    </wire>
    <wire loc="76:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fb76db519b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db35b60"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db4c2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb76e347810"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db48de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fb76e31a9a0"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db42930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb76e349810"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db3d480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb76e34d870"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db38020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fb76e3119a0"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db34de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fb76e31c9a0"/></to>
    </wire>
    <wire loc="69:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db2f930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fb76e3139a0"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fb76db19150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb76db10a20"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb76db16a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb76d9eca70"/></to>
    </wire>
    <wire loc="53:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76dafe5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fb76e60e5a0"/></to>
    </wire>
    <wire loc="54:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fb76dafd8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fb76e5ffa20"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fb76dafc7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fb76e31c9a0"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb76d9fa610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb76daed8a0"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb76daed8a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb76dad98a0"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb76d9eb610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb76daef8f0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb76daef8f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb76dadf810"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb76dae3a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fb76dacfa30"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb76daea8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fb76dad68a0"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb76dae88a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fb76dad48a0"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb76daf38a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fb76dadb8a0"/></to>
    </wire>
    <wire loc="80:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb76dae58a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fb76dad18a0"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb76daec8a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb76dad88a0"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb76dae2a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fb76dacea30"/></to>
    </wire>
    <wire loc="78:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb76dae78a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fb76dad38a0"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb76daee8a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb76dada8a0"/></to>
    </wire>
    <wire loc="81:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb76dae4a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fb76dad0a30"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb76daeb8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fb76dad78a0"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb76dae98a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fb76dad58a0"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb76daf48a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fb76dadc8a0"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb76dae68a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fb76dad28a0"/></to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb76d5a1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76d595880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb76d58b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb76d5940a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb76d57f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76d582500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb76d5a0490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb76d587880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76d583500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb76d58d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb76d58e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d5a3a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9a4920"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76d59fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb76d59d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76d586c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb76d59dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76d583ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb76d5870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76d599670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76d5890a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb76d58b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76d589880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb76d580ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76d582ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb76d58e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb76d58a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb76d584ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb76d593880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb76d57fce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76d5a2480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb76d59b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76d597670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb76d58c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb76d58c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76d5950a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb76d59c2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb76d59b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76d59f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76d585500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb76d580500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76d58d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb76d58a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb76d5a1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb76d5920a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb76d59c940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb76d592880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb76d5860a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb76d57e9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a0bb0"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d99e020"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d99edb0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d9a1810"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d99dba0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fb76d98cb90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d92c770"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76d92c770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb76d99b400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d90ac40"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d90ac40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76bdf2c30"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb76d999080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb76d9098f0"/></to>
    </wire>
    <wire loc="53:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb76d9098f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb76bdef0c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d990680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d5cc020"/></to>
    </wire>
    <wire loc="54:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d5cc020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb76bdee2b0"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76d997a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fb76d987bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d923b70"/></to>
    </wire>
    <wire loc="110:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb76bdee2b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d8a2510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb76bdef0c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb76d8a5dd0"/></to>
    </wire>
    <wire loc="105:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76bdf2c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d8a9a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bdf08f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bde52c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bde52c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76d72d8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb76d8a5dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb76d828440"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76bdef6d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76d8a4480"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76d8a4480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76d828a50"/></to>
    </wire>
    <wire loc="111:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76d89f600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76bdeea50"/></to>
    </wire>
    <wire loc="115:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76bdd6760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d8a55e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb76d8a0370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76bde7640"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76bde7640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d72e5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76d89b6a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76bddec10"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76bddec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb76d732a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d8a55e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d829c40"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d8a2510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d827700"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d8a9a20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d82ae80"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76d826e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76d89f600"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb76d826060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fb76d8a0370"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76d820de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76d89b6a0"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fb76d824490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76d818860"/></to>
    </wire>
    <wire loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76d818860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb76d80c020"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76d81f5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fb76d81ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb76d80e8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d807750"/></to>
    </wire>
    <wire loc="86:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76d8113b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb76d808dc0"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb76d7d8700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fb76e2ebcc0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fb76d7d6670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fb76e2e6cc0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb76d7d4670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fb76e2e4cc0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fb76d7d2670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fb76e2decc0"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fb76d7d0670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fb76e2e0cc0"/></to>
    </wire>
    <wire loc="14:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fb76d7de5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fb76d687430"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb76bddd440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d72f9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb76bddda50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb76d693880"/></to>
    </wire>
    <wire loc="11:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb76d693880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fb76d687430"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76bde42b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76d818860"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76bde5a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d72c130"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d72c130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d69a060"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d72b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76bdd6760"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76d72d8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76d69dbf0"/></to>
    </wire>
    <wire loc="106:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76d69dbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bd6b850"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fb76d732a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb76d7285c0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d72e5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d69ee60"/></to>
    </wire>
    <wire loc="105:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76d69ee60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76bd6c970"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d72f9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d717020"/></to>
    </wire>
    <wire loc="108:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d69a060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76bd6ac30"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d69a930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d72b020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d7164b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d69a060"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fb76d717690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76d8113b0"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb76d717e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb76d80e8a0"/></to>
    </wire>
    <wire loc="107:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76d69b400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76bd6a020"/></to>
    </wire>
    <wire loc="109:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76bd69590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d69a930"/></to>
    </wire>
    <wire loc="111:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76bd69d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76bd6f750"/></to>
    </wire>
    <wire loc="75:../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb76bd65020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fb76d680250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb76d80c020"/></to>
    </wire>
    <wire loc="18:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb76d67cd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fb76e2ebcc0"/></to>
    </wire>
    <wire loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb76d67acb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fb76e2e4cc0"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d565c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb76d570da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d568b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76d563670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb76d55ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb76d563e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb76d54f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76d5512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb76d56d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb76d557670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76d5522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb76d567c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d566c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb76d55d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb76d55fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d561670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d571760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76d56caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb76d56b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76d556a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb76d56b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76d552ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d56ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb76d558e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76d566480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d567480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d570750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76d559e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb76d55a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76d558670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb76d550ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76d551ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb76d55e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb76d55ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb76d553ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb76d560670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb76d54fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76d570100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb76d568370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76d565480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb76d55de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d561e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb76d55c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d564670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb76d56e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76d564e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb76d56a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb76d56acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb76d5532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d555ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76d56c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76d5552f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb76d5502f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76d55ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb76d559670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb76d56eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d56d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb76d560e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb76d56a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb76d55f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb76d557e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb76d54e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d538c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb76d543da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d53cb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76d536670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb76d52fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb76d536e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb76d5222f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76d5252f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb76d541120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb76d52a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76d5262f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb76d53bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d53ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb76d530670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb76d533e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d535670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d544760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76d540aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb76d53e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76d529a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb76d53e870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76d526ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d541dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb76d52be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76d53a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d53b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d543750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76d52de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb76d52e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76d52b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb76d523ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76d525ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb76d531670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb76d52ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb76d527ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb76d534670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb76d522ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76d543100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb76d53c370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76d538480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb76d530e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d535e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb76d52f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d537670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb76d542450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76d537e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb76d53d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb76d53dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb76d5272f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d528ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76d540450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76d5282f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb76d5232f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76d531e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb76d52d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb76d542aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d541770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb76d534e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb76d53d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb76d533670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb76d52ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb76d5217a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7fb76d4f3020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76c5f9980"/></to>
    </wire>
    <wire loc="61:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76dcd76f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76d443da0"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7fb76d431bb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7fb76d4f3020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7fb76d442720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76d41dbd0"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76d41dbd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7fb76d436020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76d416560"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76d416560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7fb76d43dae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76d40f020"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76d40f020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76d431410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76d430400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="70:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7fb76d427980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7fb76ddf6320"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fb76d425270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fb76ddf70c0"/></to>
    </wire>
    <wire loc="72:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d423590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d403560"/></to>
    </wire>
    <wire loc="56:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d403560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d3fcd20"/></to>
    </wire>
    <wire loc="75:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7fb76d42f5a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fb76ca7cae0"/></to>
    </wire>
    <wire loc="78:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7fb76d4290f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76ca754a0"/></to>
    </wire>
    <wire loc="49:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fb76ca754a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76babe020"/></to>
    </wire>
    <wire loc="81:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7fb76d425b60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7fb76caab020"/></to>
    </wire>
    <wire loc="109:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7fb76d4222f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7fb76d422ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76d4016e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76d3e0890"/></to>
    </wire>
    <wire loc="57:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7fb76d3ff930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7fb76d3e1a50"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7fb76d405d40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7fb76d3dea90"/></to>
    </wire>
    <wire loc="62:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7fb76d4009d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76ddf7a20"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7fb76d4009d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76dcd76f0"/></to>
    </wire>
    <wire loc="61:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76d405540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d3fb1d0"/></to>
    </wire>
    <wire loc="51:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76cac7020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76d400130"/></to>
    </wire>
    <wire loc="52:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7fb76cac78c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7fb76d4009d0"/></to>
    </wire>
    <wire loc="53:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7fb76cac61a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76d255020"/></to>
    </wire>
    <wire loc="51:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76d255020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76d2346d0"/></to>
    </wire>
    <wire loc="54:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7fb76cac6dd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76d34f980"/></to>
    </wire>
    <wire loc="29:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76d34f980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76d345790"/></to>
    </wire>
    <wire loc="62:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7fb76d3faae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d3de290"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7fb76d3dc1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7fb76d34f020"/></to>
    </wire>
    <wire loc="28:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7fb76d34f020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7fb76d34dda0"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7fb76d348720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7fb76d255af0"/></to>
    </wire>
    <wire loc="52:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7fb76d255af0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7fb76d233d60"/></to>
    </wire>
    <wire loc="73:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76d2a5a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d3fb1d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76d2a42d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="78:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76d3dcb20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="79:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7fb76d3dbc30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7fb76caab020"/></to>
    </wire>
    <wire loc="80:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7fb76d3f92d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7fb76caab020"/></to>
    </wire>
    <wire loc="81:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76cac55c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="84:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fb76d3d6790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76ca92a40"/></to>
    </wire>
    <wire loc="49:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fb76ca92a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76bae0d10"/></to>
    </wire>
    <wire loc="88:../../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7fb76d3d21c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76ca8d970"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76ca8d970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7fb76d3bde40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7fb76d343060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d2aba30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7fb76d343860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d2749b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7fb76d3420a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d2729b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7fb76d3428a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d26f9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7fb76d341270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76d26d7b0"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76d26d7b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76d33c450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></to>
    </wire>
    <wire loc="37:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d33cc50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d3fcd20"/></to>
    </wire>
    <wire loc="38:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7fb76d33b900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7fb76d348720"/></to>
    </wire>
    <wire loc="39:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76d33a2d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76d339300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dcd4690"/></to>
    </wire>
    <wire loc="194:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7fb76d306380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76d2aba30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76bc311f0"/></to>
    </wire>
    <wire loc="41:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7fb76bc319f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76d2749b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76bc26020"/></to>
    </wire>
    <wire loc="41:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7fb76bc26820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76d2729b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76bc1c6a0"/></to>
    </wire>
    <wire loc="41:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7fb76bc1b020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76d26f9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76bc13db0"/></to>
    </wire>
    <wire loc="41:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7fb76bc115e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76d253020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76d231940"/></to>
    </wire>
    <wire loc="59:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fb76d22f060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf56420"/></to>
    </wire>
    <wire loc="30:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf56420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf51b40"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb76d22fbd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb76cf53020"/></to>
    </wire>
    <wire loc="32:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb76cf53020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb76cf4a020"/></to>
    </wire>
    <wire loc="61:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7fb76d22d0f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fb76cf53d00"/></to>
    </wire>
    <wire loc="33:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fb76cf53d00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fb76cf4ca00"/></to>
    </wire>
    <wire loc="62:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7fb76d22de20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fb76cf52a30"/></to>
    </wire>
    <wire loc="34:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fb76cf52a30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fb76cf4b820"/></to>
    </wire>
    <wire loc="68:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb76d221020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb438f0"/></to>
    </wire>
    <wire loc="21:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb438f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb76cf3e470"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7fb76d222020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7fb76cb3e020"/></to>
    </wire>
    <wire loc="17:../../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7fb76cb3e020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7fb76cb39450"/></to>
    </wire>
    <wire loc="70:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76d1fdbc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76d24d870"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7fb76d202900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76cb3fe70"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76cb3fe70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7fb76d21ea10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76cb28a40"/></to>
    </wire>
    <wire loc="49:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fb76cb28a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76bb2c210"/></to>
    </wire>
    <wire loc="79:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7fb76d20a150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76cafe020"/></to>
    </wire>
    <wire loc="49:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fb76cafe020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76bb19d80"/></to>
    </wire>
    <wire loc="80:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7fb76d20e5f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76cad7020"/></to>
    </wire>
    <wire loc="49:../../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7fb76cad7020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7fb76bafb020"/></to>
    </wire>
    <wire loc="81:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7fb76d208c50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fb76caf8850"/></to>
    </wire>
    <wire loc="84:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d22c4e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d3467a0"/></to>
    </wire>
    <wire loc="438:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fb76cf856e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf51b40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76cbadb80"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fb76cf4b820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cc165e0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb76cf4a020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb76cc14170"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fb76cf4ca00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cc178e0"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76cbadb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fb76cbaad90"/></to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cf36170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cd3aa70"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cd3aa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cd2a020"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb76cf3e470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb98020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb98020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb93080"/></to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cf40640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd30d20"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cf4ad10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cc16c90"/></to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cc16c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cc0ba20"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cf367f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cbad080"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cbad080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cba62d0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76cc165e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fb76cc0b370"/></to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cf46080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb76cd3b6e0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb76cd3b6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb76cd2cc50"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76cf4ed00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76cc18be0"/></to>
    </wire>
    <wire loc="96:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76cc18be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76cc0d7b0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76cc178e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fb76cc0c4d0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb76cc14170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb76cc09020"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cf49a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cc15a50"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cc15a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cc0a840"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb76cbaad90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf39b30"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf39b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf32da0"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cc136b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cc6ede0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76cc6ede0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cc63660"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cc6bb50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cb992a0"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76cb992a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cb963b0"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cb98d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cbb1ce0"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76cbb1ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb76cbab860"/></to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cbab860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cf34790"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76cf34790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76cf278f0"/></to>
    </wire>
    <wire loc="107:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc13020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cbae980"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76cbae980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb76cbaa690"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb76cbaa690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cc4aaa0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76cc4aaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cc46e30"/></to>
    </wire>
    <wire loc="109:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc47950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cf33490"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76cf33490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cdc17c0"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cf29230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cf26650"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76cdc17c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76cdbb020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76cf254b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76dc58980"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fb76cf241a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fb76dc50d90"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb76cf233e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76cec39b0"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb76cf233e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76cdc45c0"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76cdc45c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76cdbdca0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76cec39b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76ceb36a0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb76cf22080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb76cec0300"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb76cec0300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76ceb2020"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fb76cf22e00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cebf020"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cebf020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76ceb2cf0"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cf17b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cf0f130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd2b640"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76cf20c60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fb76cf0fb90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76cc75390"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76cc75390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76cf18470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fb76cf0a5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fb76cf0b660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fb76cf0d730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb76cebeca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb76ceb1c90"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fb76cebd470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fb76ceb04b0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fb76ceaf020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db9b220"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fb76ce9dd60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fb76db9cb10"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb76ce99080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb76db56e60"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fb76ce94370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fb76db519b0"/></to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fb76ce9d1e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fb76db19150"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb76ce936e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76cdf5c30"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76cdf5c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76ce924e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76cdf48f0"/></to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76cdf48f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76ce8f020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fb76cdf32f0"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76cdf32f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb76ce8f730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fb76cdf2cc0"/></to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb76cdf2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb76ce8fe60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fb76cdf0370"/></to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb76cdf0370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76ce8e5c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76cdefd00"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76cdefd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76ce906b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fb76cde9c60"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76cde9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb76ce91020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fb76cdd07a0"/></to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb76cdd07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76ce91d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76cdd52f0"/></to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76cdd52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76ce8ed00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76cdea480"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76cdea480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76ce8c0c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76cde7e50"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76cde7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76ce8c990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76cde6670"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76cde6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb76ce8d930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fb76cded7b0"/></to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb76cded7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb76ce8a530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fb76cdd3ad0"/></to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb76cdd3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76ce8b380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fb76cdd42f0"/></to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76cdd42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76ce8bbf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fb76cdd4ad0"/></to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76cdd4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76ce84780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76cdc4df0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76cdc4df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76cdbc550"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76ceab210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76ceaa0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb76cea9200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb76cd39550"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb76cd39550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb76cd2aa80"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76ce96570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76cd31480"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76cd31480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76cd238b0"/></to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76ce88110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76cde8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb76cdf2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76cdebc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb76cddee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb76cde6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cdd22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb76cdda670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb76cdeac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb76cde0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb76cde2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb76cde4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb76cdee370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76cdd9a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb76cdeeac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cdd5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76cdef060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb76cddbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76cde9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb76cdf3940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76cddce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb76cddd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76cddb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb76cde1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb76cddde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb76cdd6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb76cde3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cdd2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb76cdeb490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76cde8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb76cde0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb76cde4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb76cdde670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb76cde7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb76cdf2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb76cded160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb76cdede00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb76cdd62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb76cdd8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76cdef6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76cdd82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb76cdd32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76cde1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb76cddc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb76cdf09c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb76cde3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb76cde2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb76cddae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fb76cdc0020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fb76cdbb7c0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76cda6150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb76cdba020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb76db56e60"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fb76cdb9380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fb76db54090"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fb76cdb86b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fb76db53390"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb76cdb7a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb76db16a20"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb76cdb66e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76ccc0520"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76ccc0520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cdb5530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cc9d480"/></to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cc9d480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76cdb4ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76ccba060"/></to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76ccba060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb76cdb43a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fb76ccbad00"/></to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb76ccbad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cdb3330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cdb21e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="78:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb76cdafd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb76cd39550"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb76cdb2b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc5c7e0"/></to>
    </wire>
    <wire loc="81:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76cdaa3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76ccb2840"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76ccb2840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76cdaacb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76ccb1060"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76ccb1060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb76cdacb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fb76ccb9ae0"/></to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb76ccb9ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cda86d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cc9ec60"/></to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cc9ec60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76cda9590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fb76cca0c60"/></to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb76cca0c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76cda9e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fb76cc9f480"/></to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb76cc9f480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cda7020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cca0480"/></to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cca0480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76cda78b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fb76ccbfc20"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb76ccbfc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fb76cd9a9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb76cd35660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb76cd27af0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76cccd020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76db7f080"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fb76cd203b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb76cccfcf0"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fb76cd1f6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb76e101a80"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76ccc80b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76ccb3620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb76ccbe940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76ccb7620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb76ccaa840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb76ccb1840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb76ccbdcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb76cca5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76cca2c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb76ccb5620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb76ccb4620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb76ccab060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb76ccad840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb76ccb0060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76ccbf2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76ccba6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76cca4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb76ccb9490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76ccbc9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb76cca6840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76ccb5e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76ccb7e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb76ccbe2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76cca7840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb76cca9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76cca6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb76cc9e480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb76ccac060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb76cca9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb76cca2480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb76ccaf060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb76ccb8e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76ccb4e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb76ccab840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb76ccb0840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb76ccaa060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb76ccb2060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb76ccbd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb76ccb87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb76cca3c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb76cca3480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76cca4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb76cc9fc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76ccac840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb76cca7060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb76ccbd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb76ccbc370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb76ccaf840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb76ccb8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb76ccad060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb76cca5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb76cc9c160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cc62b40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb76cc6bb50"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76cc618f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76cc64690"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76cc64690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb76cc60760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cc5f020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb76cc47200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb76cc42570"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc413f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc47950"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cc41a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cc09d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb76cc136b0"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc08b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc13020"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cc072f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cc06170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76cc06b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76cbb8410"/></to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fb76cbd9db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fb76cbac800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76cba8580"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76cba8580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76cb93dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb76cb98d70"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fb76cb92af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76cb5d350"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb76cb5d350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7fb76cb90650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb76cb5b750"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb76cb5b750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cb919a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb76cd3b6e0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cb8ba30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7fb76cb882a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cf54dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cf367f0"/></to>
    </wire>
    <wire loc="22:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cb42670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cf46080"/></to>
    </wire>
    <wire loc="18:../../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cb39c70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></to>
    </wire>
    <wire loc="29:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76ca63990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d403560"/></to>
    </wire>
    <wire loc="30:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7fb76ca628b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7fb76ddf6320"/></to>
    </wire>
    <wire loc="31:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7fb76ca60260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7fb76defb580"/></to>
    </wire>
    <wire loc="32:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7fb76ca609b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76d4f4020"/></to>
    </wire>
    <wire loc="33:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76ca5f540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76df02800"/></to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76ca24840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76baaa2e0"/></to>
    </wire>
    <wire loc="41:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7fb76baaaae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76ca0d5d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76c994b90"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76c994b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76c9857c0"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb76ca0a600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb76c9f2300"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76ca09800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76c99b0d0"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76ca06800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76c998a10"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb76ca07020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb76c99b6c0"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76c994540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76c985170"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76c98c2b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76c9f7300"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb76c9974a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76c98f790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb76c996120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76c990c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fb76c988970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fb76c6798c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76c98f790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76c855de0"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb76c990c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb76c8556c0"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fb76c854c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fb76c988970"/></to>
    </wire>
    <wire loc="70:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76c979020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76c98c2b0"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76c852920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76c98c2b0"/></to>
    </wire>
    <wire loc="72:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76c849cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76c98c2b0"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fb76c853590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fb76c97ac40"/></to>
    </wire>
    <wire loc="75:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fb76c853e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fb76c97e720"/></to>
    </wire>
    <wire loc="77:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fb76c97d020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fb76c84ee00"/></to>
    </wire>
    <wire loc="78:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fb76c973860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76c823080"/></to>
    </wire>
    <wire loc="17:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76c823080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76c68b0c0"/></to>
    </wire>
    <wire loc="80:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb76c840d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb76c823890"/></to>
    </wire>
    <wire loc="13:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb76c823890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb76c692440"/></to>
    </wire>
    <wire loc="332:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fb76c91f6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fb76c9564f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fb76c922c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fb76c91ba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fb76c850020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fb76c850800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb76c821020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb76c690440"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb76c690440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb76c80d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb76c692440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb76c80f860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c68f020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c68b920"/></to>
    </wire>
    <wire loc="19:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76c68a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76c693020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76c693020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76c8127a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c693c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76ba2c5d0"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76ba2c5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c6d4510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c80a450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c68f020"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76ba267c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c811a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb76c80c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76ba2e880"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76ba2e880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76c6d5280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76c8091d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76ba26020"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76ba26020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb76c6d6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c811a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c79edc0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb76c80d020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb76c79c890"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb76c80f860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb76c79d6d0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76c8127a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76c79e020"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c79a3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c80a450"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb76c79b5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fb76c80c1d0"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76c7955b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76c8091d0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fb76c79aa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76c785d30"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76c785d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb76c77d550"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76c793020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb76c6ef110"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76c6ef110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb76e084020"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb76c791120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76c782860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb76c778130"/></to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c785500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c780bc0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb76c778a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fb76e2dacc0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fb76c776990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fb76e2d8cc0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb76c774990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fb76e2d6cc0"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fb76c772990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fb76e2d2cc0"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fb76c770990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fb76e2d4cc0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76ba2b5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76c785d30"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76ba2cd70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6d4d20"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6d4d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6c8060"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c6d2af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76ba267c0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c6d4510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c6cbbd0"/></to>
    </wire>
    <wire loc="106:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c6cbbd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76b9be3a0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fb76c6d6510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb76c6d0230"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76c6d5280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76c6cce30"/></to>
    </wire>
    <wire loc="105:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76c6cce30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76b9bf540"/></to>
    </wire>
    <wire loc="108:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6c8060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76b9bd8b0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fb76c6cf2f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76c782860"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c6c8930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c6d2af0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6ce120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6c8060"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76c6ad9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76c6c9400"/></to>
    </wire>
    <wire loc="107:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76c6c9400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76b9beb20"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c6c3b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c785500"/></to>
    </wire>
    <wire loc="109:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76b9bc210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c6c8930"/></to>
    </wire>
    <wire loc="111:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76b9bc9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76b9c1330"/></to>
    </wire>
    <wire loc="75:../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb76b9b9c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76b9893a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c6c3b20"/></to>
    </wire>
    <wire loc="82:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76b989b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76c6ad400"/></to>
    </wire>
    <wire loc="84:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76b9880f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76c6ad9d0"/></to>
    </wire>
    <wire loc="85:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76b988d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6ac720"/></to>
    </wire>
    <wire loc="19:../../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76c65f7f0"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76c658850"/></to>
    </wire>
    <wire loc="18:../../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7fb76c662a20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7fb76c65a020"/></to>
    </wire>
    <wire loc="22:../../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76c657e20"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76d405540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76c656600"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="19:../../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb76c60b020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb76e6a5640"/></to>
    </wire>
    <wire loc="20:../../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7fb76c60b650"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></to>
    </wire>
    <wire loc="21:../../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76c60a620"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76dcd5020"/></to>
    </wire>
    <wire loc="22:../../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76c60ac80"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc67020"/></to>
    </wire>
    <wire loc="23:../../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76c6093a0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d350020"/></to>
    </wire>
    <wire loc="58:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7fb76c5fb130"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7fb76ddf70c0"/></to>
    </wire>
    <wire loc="54:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76c60e8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76ddf7a20"/></to>
    </wire>
    <wire loc="55:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76c60e8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76df4bbb0"/></to>
    </wire>
    <wire loc="57:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb76c60e8f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb76dcd76f0"/></to>
    </wire>
    <wire loc="40:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7fb76c5f9980"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7fb76b97ace0"/></to>
    </wire>
    <wire loc="41:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7fb76b979500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76c54aca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fb76c574760"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb76c548df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb76c57c870"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb76c57c870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb76b9690c0"/></to>
    </wire>
    <wire loc="68:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb76c546a90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb76c57a590"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb76c57a590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb76ca09e10"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fb76c5272a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fb76c54a400"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb76c579270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb76ca07020"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb76c5788f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76ca06800"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76b969d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76c5d6ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb76b968970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb76ca07020"/></to>
    </wire>
    <wire loc="54:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb76c5d6ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb76c589580"/></to>
    </wire>
    <wire loc="55:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb76c588400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb76ca0a600"/></to>
    </wire>
    <wire loc="56:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb76c587060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb76ca07020"/></to>
    </wire>
    <wire loc="57:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb76c586720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb76ca09e10"/></to>
    </wire>
    <wire loc="169:../../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fb76c585480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fb76c585c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fb76c541d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fb76c526c00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fb76c5272a0"/></to>
    </wire>
    <wire loc="44:../../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb76c51eb90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb76e6a5640"/></to>
    </wire>
    <wire loc="47:../../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fb76c51b3c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb76ca0d5d0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../../tos/system/MainC.nc">
      <documentation loc="45:../../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb2a910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb2a910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb2a910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7fb76e49b110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb2a910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb2a910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fb76e5f4890" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fb76e5f4c30" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fb76e5f3020" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fb76e5f33a0" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fb76e5f3720" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fb76e5f3a90" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fb76e5f3e20" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fb76e5f2200" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fb76e5f25d0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fb76e5b7e70" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fb76e5b3270" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fb76e2b3190" loc="40:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fb76e2b3540" loc="41:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fb76e2b38f0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fb76e2b3ca0" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fb76e2b2060" loc="44:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb76e0c29d0" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb76e0c29d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb76e07e120" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb76e07e120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb76e06da50" loc="55:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb76e06da50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb76e06a290" loc="56:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb76e06a290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb76e06a680" loc="57:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb76e06a680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb76e06ae60" loc="58:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb76e06ae60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb76e069260" loc="59:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fb76e069a60" loc="60:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fb76e069a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb76e08eac0" loc="52:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb76e08eac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb76e0472d0" loc="53:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb76e0472d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb76e0476c0" loc="54:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb76e0476c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb76e046020" loc="55:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb76e046020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb76e0463f0" loc="56:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76e0084f0" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76e0084f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76dfd7d70" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76dfd7d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fb76dfd40d0" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76df841f0" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76df841f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fb76d710020" loc="89:../../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fb76d7040d0" loc="42:../../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fb76d6e9800" loc="52:../../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7fb76d2a9020" loc="34:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7fb76cb2a910" loc="41:../../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb2a910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7fb76cb2ac80" loc="41:../../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7fb76cb23e00" loc="53:../../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fb76cb23e00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7fb76cb20180" loc="53:../../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fb76cafaa60" loc="42:../../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fb76cafaa60"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fb76cafade0" loc="42:../../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fb76c5f38b0" loc="47:../../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fb76c5eb5d0" loc="43:../../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fb76c5ce0d0" loc="45:../../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fb76c576de0" loc="42:../../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fb76c576de0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fb76c5731c0" loc="42:../../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fb76e6a4af0" loc="58:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e6a4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e6a4e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb76e6a5640" loc="57:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb76e6a5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb76e6a59c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e6a7ab0" loc="42:../../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e6a7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e6a7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fb76e69eb10" loc="6:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fb76e69eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e69d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e6a1cd0" loc="4:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e6a1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e69e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fb76e69e430" loc="5:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb76e69e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e69e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fb76e69d380" loc="7:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fb76e69d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e69d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e697020" loc="2:../../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e697020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e6973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fb76e69f390" loc="39:../../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb76e69f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e69f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb76e676850" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb76e676850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb76e67c7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb76e676d60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb76e67c020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb76e67c1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb76e676bd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb76e67c340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb76e67c4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb76e67c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e67d280" loc="39:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e67d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e67d600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb76e6666d0" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb76e6666d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb76e665660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb76e666be0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb76e666d70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb76e665020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb76e666a50"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb76e6651b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb76e665340"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb76e6654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fb76e6659a0" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb76e6659a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb76e665d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e666020" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e666020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e6663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fb76e622730" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fb76e622730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e622ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e622c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e622dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e621020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e6211b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e621340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e6214d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e621660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e6217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fb76e60f0c0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fb76e60f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e60f440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e60f5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e60f760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e60f8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e60fa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e60fc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e60fda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e60e020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e60e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fb76e618890" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fb76e618890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e618c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e618da0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e617020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e6171b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e617340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e6174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fb76e5fca20" loc="68:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fb76e5fca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5fcda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5fb020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5fb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5fb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5fb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fb76e620c10" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fb76e620c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e61e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e61e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e61e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e61e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e61e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fb76e603020" loc="61:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fb76e603020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e6033a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e603530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e6036c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e603850"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e6039e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fb76e5f9a20" loc="71:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fb76e5f9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5f9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5f8020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5f81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5f8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5f84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fb76e60a5a0" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fb76e60a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e60a920"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e60aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e60ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e60add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e609020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e6091b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e609340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e6094d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e609660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fb76e624d60" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fb76e624d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e632180"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e632310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e6324a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e632630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e6327c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e632950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e632ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e632c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e632e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fb76e5ffa20" loc="66:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fb76e5ffa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5ffda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5fe020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5fe1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5fe340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5fe4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fb76e6053e0" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fb76e6053e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e605760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e6058f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e605a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e605c10"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e605da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fb76e60e5a0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fb76e60e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e60ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e60ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e60ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e60d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e60d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e60d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e60d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e60d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e60d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fb76e617890" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fb76e617890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e617c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e617da0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e611020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e6111b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e611340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e6114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fb76e5fba20" loc="69:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fb76e5fba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5fbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5fa020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5fa1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5fa340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5fa4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fb76e60dbe0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fb76e60dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e60c020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e60c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e60c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e60c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e60c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e60c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e60c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e60cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e60cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fb76e61ea20" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fb76e61ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e61eda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e619020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e6191b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e619340"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e6194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fb76e62b1b0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fb76e62b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e62b530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e62b6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e62b850"/>
        <function-ref name="get" scoped="" ref="0x7fb76e62b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e62bb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e62bd00"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e633020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e6331b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e633340"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e6334d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e633660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fb76e603da0" loc="62:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fb76e603da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e602180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e602310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e6024a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e602630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e6027c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fb76e62a220" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fb76e62a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e62a5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e62a730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e62a8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e62aa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e62abe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e62ad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e622020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e6221b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e622340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fb76e609a50" loc="56:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fb76e609a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e609dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e608020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e6081b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e608340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e6084d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e608660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e6087f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e608980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e608b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fb76e6138d0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fb76e6138d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e613c50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e613de0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e618020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e6181b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e618340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e6184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fb76e5fea20" loc="67:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fb76e5fea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5feda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5fc020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5fc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5fc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5fc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5fc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fb76e61be60" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fb76e61be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e620210"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e6203a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e620530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e6206c0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e620850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fb76e6041f0" loc="60:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fb76e6041f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e604570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e604700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e604890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e604a20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e604bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fb76e5faa20" loc="70:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fb76e5faa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5fada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5f9020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5f91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5f9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5f94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fb76e60b0c0" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fb76e60b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e60b440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e60b5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e60b760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e60b8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e60ba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e60bc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e60bda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e60a020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e60a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fb76e611850" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fb76e611850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e611bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e611d60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e610020"/>
        <function-ref name="get" scoped="" ref="0x7fb76e6101b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e610340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e6104d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e610660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e6107f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e610980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e610b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e610ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fb76e602b80" loc="63:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fb76e602b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e601020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e6011b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e601340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e6014d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e601660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fb76e600a20" loc="65:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fb76e600a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e600da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e5ff020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5ff1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5ff340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5ff4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e5ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fb76e601a20" loc="64:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fb76e601a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e600020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e6001b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e600340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e6004d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e600660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fb76e606570" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fb76e606570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e6068f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e606a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e606c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e606da0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e605020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fb76e607020" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fb76e607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e6073a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e607530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e6076c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e607850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e6079e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e607b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e607d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e606020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e6061b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb76e5c0aa0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb76e5c0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5c0e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb76e5c0450" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb76e5c0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5c07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb76e5bf120" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb76e5bf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5bf4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb76e5c1d80" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e5c1d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5c0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76e5c2540" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e5c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e5c28c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e5c2a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e5c2be0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e5c2d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e5c1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5c11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e5c1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5c14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e5c1660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e5c17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e5c1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb76e5b9940" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb76e5b9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5b9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb76e5b92f0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb76e5b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5b9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb76e5b8020" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb76e5b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb76e5babf0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e5babf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e5b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76e5bb3e0" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e5bb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e5bb760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e5bb8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e5bba80"/>
        <function-ref name="get" scoped="" ref="0x7fb76e5bbc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e5bbda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5ba020"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e5ba1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5ba340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e5ba4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e5ba660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e5ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e56da90" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e56da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e56de10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e56c020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e56c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e56c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e56c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e56c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e5b49d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e5b49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e5b4d50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e56e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e56e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e56e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e56e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e56e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e56e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e56e980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e56eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e56a020" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e56a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e56a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e56ede0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e56ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e56d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e56d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e56d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e56d630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e56d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e56c930" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e56c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e56ccb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e56ce40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e56b020"/>
        <function-ref name="get" scoped="" ref="0x7fb76e56b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e56b340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e56b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e56b660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e56b7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e56b980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e56bb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e56bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e564160" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e564160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5644e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e564670"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e564800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e564990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e564b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e564cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e566020" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e566020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e5663a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e566530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e5666c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e566850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e5669e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e566b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e566d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e565020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e5651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e5627a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e5627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e562b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e565480" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e565480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e565800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e565990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e565b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e565cb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e565e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e563020" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e563020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e5633a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e563530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e5636c0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e563850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e5639e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e563b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e563d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e562020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e5621b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e562340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e5624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e55d7a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e55d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e55db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e55dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e55de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e55c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e55c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e55c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e55f6d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e55f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e55fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e55fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e55fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e55e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e55e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e55e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e55e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e55e660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e55e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e55bc50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e55bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e559020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e55eac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e55eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e55ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e55d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e55d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e55d340"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e55d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e55c610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e55c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e55c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e55cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e55ccb0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e55ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e55b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e55b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e55b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e55b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e55b660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e55b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e55b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e555cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e555cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5540a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e554230"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5543c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e554550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5546e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e554870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e557b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e557b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e556020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e5561b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e556340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e5564d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e556660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e5567f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e556980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e556b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e556ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e5522f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e5522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e552670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e555020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e555020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5553a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e555530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e5556c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e555850"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e5559e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e554b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e554b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e553020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e5531b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e553340"/>
        <function-ref name="get" scoped="" ref="0x7fb76e5534d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e553660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5537f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e553980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e553b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e553ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e553e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e552020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e54d2f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e54d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e54d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e54d800"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e54d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e54db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e54dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e54de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e54f220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e54f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e54f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e54f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e54f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e54fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e54fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e54fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e54e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e54e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e54e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e54b7a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e54b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e54bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e54e610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e54e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e54e990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e54eb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e54ecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e54ee40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e54d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e54c160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e54c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e54c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e54c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e54c800"/>
        <function-ref name="get" scoped="" ref="0x7fb76e54c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e54cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e54ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e54ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e54b020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e54b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e54b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e54b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e5457a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e5457a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e545b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e545cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e545e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e544020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5441b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e544340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e5476d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e5476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e547a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e547be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e547d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e546020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e5461b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e546340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e5464d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e546660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e5467f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e543c50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e543c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e542020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e546ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e546ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e546e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e545020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e5451b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e545340"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e5454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e544610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e544610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e544990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e544b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e544cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e544e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e543020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5431b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e543340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5434d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e543660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e5437f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e543980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e53ecb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e53ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e53d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e53d230"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e53d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e53d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e53d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e53d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e540b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e540b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e53f020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e53f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e53f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e53f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e53f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e53f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e53f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e53fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e53fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e53b2f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e53b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e53b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e53e020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e53e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e53e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e53e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e53e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e53e850"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e53e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e53db40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e53db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e53c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e53c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e53c340"/>
        <function-ref name="get" scoped="" ref="0x7fb76e53c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e53c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e53c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e53c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e53cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e53cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e53ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e53b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e5352f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e5352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e535670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e535800"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e535990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e535b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e535cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e535e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e538220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e538220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e5385a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e538730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e5388c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e538a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e538be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e538d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e536020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e5361b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e536340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e5337a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e5337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e533b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e536610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e536610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e536990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e536b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e536cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e536e40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e535020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e534160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e534160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e5344e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e534670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e534800"/>
        <function-ref name="get" scoped="" ref="0x7fb76e534990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e534b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e534cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e534e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e533020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e5331b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e533340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e5334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e52e7a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e52e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e52eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e52ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e52ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e52d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e52d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e52d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e5306d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e5306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e530a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e530be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e530d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e52f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e52f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e52f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e52f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e52f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e52f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e52cc50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e52cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e52b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e52fac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e52fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e52fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e52e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e52e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e52e340"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e52e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e52d610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e52d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e52d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e52db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e52dcb0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e52de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e52c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e52c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e52c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e52c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e52c660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e52c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e52c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76e526cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76e526cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5250a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76e525230"/>
        <function-ref name="captured" scoped="" ref="0x7fb76e5253c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e525550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e5256e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76e525870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb76e529b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb76e529b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e527020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e5271b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e527340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e5274d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e527660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e5277f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e527980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e527b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e527ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb76e5232f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb76e5232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e523670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb76e526020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb76e526020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e5263a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e526530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e5266c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e526850"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e5269e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e525b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e525b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e524020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e5241b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e524340"/>
        <function-ref name="get" scoped="" ref="0x7fb76e5244d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e524660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e5247f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e524980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e524b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e524ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e524e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e523020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fb76e51d240" loc="7:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb76e51d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e51d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fb76e521a90" loc="4:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb76e521a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e521e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fb76e51e260" loc="5:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb76e51e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e51e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fb76e51e9f0" loc="6:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb76e51e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76e51ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fb76e81d4c0" loc="55:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb76e81d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb76e81d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fb76eb323b0" loc="51:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb76eb323b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb76eb32730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb76eb328c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb76eb32a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fb76e959bc0" loc="52:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fb76e959bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fb76ea95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fb76e67eb40" loc="39:../../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb76e67eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb76e4e6b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb76e4e61b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb76e4e6340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb76e4e64d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb76e4e6020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb76e4e6660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb76e4e67f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb76e4e6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fb76e4dadc0" loc="60:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb76e4dadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e4d9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb76e4e7590" loc="57:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb76e4e7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb76e4e7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fb76e4da6c0" loc="59:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fb76e4da6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e4daa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fb76e4e7c00" loc="58:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb76e4e7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e4da020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb76e4da1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb76e4da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb76ec0a410" loc="48:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb76ec0a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76ec0a790"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76ec0a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb76eb9b3a0" loc="47:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb76eb9b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76eb9b720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb76eb9b8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb76eb9ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb76e743040" loc="56:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb76e743040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76e7433c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76e743550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fb76e73d490" loc="57:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb76e73d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb76e73d810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb76e73d9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb76e73db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb76e745140" loc="55:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb76e745140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e7454c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb76e745650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb76e7457e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7fb76e44c9f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7fb76e44c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fb76e44cd70"/>
        <function-ref name="setRoot" scoped="" ref="0x7fb76e44e020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fb76e44e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fb76e4458b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76e4458b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76e445c30"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76e445dc0"/>
        <function-ref name="start" scoped="" ref="0x7fb76e44a020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e44a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fb76e482750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb76e482750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb76e482ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb76e3c37a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76e3c37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e3c3b20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76e3c3cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76e3c3e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76e3da020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76e3da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb76e3cc5a0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76e3cc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76e3cca20"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76e3ccbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76e3ccd40"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76e419020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76e4191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7fb76e3dcb50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7fb76e3dcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7fb76e442020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7fb76e4421b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7fb76e442340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb76e3e6b60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76e3e6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76e43c020"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76e43c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7fb76e43da20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7fb76e43da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7fb76e43dda0"/>
        <function-ref name="bind" scoped="" ref="0x7fb76e448020"/>
        <function-ref name="sendtov" scoped="" ref="0x7fb76e4481b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7fb76e448340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fb76e39e5c0" loc="238:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7fb76e39e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76e39e940"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76e39ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7fb76e449d90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7fb76e449d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76e44d180"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e44d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7fb76e463820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7fb76e463820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76e461cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e46d300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76e4610d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76e46dc00"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76e460660"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76e4601e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76e46d780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76e481480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76e4616e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76e481950"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e481e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fb76e3d8130" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76e3d8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76e3d84b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76e46e0d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76e46e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76e46e450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76e46e5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76e46e770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76e46e900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76e46ea90"/>
        <function-ref name="get" scoped="" ref="0x7fb76e46ec20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76e46edb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76e4824d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e482020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76e4821b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76e482340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7fb76e44f6b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7fb76e44f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7fb76e44fa30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76e459b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7fb76e459ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7fb76e459020"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76e4591b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7fb76e459340"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76e4594d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7fb76e459660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7fb76e44fd50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7fb76e4597f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7fb76e459980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7fb76e44fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb76e460c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e460c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76e45b170"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e45e720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76e45c510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76e45c090"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76e45ba70"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76e45b5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76e45eba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76e45f8a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76e45cb20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76e45fd70"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e45e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb76e38dad0" loc="46:../../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76e38dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76e38de50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76e38a020"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76e38a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76e38a340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76e38a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e38a660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76e38a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76e38ae30"/>
        <function-ref name="set" scoped="" ref="0x7fb76e38a980"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76e38ab10"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76e38aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fb76e37ea90" loc="50:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb76e37ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e37ee10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e384020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e384340"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e384660"/>
        <function-ref name="set" scoped="" ref="0x7fb76e3847f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e384980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e389db0" loc="46:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e389db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e386180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fb76e384ca0" loc="51:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb76e384ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e37d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e37d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e37d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e37d550"/>
        <function-ref name="get" scoped="" ref="0x7fb76e37d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e37d870"/>
        <function-ref name="set" scoped="" ref="0x7fb76e37da00"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e37db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb76e386400" loc="47:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76e386400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76e386780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76e386910"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76e386aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76e386c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76e386dc0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e385020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76e3851b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76e3857f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e385340"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76e3854d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76e385660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fb76e37c020" loc="52:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb76e37c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e37c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e37c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e37c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e37c850"/>
        <function-ref name="get" scoped="" ref="0x7fb76e37c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e37cb70"/>
        <function-ref name="set" scoped="" ref="0x7fb76e37cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e37b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fb76e3875a0" loc="41:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb76e3875a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e387920"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e387ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e387c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e387dd0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e360020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3601b0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e360340"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fb76e360830" loc="42:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb76e360830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e360bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e360d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e35f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e35f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e35f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e35f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e35f660"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e35f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fb76e35edd0" loc="44:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e35edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e35d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fb76e35fb50" loc="43:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb76e35fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e35e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e35e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e35e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e35e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e35e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e35e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e35e980"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e35eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb76e347810" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb76e347810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e347b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e347d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e345020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e345340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e345660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3457f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e345980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e345b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e345ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e345e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e344020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3442b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e344440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb76e332810" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb76e332810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e332b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e332d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e331020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e331340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e331660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3317f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e331980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e331b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e331ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e331e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e330020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3302b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e330440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fb76e2e9ca0" loc="145:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fb76e2e9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2e70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2e7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2e73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2e7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2e76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2e7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2e7a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2e7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2e7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2e6020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2e61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2e6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2e64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2e6760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2e68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fb76e2c4cb0" loc="165:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fb76e2c4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2c30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2c3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2c33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2c3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2c36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2c3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2c3a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2c3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2c3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2c2020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2c21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2c2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2c24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2c2760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2c28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fb76e2e6cc0" loc="146:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fb76e2e6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2e50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2e5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2e53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2e5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2e56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2e5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2e5a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2e5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2e5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2e4020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2e4760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fb76e32e810" loc="71:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fb76e32e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e32eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e32ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e32d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e32d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e32d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e32d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e32d660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e32d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e32d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e32db10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e32dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e32de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e32c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e32c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e32c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fb76e31a9a0" loc="84:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fb76e31a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e31ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e319020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e319340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e319660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3197f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e319980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e319b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e319ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e319e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e318020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e318440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3185d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fb76e3059a0" loc="97:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fb76e3059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e305d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e304020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e304340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3044d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e304660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3047f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e304980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e304b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e304ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e304e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e303020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3031b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e303440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3035d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fb76e2f59a0" loc="108:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fb76e2f59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2f5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2f4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2f41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2f4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2f44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2f4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2f47f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2f4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2f4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2f4ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2f4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2f3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2f31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2f3440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2f35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fb76e2e0cc0" loc="149:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fb76e2e0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2df230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2df550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2dfa00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2de020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2de760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fb76e2d0cb0" loc="159:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fb76e2d0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2cf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2cf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2cf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2cf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2cf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2cfa00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2cfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2cfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2ce020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2ce760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fb76e2bccc0" loc="171:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fb76e2bccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2bb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2bb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2bb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2bb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2bb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2bba00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2bbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2bbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2ba020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2ba760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb76e340810" loc="56:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb76e340810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e340b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e340d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e33f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e33f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e33f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e33f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e33f660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e33f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e33f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e33fb10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e33fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e33fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e33e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e33e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e33e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fb76e2decc0" loc="150:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fb76e2decc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2dd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2dd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2dd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2dd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2dd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2dda00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2ddb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2ddd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2dc020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2dc760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb76e33c810" loc="61:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb76e33c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e33cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e33cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e33b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e33b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e33b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e33b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e33b660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e33b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e33b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e33bb10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e33bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e33be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e33a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e33a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e33a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fb76e328810" loc="74:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fb76e328810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e328b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e328d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e327020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e327340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e327660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e327980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e327b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e327ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e327e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e326020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3262b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e326440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fb76e3139a0" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fb76e3139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e313d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e312020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3121b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e312340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e312660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3127f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e312980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e312b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e312ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e312e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e311020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3111b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e311440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3115d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fb76e2ff9a0" loc="100:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fb76e2ff9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2ffd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2fe020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2fe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2fe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2fe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2fe7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2fe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2feb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2feca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2fee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2fd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2fd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2fd440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2fd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fb76e2ef9a0" loc="111:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fb76e2ef9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2efd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2ee020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2ee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2ee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2ee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2ee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2ee7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2ee980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2eeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2eeca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2eee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2ed020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2ed1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2ed440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2ed5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb76e34b810" loc="51:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb76e34b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e34bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e34bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e34a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e34a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e34a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e34a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e34a660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e34a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e34a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e34ab10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e34aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e34ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e349020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3492b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e349440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb76e336810" loc="64:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb76e336810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e336c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e336e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e335020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e335340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e335660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3357f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e335980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e335b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e335ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e335e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e334020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3342b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e334440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fb76e322810" loc="77:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fb76e322810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e322b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e322d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e321020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e321340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e321660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3217f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e321980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e321b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e321ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e321e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e320020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3202b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e320440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fb76e2ebcc0" loc="144:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fb76e2ebcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2ea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2ea230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2ea3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2ea550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2ea6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2ea870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2eaa00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2eab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2ead20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2e9020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2e91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2e9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2e94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2e9760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fb76e2cacb0" loc="162:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fb76e2cacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2c9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2c93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2c9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2c96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2c9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2c9a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2c9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2c9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2c8020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2c8760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fb76e2becb0" loc="169:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fb76e2becb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2bd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2bd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2bd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2bd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2bd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2bda00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2bdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2bdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2bc020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2bc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2bc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2bc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2bc760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2bc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fb76e2d6cc0" loc="155:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fb76e2d6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2d5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2d53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2d5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2d56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2d5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2d5a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2d5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2d5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2d4020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2d4760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fb76e31e810" loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fb76e31e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e31ed90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e31d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e31d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e31d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e31d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e31d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e31d7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e31d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e31db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e31dca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e31de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e31c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e31c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e31c440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e31c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fb76e3099a0" loc="95:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fb76e3099a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e309d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e308020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3081b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e308340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3084d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e308660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3087f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e308980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e308b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e308ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e308e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e307020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3071b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e307440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3075d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fb76e2f99a0" loc="106:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fb76e2f99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2f9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2f8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2f81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2f8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2f84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2f8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2f87f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2f8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2f8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2f8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2f8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2f7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2f71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2f7440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2f75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fb76e2c8cb0" loc="163:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fb76e2c8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2c7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2c73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2c7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2c76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2c7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2c7a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2c7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2c7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2c6020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2c6760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fb76e2dccb0" loc="152:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fb76e2dccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2db230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2db3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2db550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2db6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2db870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2dba00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2dbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2dbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2da020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2da760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb76e344810" loc="54:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb76e344810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e344b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e344d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e343020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e343340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e343660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3437f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e343980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e343b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e343ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e343e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e342020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3422b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e342440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb76e330810" loc="67:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb76e330810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e330b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e330d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e32f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e32f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e32f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e32f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e32f660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e32f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e32f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e32fb10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e32fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e32fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e32e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e32e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e32e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fb76e2fd9a0" loc="104:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fb76e2fd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2fdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2fc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2fc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2fc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2fc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2fc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2fc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2fc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2fcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2fcca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2fce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2fb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2fb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2fb440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2fb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fb76e32c810" loc="72:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fb76e32c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e32cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e32cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e32b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e32b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e32b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e32b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e32b660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e32b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e32b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e32bb10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e32bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e32be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e32a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e32a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e32a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fb76e3189a0" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fb76e3189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e318d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e316020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3161b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e316340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e316660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3167f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e316980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e316b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e316ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e316e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e315020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3151b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e315440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3155d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fb76e3039a0" loc="98:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fb76e3039a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e303d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e302020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3021b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e302340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3024d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e302660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3027f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e302980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e302b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e302ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e302e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e301020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3011b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e301440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3015d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fb76e2f39a0" loc="109:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fb76e2f39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2f3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2f2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2f21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2f2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2f24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2f2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2f27f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2f2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2f2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2f2ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2f2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2f1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2f11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2f1440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2f15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fb76e2d8cc0" loc="154:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fb76e2d8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2d70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2d7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2d73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2d7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2d76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2d7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2d7a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2d7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2d7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2d6020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2d6760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb76e34d870" loc="49:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb76e34d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e34dbf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e34dd80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e358020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e358340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e358660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3587f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e358980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e358b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e358ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e358e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e357020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3572b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e357440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb76e33a810" loc="62:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb76e33a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e33ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e33ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e339020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e339340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e339660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e339980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e339b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e339ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e339e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e338020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3382b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e338440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fb76e326810" loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fb76e326810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e326b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e326d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e325020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e325340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e325660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e325980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e325b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e325ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e325e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e324020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3242b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e324440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fb76e3119a0" loc="88:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fb76e3119a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e311d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e310020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e310340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3104d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e310660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3107f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e310980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e310b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e310ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e310e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e30f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e30f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e30f440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e30f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fb76e2d4cc0" loc="156:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fb76e2d4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2d30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2d3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2d33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2d3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2d36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2d3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2d3a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2d3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2d3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2d2020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2d21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2d2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2d24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2d2760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2d28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fb76e2cecb0" loc="160:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fb76e2cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2cd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2cd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2cd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2cd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2cd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2cda00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2cdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2cdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2cc020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2cc760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fb76e2c2cb0" loc="166:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fb76e2c2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2c10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2c1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2c13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2c1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2c16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2c1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2c1a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2c1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2c1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2c0020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2c01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2c0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2c04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2c0760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2c08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fb76e30d9a0" loc="93:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fb76e30d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e30dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e30c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e30c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e30c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e30c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e30c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e30c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e30c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e30cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e30cca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e30ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e30b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e30b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e30b440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e30b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fb76e2d2cc0" loc="157:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fb76e2d2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2d10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2d1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2d13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2d1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2d16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2d1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2d1a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2d1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2d1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2d0020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2d01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2d0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2d04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2d0760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb76e349810" loc="52:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb76e349810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e349b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e349d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e348020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e348340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e348660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3487f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e348980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e348b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e348ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e348e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e347020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3472b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e347440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb76e334810" loc="65:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb76e334810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e334b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e334d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e333020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e333340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e333660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3337f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e333980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e333b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e333ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e333e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e332020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3322b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e332440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fb76e320810" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fb76e320810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e320b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e320d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e31f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e31f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e31f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e31f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e31f660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e31f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e31f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e31fb10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e31fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e31fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e31e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e31e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e31e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fb76e2dacc0" loc="153:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fb76e2dacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2d9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2d93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2d9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2d96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2d9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2d9a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2d9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2d9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2d8020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2d8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2d84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2d8760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2d88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fb76e2c6cb0" loc="164:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fb76e2c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2c50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2c5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2c53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2c5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2c56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2c5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2c5a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2c5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2c5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2c4020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2c4760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fb76e31c9a0" loc="83:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fb76e31c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e31cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e31b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e31b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e31b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e31b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e31b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e31b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e31b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e31bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e31bca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e31be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e31a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e31a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e31a440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e31a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fb76e3079a0" loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fb76e3079a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e307d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e306020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3061b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e306340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3064d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e306660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3067f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e306980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e306b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e306ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e306e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e305020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3051b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e305440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3055d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fb76e2f79a0" loc="107:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fb76e2f79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2f7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2f6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2f61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2f6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2f64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2f6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2f67f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2f6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2f6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2f6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2f6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2f5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2f51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2f5440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2f55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb76e342810" loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb76e342810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e342b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e342d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e341020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e341340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e341660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3417f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e341980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e341b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e341ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e341e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e340020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3402b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e340440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fb76e2fb9a0" loc="105:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fb76e2fb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2fbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2fa020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2fa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2fa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2fa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2fa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2fa7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2fa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2fab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2faca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2fae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2f9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2f91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2f9440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2f95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb76e33e810" loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb76e33e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e33eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e33ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e33d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e33d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e33d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e33d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e33d660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e33d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e33d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e33db10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e33dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e33de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e33c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e33c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e33c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fb76e32a810" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fb76e32a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e32ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e32ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e329020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e329340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e329660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e329980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e329b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e329ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e329e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e328020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3282b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e328440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fb76e3159a0" loc="86:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fb76e3159a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e315d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e314020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e314340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e314660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3147f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e314980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e314b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e314ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e314e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e313020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e313440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3135d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fb76e3019a0" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fb76e3019a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e301d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e300020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e3001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e300340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e3004d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e300660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e3007f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e300980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e300b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e300ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e300e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2ff020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2ff1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2ff440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2ff5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fb76e2f19a0" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fb76e2f19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2f1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2f0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2f04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2f0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2f07f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2f0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2f0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2f0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2f0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2ef020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2ef1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2ef440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2ef5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb76e357810" loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb76e357810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e357b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e357d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e34c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e34c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e34c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e34c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e34c660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e34c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e34c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e34cb10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e34cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e34ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e34b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e34b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e34b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb76e338810" loc="63:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb76e338810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e338b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e338d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e337020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e337340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e337660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3377f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e337980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e337b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e337ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e337e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e336020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3362b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e336440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fb76e324810" loc="76:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fb76e324810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e324b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e324d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e323020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e3231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e323340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e3234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e323660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e3237f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e323980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e323b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e323ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e323e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e322020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e3222b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e322440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fb76e30f9a0" loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fb76e30f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e30fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e30e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e30e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e30e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e30e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e30e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e30e7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e30e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e30eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e30eca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e30ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e30d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e30d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e30d440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e30d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fb76e2e2ca0" loc="148:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fb76e2e2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2e1a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2e0020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2e0760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fb76e2cccb0" loc="161:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fb76e2cccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2cb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2cb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2cb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2cb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2cb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2cb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2cba00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2cbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2cbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2ca020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2ca760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fb76e2e4cc0" loc="147:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fb76e2e4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2e3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2e33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2e3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2e36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2e3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2e3a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2e3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2e3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2e2020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2e2760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fb76e30b9a0" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fb76e30b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e30bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e30a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e30a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e30a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e30a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e30a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e30a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e30a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e30ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e30aca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e30ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e309020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e3091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e309440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e3095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fb76e2c0cb0" loc="168:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fb76e2c0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2bf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2bf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2bf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2bf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2bf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2bfa00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2bfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2bfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2be020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2be760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fb76e2bacc0" loc="172:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fb76e2bacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2b8a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2b7020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2b7760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fb76e2ed9f0" loc="143:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fb76e2ed9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2ec1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e2ec350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2ec4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e2ec670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2ec800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2ec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2ecb20"/>
        <function-ref name="get" scoped="" ref="0x7fb76e2eccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2ece40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2eb020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2eb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2eb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2eb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2eb760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2eb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e2b4d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e2b4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e28d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e28d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e28d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e28d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e28d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e28d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e28da40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e28dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e28dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e28c020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e28c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e28c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e28c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e28c760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e28c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e289740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e289740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e289ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e289c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e289de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e288020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e288340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2884d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e288660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e288980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e288b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e288ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e288e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e287120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e284100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e284100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e284480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e284610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2847a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e284930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e284ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e284c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e284de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e283020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e283340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e283660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e283a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e283c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e280d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e280d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e27f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e27f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e27f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e27f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e27f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e27f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e27fa40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e27fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e27fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e27e020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e27e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e27e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e27e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e27e760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e27e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e27b740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e27b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e27bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e27bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e27bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e27a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e27a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e27a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e27a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e27a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e27a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e27a980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e27ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e27aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e27ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e279120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e276100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e276100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e276480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e276610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2767a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e276930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e276ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e276c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e276de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e275020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2751b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e275340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2754d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e275660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2757f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e275a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e275c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e272d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e272d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2700e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e270270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e270400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e270590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e270720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2708b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e270a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e270bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e270d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e26f020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e26f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e26f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e26f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e26f760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e26f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e26c740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e26c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e26cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e26cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e26cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e26b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e26b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e26b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e26b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e26b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e26b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e26b980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e26bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e26bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e26be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e26a120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e26a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e267100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e267100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e267480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e267610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2677a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e267930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e267ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e267c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e267de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e266020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e266340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e266660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e266a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e266c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e263d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e263d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2620e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e262270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e262400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e262590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e262720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2628b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e262a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e262bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e262d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e261020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e261340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e261760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e25e740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e25e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e25eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e25ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e25ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e25d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e25d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e25d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e25d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e25d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e25d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e25d980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e25db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e25dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e25de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e25c120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e25c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e259100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e259100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e259480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e259610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2597a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e259930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e259ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e259c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e259de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e258020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e258340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e258660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e258a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e258c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e255d80" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e255d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e254180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e254310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2544a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e254630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2547c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e254950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e254ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e254c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e254e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e253020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e253340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e253760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e250740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e250740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e250ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e250c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e250de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e24f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e24f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e24f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e24f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e24f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e24f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e24f980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e24fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e24fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e24fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e24e120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e24e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e24b100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e24b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e24b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e24b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e24b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e24b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e24bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e24bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e24bde0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e249020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2491b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e249340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2494d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e249660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2497f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e249a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e249c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e246d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e246d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2450e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e245270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e245400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e245590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e245720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e245a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e245bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e245d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e244020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e244340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e244760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e241740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e241740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e241ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e241c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e241de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e240020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e240340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2404d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e240660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e240980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e240b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e240ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e240e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e23f120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e23f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e23c100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e23c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e23c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e23c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e23c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e23c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e23cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e23cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e23cde0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e23b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e23b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e23b340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e23b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e23b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e23b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e23ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e23bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e238d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e238d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2370e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e237270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e237400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e237590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e237720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e237a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e237bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e237d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e236020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e236340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e236760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e233740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e233740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e233ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e233c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e233de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e232020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e232340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2324d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e232660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e232980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e232b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e232ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e232e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e231120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e22e100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e22e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e22e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e22e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e22e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e22e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e22eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e22ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e22ede0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e22d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e22d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e22d340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e22d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e22d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e22d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e22da80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e22dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e22ad10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e22ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2290e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e229270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e229400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e229590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e229720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e2298b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e229a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e229bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e229d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e228020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e228340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e228760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e224740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e224740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e224ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e224c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e224de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e223020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e223340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2234d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e223660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2237f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e223980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e223b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e223ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e223e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e222120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e21f100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e21f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e21f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e21f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e21f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e21f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e21fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e21fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e21fde0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e21e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e21e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e21e340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e21e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e21e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e21e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e21ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e21ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e21be60" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e21be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e21a210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e21a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e21a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e21a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e21a850"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e21a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e21ab70"/>
        <function-ref name="get" scoped="" ref="0x7fb76e21ad00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e219020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e2191b0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e219340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e2194d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e219660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e2198f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e219a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e2169f0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e2169f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e216d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e215020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2151b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e215340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2154d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e215660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2157f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e215980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e215b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e215ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e215e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e214020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2141b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e214440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2145d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e211460" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e211460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e2117e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e211970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e211b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e211c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e211e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e210020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2101b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e210340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2104d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e210660"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2107f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e210980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e210b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e210da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e20f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e20de00" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e20de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e20c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e20c350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e20c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e20c670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e20c800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e20c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e20cb20"/>
        <function-ref name="get" scoped="" ref="0x7fb76e20ccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e20ce40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e20b020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e20b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e20b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e20b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e20b760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e20b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e208740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e208740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e208ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e208c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e208de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e207020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e2071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e207340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e2074d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e207660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e207980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e207b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e207ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e207e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e206120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e2062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e203100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e203100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e203480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e203610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e2037a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e203930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e203ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e203c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e203de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e201020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e2011b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e201340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e2014d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e201660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e2017f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e201a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e201c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1fed10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1fed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1fd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1fd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1fd400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1fd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1fd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1fd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1fda40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1fdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1fdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1fc020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1fc760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1f9740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1f9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1f9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1f9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1f9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1f8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1f84d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1f8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1f8980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1f8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1f8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1f8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1f7120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1f4100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1f4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1f4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1f47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1f4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1f4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1f4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1f4de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1f3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1f31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1f3340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1f34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1f3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1f37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1f3a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1f3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1f0d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1f0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1ef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1ef270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1ef400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1ef590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1ef720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1ef8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1efa40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1efbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1efd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1ee020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1ee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1ee760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1eb740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1eb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1ebac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1ebc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1ebde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1ea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1ea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1ea4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1ea660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1ea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1ea980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1eab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1eaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1eae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1e9120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1e6100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1e6480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1e6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1e67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1e6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1e6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1e6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1e6de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1e5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1e51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1e5340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1e54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1e5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1e57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1e5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1e5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1e2d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1e2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1e10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1e1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1e1400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1e1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1e1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1e18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1e1a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1e1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1e1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1e0020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1e0760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1dd740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1dd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1ddac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1ddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1ddde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1db340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1db4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1db660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1db7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1db980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1dbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1dbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1dbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1da120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1d7100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1d7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1d7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1d77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1d7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1d7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1d7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1d7de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1d6340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1d3d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1d3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1d20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1d2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1d2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1d2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1d2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1d28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1d2a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1d2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1d2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1d1020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1d1760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1ce740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1ce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1ceac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1cec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1cede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1cd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1cd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1cd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1cd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1cd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1cd980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1cdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1cdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1cde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1cc120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1c9100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1c9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1c9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1c97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1c9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1c9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1c9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1c9de0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1c81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1c8340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1c84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1c8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1c87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1c8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1c5d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1c5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1c40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1c4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1c4400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1c4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1c4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1c48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1c4a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1c4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1c4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1c3020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1c3760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1c0740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1c0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1c0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1c0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1c0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1bf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1bf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1bf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1bf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1bf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1bf980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1bfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1bfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1bfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1be120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1bb100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1bb480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1bb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1bb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1bb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1bbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1bbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1bbde0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1ba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1ba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1ba340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1ba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1ba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1ba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1baa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1bac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1b6d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1b50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1b5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1b5400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1b5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1b5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1b58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1b5a40"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1b5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1b5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1b4020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1b4760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1b1740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1b1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1b1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1b1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1b1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1b0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1b04d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1b0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1b07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1b0980"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1b0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1b0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1b0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1af120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb76e1ac100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb76e1ac100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1ac480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1ac610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e1ac7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1ac930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1acac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1acc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1acde0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1ab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e1ab1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1ab340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e1ab4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1ab660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e1ab7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1aba80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e1abc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76e1342f0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76e1342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e134670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e134800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e134990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e134b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e134cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e134e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e133020"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e133340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e1334d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e133660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e1337f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e133980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e133c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e133da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76e145020" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76e145020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e1453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e145530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1456c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e145850"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1459e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e145b70"/>
        <function-ref name="set" scoped="" ref="0x7fb76e145d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e134020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76e130de0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76e130de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e12f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e12f310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e12f4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e12f630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e12f7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e12f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e12fae0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e12fc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e12fe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e12e020"/>
        <function-ref name="set" scoped="" ref="0x7fb76e12e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e12e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e12e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e12e760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e12e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76e131b90" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76e131b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e130020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e1301b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e130340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e1304d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76e130660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e1307f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76e130980"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e130b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76e12b930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76e12b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e12bcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e12be40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76e129020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e1291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e129340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76e1294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e129660"/>
        <function-ref name="get" scoped="" ref="0x7fb76e1297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76e129980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76e129b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76e129ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76e129e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76e128020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76e1282b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e128440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76e12c710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76e12c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76e12ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76e12cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76e12cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76e12b020"/>
        <function-ref name="get" scoped="" ref="0x7fb76e12b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76e12b340"/>
        <function-ref name="set" scoped="" ref="0x7fb76e12b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76e12b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76e11c640" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76e11c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76df70c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76df721e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76df70020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76df72ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76df6f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76df6f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76df72660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76df73390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76df70630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76df73860"/>
        <function-ref name="stop" scoped="" ref="0x7fb76df73d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb76e113610" loc="49:../../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e113610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76e110c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e1111e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76e110020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76e111ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76e10e590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76e10e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76e111660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76e112390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76e110630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76e112860"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e112d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb76e1091d0" loc="46:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb76e1091d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76e106630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e108c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76e1079d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76e107550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76e105020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76e106ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76e1070d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76e109dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76e106020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76e1082e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e1087b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb76e101a80" loc="47:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb76e101a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76e1036f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e10b400" loc="45:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e10b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e10b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76e00f020" loc="44:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76e00f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76e00c870"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e00e840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76e00c220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76e00ed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76e00cd30"/>
        <function-ref name="start" scoped="" ref="0x7fb76e00fe30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76e00e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76e010760" loc="43:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76e010760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76e010ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76c044ce0" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76c044ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76c041670"/>
        <function-ref name="fired" scoped="" ref="0x7fb76c042550"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76c041020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76c042a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76c041b30"/>
        <function-ref name="start" scoped="" ref="0x7fb76c043b60"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c042090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c044490" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c044490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c044810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb76c02b5d0" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76c02b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76c02b950"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76c02bae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76c02bc70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76c02be00"/>
        <function-ref name="fired" scoped="" ref="0x7fb76c02a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb76c02fc50" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76c02fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c02d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76c02d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76c02d340"/>
        <function-ref name="get" scoped="" ref="0x7fb76c02d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76c02d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76c02d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76c02d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76c02db10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76c02dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76c02de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76c02c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb76c02c2b0" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76c02c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76c02c630"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76c02c7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76c02c950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76c02cae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76c02cc70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76c02ce00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76c02b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76c02b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76c02b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb76e0dfba0" loc="52:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76e0dfba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76e0dd020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76e0dd1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76e0dd340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76e0dd4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76e0dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb76e0e24d0" loc="50:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0e24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e0e2850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e0e29e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e0e2b70"/>
        <function-ref name="get" scoped="" ref="0x7fb76e0e2d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e0e1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e0e11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e0e1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e0e14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e0e1660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e0e17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e0e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb76e0e0280" loc="51:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76e0e0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76e0e0600"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76e0e0790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e0e0920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76e0e0ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76e0e0c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e0e0dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76e0df020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76e0df1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76e0df340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb76c021440" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76c021440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76c0217c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76c021950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76c021ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76c021c70"/>
        <function-ref name="fired" scoped="" ref="0x7fb76c021e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb76c024910" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76c024910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c024c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76c024e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76c023020"/>
        <function-ref name="get" scoped="" ref="0x7fb76c0231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76c023340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76c0234d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76c023660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76c0237f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76c023980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76c023b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76c023ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76c028720" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76c028720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76c024020"/>
        <function-ref name="fired" scoped="" ref="0x7fb76c025020"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76c0259a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76c0254e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76c0244e0"/>
        <function-ref name="start" scoped="" ref="0x7fb76c0275b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c027ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c029e60" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c029e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c028210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb76c022020" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76c022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76c0223a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76c022530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76c0226c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76c022850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76c0229e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76c022b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76c022d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76c021020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76c0211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb76e08d020" loc="43:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76e08d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76e08de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e08c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e08c340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e08ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fb76e084020" loc="43:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb76e084020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76e084e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e083800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e083340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e083cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb76e0702c0" loc="45:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76e0702c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76e070640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76e0707d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76e070960"/>
        <function-ref name="get" scoped="" ref="0x7fb76e070af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76e070c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e070e10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76e06f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e06f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e06f340"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76e06f4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76e06f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb76e07f0a0" loc="44:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76e07f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76e072020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e0729a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e0724e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e072e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb76e04e540" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb76e04e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76e04d3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e04dd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e04d890"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e04c260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb76e0510f0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76e0510f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76e050020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76e0509a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76e0504e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76e050e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76c03e140" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76c03e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76c03bb30"/>
        <function-ref name="fired" scoped="" ref="0x7fb76c03c9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76c03b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76c03b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76c03a020"/>
        <function-ref name="start" scoped="" ref="0x7fb76c03c020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c03c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb76c038b90" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76c038b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76c0344e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76c0354e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76c035e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76c0359a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76c0349a0"/>
        <function-ref name="start" scoped="" ref="0x7fb76c0369d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c035020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76c03a690" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76c03a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76c0395b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76c038020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76c039a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76c0384e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fb76dfda490" loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fb76dfda490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dfda810"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dfda9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fb76dfdd1d0" loc="49:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76dfdd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dfdbb30"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dfdc9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76dfdb4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dfdb020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76dfda020"/>
        <function-ref name="start" scoped="" ref="0x7fb76dfdc020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dfdc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76dfe4cf0" loc="48:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76dfe4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dfdf220"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dfe17c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dfe0590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dfe0110"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dfdfb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dfdf6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dfe1c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dfe2940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dfe0ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dfe2e10"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dfe1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fb76df8ae80" loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fb76df8ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76df88220"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76df883b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fb76df8fc30" loc="49:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fb76df8fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76df8a110"/>
        <function-ref name="fired" scoped="" ref="0x7fb76df8c6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76df8b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76df8b020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76df8aa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76df8a590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76df8cb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76df8d860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76df8bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76df8dd30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76df8c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76df95690" loc="48:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76df95690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76df90cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76df92260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76df90090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76df92ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76df8f680"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76df8f1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76df92700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76df93390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76df906c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76df93880"/>
        <function-ref name="stop" scoped="" ref="0x7fb76df93d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb76df86cf0" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb76df86cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76df85980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76df7b020" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76df7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76df7be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76df7a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76df7a340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76df7acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76df6d020" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76df6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76df69630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76df6ca60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76df6a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76df6a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76df68020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76df69ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76df6a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76df6dc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76df69020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76df6c110"/>
        <function-ref name="stop" scoped="" ref="0x7fb76df6c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fb76df644e0" loc="46:../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76df644e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76df64860"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76df649f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fb76df5f370" loc="45:../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fb76df5f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76df64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76df67500" loc="44:../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76df67500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76df67880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fb76df5b4e0" loc="48:../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76df5b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76df5b860"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76df5b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fb76df5c390" loc="47:../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fb76df5c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76df5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76df62a90" loc="46:../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76df62a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76df62e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7fb76df3ee60" loc="72:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7fb76df3ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7fb76df4c210"/>
        <function-ref name="isRoot" scoped="" ref="0x7fb76df4c3a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7fb76df4c530"/>
        <function-ref name="hasParent" scoped="" ref="0x7fb76df4c6c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76df4c850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7fb76df4c9e0"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76df4cb70"/>
        <function-ref name="getEtx" scoped="" ref="0x7fb76df4cd00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7fb76df4b020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7fb76df4b1b0"/>
        <function-ref name="isParent" scoped="" ref="0x7fb76df4b340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7fb76df4b4d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76df4b660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7fb76df4b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7fb76df3ca80" loc="76:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7fb76df3ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76df3ce00"/>
        <function-ref name="recv" scoped="" ref="0x7fb76df3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76df4bbb0" loc="73:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76df4bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76df3c020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76df3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7fb76df483b0" loc="71:../../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7fb76df483b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76df48730"/>
        <function-ref name="recv" scoped="" ref="0x7fb76df488c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7fb76dee1720" loc="91:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76dee1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7fb76dee1aa0"/>
        <function-ref name="initiate" scoped="" ref="0x7fb76dee1c30"/>
        <function-ref name="linkResult" scoped="" ref="0x7fb76dee1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76deeea50" loc="89:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76deeea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76deeedd0"/>
        <function-ref name="changed" scoped="" ref="0x7fb76def4020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76def41b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76def4340"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76def44d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76def4660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76def47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7fb76defbc70" loc="86:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7fb76defbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76defe020"/>
        <function-ref name="recv" scoped="" ref="0x7fb76defe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7fb76decf8a0" loc="93:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76decf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7fb76dedf660"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7fb76decfdb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7fb76dedf020"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7fb76dedf1b0"/>
        <function-ref name="matchContext" scoped="" ref="0x7fb76dedf340"/>
        <function-ref name="getPrefix" scoped="" ref="0x7fb76decfc20"/>
        <function-ref name="getContext" scoped="" ref="0x7fb76dedf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7fb76ded85f0" loc="92:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7fb76ded85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fb76ded8970"/>
        <function-ref name="OCP" scoped="" ref="0x7fb76ded8b00"/>
        <function-ref name="objectSupported" scoped="" ref="0x7fb76ded8c90"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76ded8e20"/>
        <function-ref name="resetRank" scoped="" ref="0x7fb76dee5020"/>
        <function-ref name="getOCP" scoped="" ref="0x7fb76dee51b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7fb76dee5340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7fb76dee54d0"/>
        <function-ref name="getParent" scoped="" ref="0x7fb76dee5660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7fb76dee57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7fb76df02800" loc="80:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76df02800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7fb76df02b80"/>
        <function-ref name="isRoot" scoped="" ref="0x7fb76df02d10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7fb76df01020"/>
        <function-ref name="hasParent" scoped="" ref="0x7fb76df011b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76df01340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7fb76df014d0"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76df01660"/>
        <function-ref name="getEtx" scoped="" ref="0x7fb76df017f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7fb76df01980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7fb76df01b10"/>
        <function-ref name="isParent" scoped="" ref="0x7fb76df01ca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7fb76df01e30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76df00020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7fb76df002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7fb76defb580" loc="83:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7fb76defb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76defb900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7fb76defd760" loc="88:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7fb76defd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7fb76defdae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76defab10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7fb76defaca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7fb76defa020"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76defa1b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7fb76defa340"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76defa4d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7fb76defa660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7fb76defde00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7fb76defa7f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7fb76defa980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7fb76defdc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7fb76dee6580" loc="90:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76dee6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7fb76dee6900"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7fb76dee6a90"/>
        <function-ref name="delRoute" scoped="" ref="0x7fb76dee6c20"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7fb76dee6db0"/>
        <function-ref name="addRoute" scoped="" ref="0x7fb76def3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7fb76def6cc0" loc="87:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7fb76def6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7fb76defd0a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7fb76defd230"/>
        <function-ref name="findTLV" scoped="" ref="0x7fb76defd3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7fb76de85380" loc="355:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7fb76de85380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76de85800"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76de85990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76df00570" loc="81:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76df00570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76df008f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76df00a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7fb76df00dc0" loc="82:../../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7fb76df00dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76deff180"/>
        <function-ref name="recv" scoped="" ref="0x7fb76deff310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7fb76ddf70c0" loc="43:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7fb76ddf70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fb76ddf7440"/>
        <function-ref name="setRoot" scoped="" ref="0x7fb76ddf75d0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fb76ddf7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7fb76ddf6320" loc="45:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7fb76ddf6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7fb76ddf66a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76ddf5670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7fb76ddf5800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7fb76ddf6b50"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76ddf6ce0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7fb76ddf6e70"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76ddf5030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7fb76ddf51c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7fb76ddf69c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7fb76ddf5350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7fb76ddf54e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7fb76ddf6830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76ddf7a20" loc="44:../../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76ddf7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76ddf7da0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76ddf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7fb76dd11880" loc="47:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7fb76dd11880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fb76dd11c00"/>
        <function-ref name="setRoot" scoped="" ref="0x7fb76dd11d90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fb76dd10020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7fb76dd0eab0" loc="53:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7fb76dd0eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76dd0ee30"/>
        <function-ref name="recv" scoped="" ref="0x7fb76dd0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7fb76dcfaa10" loc="62:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76dcfaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7fb76dcf8020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7fb76dcf81b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7fb76dcf8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7fb76dcf6ac0" loc="161:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7fb76dcf6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dcf6e40"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dcf5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7fb76dd08730" loc="56:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7fb76dd08730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dd04c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dd061e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dd04020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dd06ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dd03590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dd03110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dd06660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dd07390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dd04630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dd07860"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dd07d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb76dcfee00" loc="58:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76dcfee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76dcfd1c0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76dcfd350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7fb76dd0d3d0" loc="55:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7fb76dd0d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dd09870"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dd0ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dd0bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dd0b780"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dd081e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dd09cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dd0b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dd0c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dd09260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dd0c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dd0c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7fb76dcf5ad0" loc="125:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7fb76dcf5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dcf5e50"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dcf4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76dcfb270" loc="60:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcfb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76dcfb5f0"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dcfb780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76dcfb910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76dcfbaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76dcfbc30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76dcfbdc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76dcfa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7fb76dcf42f0" loc="124:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7fb76dcf42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dcf4670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dcf4800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7fb76dd0e310" loc="52:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7fb76dd0e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76dd0e690"/>
        <function-ref name="recv" scoped="" ref="0x7fb76dd0e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7fb76dcf7a40" loc="64:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76dcf7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7fb76dcf67f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7fb76dcf6020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7fb76dcf61b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7fb76dcf6340"/>
        <function-ref name="matchContext" scoped="" ref="0x7fb76dcf64d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7fb76dcf7dc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7fb76dcf6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7fb76dcfd5e0" loc="59:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76dcfd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7fb76dcfd960"/>
        <function-ref name="isRoot" scoped="" ref="0x7fb76dcfdaf0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7fb76dcfdc80"/>
        <function-ref name="hasParent" scoped="" ref="0x7fb76dcfde10"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76dcfc020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7fb76dcfc1b0"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76dcfc340"/>
        <function-ref name="getEtx" scoped="" ref="0x7fb76dcfc4d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7fb76dcfc660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7fb76dcfc7f0"/>
        <function-ref name="isParent" scoped="" ref="0x7fb76dcfc980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7fb76dcfcb10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76dcfcca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7fb76dcfb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7fb76dcf8590" loc="63:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7fb76dcf8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fb76dcf8910"/>
        <function-ref name="OCP" scoped="" ref="0x7fb76dcf8aa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7fb76dcf8c30"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76dcf8dc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7fb76dcf7020"/>
        <function-ref name="getOCP" scoped="" ref="0x7fb76dcf71b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7fb76dcf7340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7fb76dcf74d0"/>
        <function-ref name="getParent" scoped="" ref="0x7fb76dcf7660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7fb76dcf77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7fb76dcf52f0" loc="126:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7fb76dcf52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dcf5670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dcf5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7fb76dcf4ad0" loc="123:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7fb76dcf4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dcf4e50"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dcf3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7fb76dd03ae0" loc="57:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7fb76dd03ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dcfe110"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dd015b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dcff4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dcff020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dcfea10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dcfe590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dd01a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dd02750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dcffab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dd02c20"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dd01130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7fb76dd10a10" loc="49:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7fb76dd10a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7fb76dd10d90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7fb76dd0fe30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7fb76dd0e020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7fb76dd0f340"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76dd0f4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7fb76dd0f660"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76dd0f7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7fb76dd0f980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7fb76dd0fb10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7fb76dd0fca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76dd0f020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7fb76dd0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7fb76dcfa2b0" loc="61:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7fb76dcfa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76dcfa630"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dcfa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76dd10270" loc="48:../../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76dd10270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76dd105f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dd10780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76dced140" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76dced140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dce9630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dcebb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dcea920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dcea4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dce8020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dce9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dcea020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dcedd30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dce9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dceb220"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dceb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76dce7b00" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76dce7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dce2110"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dce45b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dce34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dce3020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dce2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dce2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dce4a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dce5750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dce3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dce5c20"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dce4130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76dcdf4e0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76dcdf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dcdca20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dcdd020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76dcddda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76dcdd920"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76dcdb4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76dcdb020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dcdd4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76dcde110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76dcdc410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76dcde5e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dcdeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7fb76dcd98d0" loc="30:../../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76dcd9c50"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dcd9de0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76dcd6020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76dcd61b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76dcd6340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76dcd64d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76dcd6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7fb76dcd5020" loc="31:../../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76dcd5020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7fb76dcd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7fb76dcca800" loc="36:../../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dcca800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7fb76dccab80"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dccad10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76dccf020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76dccf1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76dccf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7fb76dcd1020" loc="32:../../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76dcd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76dcd13a0"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dcd1530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76dcd16c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76dcd1850"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76dcd19e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76dcd1b70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76dcd1d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7fb76dcd04a0" loc="33:../../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76dcd04a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7fb76dcd0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7fb76dcd4690" loc="3:../../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dcd4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7fb76dcd4a10"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dcd4ba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76dcd4d30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76dc8d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76dc8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fb76dc89da0" loc="8:../../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc89da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb76dc88180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fb76dc7bb80" loc="10:../../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc7bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb76dc87020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb76dc871b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb76dc87340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb76dc874d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb76dc87660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76dc877f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb76dc87980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb76dc87b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb76dc87ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb76dc87e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76dc86020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76dc861b0"/>
        <function-ref name="sync" scoped="" ref="0x7fb76dc86340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb76dc865d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb76dc86760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7fb76dc8a300" loc="5:../../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76dc8a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7fb76dc8a680"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dc8a810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76dc8a9a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76dc8ab30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76dc8acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76dc8dc50" loc="4:../../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76dc8dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76dc8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fb76dc67020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb76dc673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fb76dc5c7e0" loc="45:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc5c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb76dc5cb60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb76dc5ccf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb76dc5ce80"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb76dc5b030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb76dc5b1c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76dc5b350"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb76dc5b4e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb76dc5b670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb76dc5b800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb76dc5b990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76dc5bb20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76dc5bcb0"/>
        <function-ref name="sync" scoped="" ref="0x7fb76dc5be40"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb76dc56120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb76dc562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fb76dc4b330" loc="47:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fb76dc4b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc4e020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76dc4e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fb76dc50d90" loc="46:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb76dc50d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb76dc55180"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb76dc55310"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb76dc554a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb76dc55630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb76dc557c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb76dc55950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb76dc55ae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb76dc55c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76dc58980" loc="44:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76dc58980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76dc58d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76dc5c020"/>
        <function-ref name="request" scoped="" ref="0x7fb76dc5c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76dc5c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76dc5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fb76dc47cf0" loc="46:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb76dc47cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb76dc460a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb76dc46230"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb76dc463c0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb76dc46550"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb76dc466e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76dc46870"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb76dc46a00"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb76dc46b90"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb76dc46d20"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb76dc45020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76dc451b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76dc45340"/>
        <function-ref name="sync" scoped="" ref="0x7fb76dc454d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb76dc45760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb76dc458f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fb76dc26020" loc="66:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76dc26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc263a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc26530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fb76dc42720" loc="50:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76dc42720"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb76dc42aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fb76dc41140" loc="52:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fb76dc41140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76dc3eb30"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dc409f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76dc3e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76dc3e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76dc3d020"/>
        <function-ref name="start" scoped="" ref="0x7fb76dc40020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dc40530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fb76dc2bc90" loc="64:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76dc2bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc2a0a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc2a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fb76dc3c830" loc="54:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fb76dc3c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76dc3cbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76dc3cd40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76dc3b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76dc3b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76dc3b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76dc3b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76dc3b660"/>
        <function-ref name="clr" scoped="" ref="0x7fb76dc3b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fb76dc43020" loc="48:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fb76dc43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc43c10"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76dc420d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fb76dc14020" loc="126:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fb76dc14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dc143a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dc14530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fb76dc268c0" loc="67:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb76dc268c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc26c40"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc26dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fb76dc251d0" loc="68:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76dc251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc25550"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc256e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fb76dc27a80" loc="62:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb76dc27a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc27e00"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fb76dc31dd0" loc="57:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb76dc31dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb76dc37180"/>
        <function-ref name="changed" scoped="" ref="0x7fb76dc37310"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb76dc374a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb76dc37630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb76dc3d510" loc="53:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb76dc3d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76dc3d890"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76dc3da20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76dc3dbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76dc3dd40"/>
        <function-ref name="get" scoped="" ref="0x7fb76dc3c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76dc3c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb76dc3c340"/>
        <function-ref name="clr" scoped="" ref="0x7fb76dc3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fb76dc24830" loc="71:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76dc24830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76dc24db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fb76dc3bb50" loc="55:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fb76dc3bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76dc3a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76dc3a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76dc3a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76dc3a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76dc3a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76dc3a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76dc3a980"/>
        <function-ref name="clr" scoped="" ref="0x7fb76dc3ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76dc4d890" loc="44:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76dc4d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76dc4dc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fb76dc2a5f0" loc="65:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76dc2a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc2a970"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc2ab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fb76dc231d0" loc="72:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb76dc231d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76dc23550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb76dc238f0" loc="74:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb76dc238f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76dc23c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76dc23e00"/>
        <function-ref name="request" scoped="" ref="0x7fb76dc21020"/>
        <function-ref name="granted" scoped="" ref="0x7fb76dc211b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76dc21340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fb76dc20560" loc="76:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fb76dc20560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76dc208e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76dc20a70"/>
        <function-ref name="request" scoped="" ref="0x7fb76dc20c00"/>
        <function-ref name="granted" scoped="" ref="0x7fb76dc20d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76dc1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fb76dc45bf0" loc="47:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb76dc45bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb76dc44020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb76dc441b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb76dc44340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb76dc444d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb76dc44660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb76dc447f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb76dc44980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb76dc44b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fb76dc2b3c0" loc="63:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb76dc2b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc2b740"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc2b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fb76dc271d0" loc="61:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb76dc271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc27550"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc276e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fb76dc22990" loc="69:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb76dc22990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76dc22d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76dc1f2e0" loc="78:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76dc1f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76dc1f660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76dc1f7f0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76dc1f980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76dc1fb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76dc1fca0"/>
        <function-ref name="get" scoped="" ref="0x7fb76dc1fe30"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76dc1e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76dc1e660"/>
        <function-ref name="set" scoped="" ref="0x7fb76dc1e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76dc1e340"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76dc1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fb76dc15020" loc="125:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fb76dc15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76dc153a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76dc15530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76dc47020" loc="45:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76dc47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76dc473a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76dc47530"/>
        <function-ref name="request" scoped="" ref="0x7fb76dc476c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76dc47850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76dc479e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fb76dc339a0" loc="60:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb76dc339a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc33d20"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fb76dc33020" loc="59:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb76dc33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76dc334a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76dc33630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fb76dc345b0" loc="56:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fb76dc345b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76dc34930"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dc34ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb76dc34c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb76dc34de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fb76dc216f0" loc="75:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fb76dc216f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76dc21a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76dc21c00"/>
        <function-ref name="request" scoped="" ref="0x7fb76dc21d90"/>
        <function-ref name="granted" scoped="" ref="0x7fb76dc20020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76dc201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fb76dc24100" loc="70:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb76dc24100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76dc24480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76db9e7e0" loc="45:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76db9e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76db9eb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fb76db9b220" loc="46:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db9b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76db99b30"/>
        <function-ref name="fired" scoped="" ref="0x7fb76db9aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76db994e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76db99020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76db97020"/>
        <function-ref name="start" scoped="" ref="0x7fb76db9a090"/>
        <function-ref name="stop" scoped="" ref="0x7fb76db9a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76db95260" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76db95260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76db955e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fb76db95af0" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb76db95af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76db5b390"/>
        <function-ref name="fired" scoped="" ref="0x7fb76db5c360"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76db5cce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76db5c820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76db5b850"/>
        <function-ref name="start" scoped="" ref="0x7fb76db5d970"/>
        <function-ref name="stop" scoped="" ref="0x7fb76db5de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76bee82a0" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76bee82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76bee5b30"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bee6aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76bee54e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76bee5020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76bee4020"/>
        <function-ref name="start" scoped="" ref="0x7fb76bee60d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76bee65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bee9a10" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bee9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bee9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76bee02a0" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76bee02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76bedeb30"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bedfaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76bede4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76bede020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76bedc020"/>
        <function-ref name="start" scoped="" ref="0x7fb76bedf0d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76bedf5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bee1a10" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bee1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bee1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb76bec8c10" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76bec8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76bec7020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76bec71b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76bec7340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76bec74d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bec7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb76beca1b0" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76beca1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76beca530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76beca6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76beca850"/>
        <function-ref name="get" scoped="" ref="0x7fb76beca9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76becab70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76becad00"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76bec9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76bec91b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76bec9340"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76bec94d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76bec9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb76bec98f0" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76bec98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76bec9c70"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76bec9e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76bec8020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76bec81b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76bec8340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76bec84d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76bec8660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76bec87f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76bec8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb76bebea80" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76bebea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76bebee00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76bebd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76bebd1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76bebd340"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bebd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb76bec0020" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76bec0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76bec03a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76bec0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76bec06c0"/>
        <function-ref name="get" scoped="" ref="0x7fb76bec0850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76bec09e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76bec0b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76bec0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76bebf020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76bebf1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76bebf340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76bebf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76bec5da0" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76bec5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76bec1670"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bec2610"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76bec1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76bec2ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76bec1b30"/>
        <function-ref name="start" scoped="" ref="0x7fb76bec3bf0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76bec2150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bec5510" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bec5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bec5890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb76bebf760" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76bebf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76bebfae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76bebfc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76bebfe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76bebe020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76bebe1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76bebe340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76bebe4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76bebe660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76bebe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb76db7f080" loc="43:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76db7f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76db7e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76db7e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76db7e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76db7ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb76db760f0" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb76db760f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76db75020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76db759a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76db754e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76db75e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb76db7acd0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76db7acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76db79b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76db78550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76db78090"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76db78a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76beda5f0" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76beda5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76bed8e50"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bed9e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76bed8800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76bed8340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76bed7340"/>
        <function-ref name="start" scoped="" ref="0x7fb76bed9430"/>
        <function-ref name="stop" scoped="" ref="0x7fb76bed9940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb76bed4d20" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76bed4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76bed1670"/>
        <function-ref name="fired" scoped="" ref="0x7fb76bed2550"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76bed1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76bed2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76bed1b30"/>
        <function-ref name="start" scoped="" ref="0x7fb76bed3b60"/>
        <function-ref name="stop" scoped="" ref="0x7fb76bed2090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76bed79b0" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76bed79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76bed67e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76bed41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76bed6ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76bed4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fb76db54090" loc="44:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fb76db54090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db54410"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db545a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db54730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db548c0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db54a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db54be0"/>
        <function-ref name="set" scoped="" ref="0x7fb76db54d70"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fb76db53390" loc="45:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fb76db53390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db53710"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db538a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db53a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db53bc0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db53d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db52020"/>
        <function-ref name="set" scoped="" ref="0x7fb76db521b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fb76db526a0" loc="46:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fb76db526a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db52a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db52bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db52d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db51020"/>
        <function-ref name="get" scoped="" ref="0x7fb76db511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db51340"/>
        <function-ref name="set" scoped="" ref="0x7fb76db514d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db51660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fb76db56e60" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb76db56e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db55210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db553a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db55530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db556c0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db55850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db559e0"/>
        <function-ref name="set" scoped="" ref="0x7fb76db55b70"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db55d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fb76db50ce0" loc="48:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fb76db50ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db4f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db4f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db4f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db4f550"/>
        <function-ref name="get" scoped="" ref="0x7fb76db4f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db4f870"/>
        <function-ref name="set" scoped="" ref="0x7fb76db4fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db4fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fb76db9cb10" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fb76db9cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db56020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db56340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db564d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db56660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db567f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76db56980"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db56b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fb76db519b0" loc="47:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fb76db519b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db51d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db50020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db50340"/>
        <function-ref name="get" scoped="" ref="0x7fb76db504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db50660"/>
        <function-ref name="set" scoped="" ref="0x7fb76db507f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db50980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db4c2f0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db4c670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db4c800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db4c990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db4cb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db4ccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db4ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db4b020"/>
        <function-ref name="get" scoped="" ref="0x7fb76db4b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db4b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db4b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76db4b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db4b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db4b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db4bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db4d020" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db4d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db4d530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db4d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db4d850"/>
        <function-ref name="get" scoped="" ref="0x7fb76db4d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db4db70"/>
        <function-ref name="set" scoped="" ref="0x7fb76db4dd00"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db48de0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db48de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db47180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db47310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db474a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db47630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db477c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db47950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db47ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db47c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db47e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db46020"/>
        <function-ref name="set" scoped="" ref="0x7fb76db461b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db46340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db464d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db46760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db49b60" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db49b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db48020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db48340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db484d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db48660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db487f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76db48980"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db48b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db42930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db42930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db42cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db42e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db41020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db41340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db41660"/>
        <function-ref name="get" scoped="" ref="0x7fb76db417f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db41980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db41b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76db41ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db41e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db40020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db402b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db40440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db43710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db43710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db43a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db43c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db43db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db42020"/>
        <function-ref name="get" scoped="" ref="0x7fb76db421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db42340"/>
        <function-ref name="set" scoped="" ref="0x7fb76db424d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db42660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db3d480" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db3d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db3d800"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db3d990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db3db20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db3dcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db3de40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db3c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db3c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db3c340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db3c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db3c660"/>
        <function-ref name="set" scoped="" ref="0x7fb76db3c7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db3c980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db3cb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db3cda0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db3e1d0" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db3e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db3e550"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db3e6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db3e870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db3ea00"/>
        <function-ref name="get" scoped="" ref="0x7fb76db3eb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db3ed20"/>
        <function-ref name="set" scoped="" ref="0x7fb76db3d020"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db3d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db38020" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db38530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db386c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db38850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db389e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db38b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db38d00"/>
        <function-ref name="get" scoped="" ref="0x7fb76db37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db371b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db37340"/>
        <function-ref name="set" scoped="" ref="0x7fb76db374d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db37660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db377f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db37a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db37c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db3ad70" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db3ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db39180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db39310"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db394a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db39630"/>
        <function-ref name="get" scoped="" ref="0x7fb76db397c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db39950"/>
        <function-ref name="set" scoped="" ref="0x7fb76db39ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db39c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db34de0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db34de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db33180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db33310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db334a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db33630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db337c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db33950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db33ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db33c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db33e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db32020"/>
        <function-ref name="set" scoped="" ref="0x7fb76db321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db32340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db32760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db35b60" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db35b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db34020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db341b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db34340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db344d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76db34660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db347f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76db34980"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db34b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb76db2f930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb76db2f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db2fcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db2fe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76db2d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db2d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db2d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76db2d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db2d660"/>
        <function-ref name="get" scoped="" ref="0x7fb76db2d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76db2d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76db2db10"/>
        <function-ref name="set" scoped="" ref="0x7fb76db2dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76db2de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76db2c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76db2c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db2c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb76db30710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76db30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76db30a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76db30c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76db30db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76db2f020"/>
        <function-ref name="get" scoped="" ref="0x7fb76db2f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76db2f340"/>
        <function-ref name="set" scoped="" ref="0x7fb76db2f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76db2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fb76db19150" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fb76db19150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb76db194d0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76db19660"/>
        <function-ref name="captured" scoped="" ref="0x7fb76db197f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb76db19980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fb76db19d60" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fb76db19d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76db16180"/>
        <function-ref name="disable" scoped="" ref="0x7fb76db16310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb76db164a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb76db16630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fb76db16a20" loc="44:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb76db16a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76db16da0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76db13020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb76db131b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb76db13340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fb76dafd8f0" loc="42:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fb76dafd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76dafdc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb76dafde00"/>
        <function-ref name="captured" scoped="" ref="0x7fb76dafc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76dafc1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76dafc340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb76dafc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb76db10a20" loc="40:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb76db10a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb76db10da0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dafe020"/>
        <function-ref name="captured" scoped="" ref="0x7fb76dafe1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb76dafe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb76dafe5d0" loc="41:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76dafe5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76dafe950"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76dafeae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76dafec70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76dafee00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76dafd020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76dafd1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76dafd340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76dafd4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76dafd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fb76dafc7a0" loc="43:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb76dafc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76dafcb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76dafccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76dafce40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76dafb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76dafb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76dafb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76dafb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76dafb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76dafb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76dafb980"/>
        <function-ref name="set" scoped="" ref="0x7fb76dafbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76dafbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76dafbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76dafa120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76dafa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb76daed8a0" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb76daed8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daedc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daeddb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daec020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daec1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daec340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb76dae3a30" loc="58:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb76dae3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae3db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae2020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae21b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae2340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb76daea8a0" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb76daea8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daeac20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daeadb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae9020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae91b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae9340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb76dae88a0" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb76dae88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae8c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae8db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae7020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae71b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae7340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb76daf38a0" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb76daf38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daf3c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daf3db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daee020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daee1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daee340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb76dae58a0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb76dae58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae5d20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae4020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae41b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae4340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb76daec8a0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb76daec8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daecc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daecdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daeb020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daeb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daeb340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daeb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb76dae2a30" loc="59:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb76dae2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae2db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae0020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae01b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae0340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb76daef8f0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb76daef8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daefc70"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daefe00"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daf4020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daf41b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daf4340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daf44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb76dae78a0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb76dae78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae7c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae7db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae6020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae61b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae6340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb76daee8a0" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb76daee8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daeec20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daeedb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daed020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daed1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daed340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb76dae4a30" loc="57:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb76dae4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae4db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae3020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae31b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae3340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb76daeb8a0" loc="48:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb76daeb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daebc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daebdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daea020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daea1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daea340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb76dae98a0" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb76dae98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae9c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae9db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae8020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae81b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae8340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb76daf48a0" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb76daf48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76daf4c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76daf4db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76daf3020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76daf31b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76daf3340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76daf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb76dae68a0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb76dae68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dae6c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dae6db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dae5020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dae51b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dae5340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dae54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb76dad98a0" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb76dad98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad9c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad9db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad8020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad81b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad8340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb76dacfa30" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb76dacfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dacfdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dace020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dace1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dace340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dace4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dace660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb76dad68a0" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb76dad68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad6c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad6db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad5020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad51b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad5340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb76dad48a0" loc="50:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb76dad48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad4c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad4db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad3020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad31b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad3340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb76dadb8a0" loc="41:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb76dadb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dadbc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dadbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dada020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dada1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dada340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dada4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb76dad18a0" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb76dad18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad1d20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad0020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad01b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad0340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb76dad88a0" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb76dad88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad8c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad8db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad7020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad71b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad7340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb76dacea30" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb76dacea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dacedb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dacd020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dacd1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dacd340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dacd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dacd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb76dadf810" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb76dadf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dadfb90"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dadfd20"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dadc020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dadc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dadc340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dadc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb76dad38a0" loc="51:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb76dad38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad3c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad3db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad2020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad21b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad2340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb76dada8a0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb76dada8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dadac20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dadadb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad9020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad91b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad9340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb76dad0a30" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb76dad0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad0db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dacf020"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dacf1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dacf340"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dacf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dacf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb76dad78a0" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb76dad78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad7c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad7db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad6020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad61b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad6340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb76dad58a0" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb76dad58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad5c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad5db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad4020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad41b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad4340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb76dadc8a0" loc="40:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb76dadc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dadcc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dadcdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dadb020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dadb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dadb340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dadb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb76dad28a0" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb76dad28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76dad2c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76dad2db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76dad1020"/>
        <function-ref name="edge" scoped="" ref="0x7fb76dad11b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb76dad1340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76dad14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb76d9fa610" loc="46:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb76d9fa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76d9fa990"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d9fab20"/>
        <function-ref name="disable" scoped="" ref="0x7fb76d9facb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76d9fae40"/>
        <function-ref name="enable" scoped="" ref="0x7fb76d9ed020"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76d9ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb76d9fba30" loc="45:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb76d9fba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d9fbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76d9fa020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb76d9fa1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb76d9fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb76d9eb610" loc="46:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb76d9eb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76d9eb990"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d9ebb20"/>
        <function-ref name="disable" scoped="" ref="0x7fb76d9ebcb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb76d9ebe40"/>
        <function-ref name="enable" scoped="" ref="0x7fb76d9ea020"/>
        <function-ref name="getValue" scoped="" ref="0x7fb76d9ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb76d9eca70" loc="45:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb76d9eca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d9ecdf0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76d9eb020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb76d9eb1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb76d9eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb76d597e50" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d597e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d596410"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5965a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb76d5a1160" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb76d5a1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb76d59be50" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d59be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d59a210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d59a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb76d595880" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76d595880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d595c00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d595d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb76d58b0a0" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb76d58b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58b420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb76d5940a0" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb76d5940a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d594420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5945b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb76d57f500" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb76d57f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d57f880"/>
        <function-ref name="write" scoped="" ref="0x7fb76d57fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb76d582500" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76d582500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d582880"/>
        <function-ref name="write" scoped="" ref="0x7fb76d582a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb76d5a0490" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb76d5a0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb76d587880" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb76d587880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d587c00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d587d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb76d583500" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76d583500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d583880"/>
        <function-ref name="write" scoped="" ref="0x7fb76d583a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb76d59ae50" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb76d59ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d599210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb76d599e50" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d599e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d597210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb76d58d880" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb76d58d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58dc00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb76d58e0a0" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb76d58e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58e420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb76d594880" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d594880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d594c00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d594d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76d5a3a90" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d5a3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76d5a3e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76d5a2020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76d5a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb76d59fe00" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76d59fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb76d59d490" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb76d59d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb76d586c80" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76d586c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5850a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d585230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb76d59dbe0" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb76d59dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb76d583ce0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76d583ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5820a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d582230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb76d59f160" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d59f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb76d5870a0" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb76d5870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d587420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb76d599670" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76d599670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5999f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d599b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb76d59a670" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d59a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d59a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d59ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb76d5a2ad0" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d5a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb76d5890a0" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76d5890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d589420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5895b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb76d58b880" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb76d58b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58bc00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb76d589880" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76d589880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d589c00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d589d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb76d580ce0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb76d580ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d57f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d57f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb76d582ce0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76d582ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5800a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d580230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb76d58e880" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb76d58e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58ec00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb76d58a0a0" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb76d58a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58a420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb76d584ce0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb76d584ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5830a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d583230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb76d593880" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb76d593880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d593c00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d593d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb76d57fce0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb76d57fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d57e0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d57e230"/>
        <function-ref name="write" scoped="" ref="0x7fb76d57e3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d57e550"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d57e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb76d5a2480" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76d5a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb76d59b670" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb76d59b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d59b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d59bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb76d597670" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76d597670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5979f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d597b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb76d58c0a0" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb76d58c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58c420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb76d5930a0" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d5930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d593420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5935b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb76d58c880" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb76d58c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58cc00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb76d596870" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d596870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d596bf0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d596d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb76d5a17b0" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb76d5a17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb76d5950a0" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76d5950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d595420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5955b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d5a4e20" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d5a4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d5a31c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d5a3350"/>
        <function-ref name="request" scoped="" ref="0x7fb76d5a34e0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d5a3670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d5a3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb76d59c2f0" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb76d59c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb76d59b020" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb76d59b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb76d584500" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb76d584500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d584880"/>
        <function-ref name="write" scoped="" ref="0x7fb76d584a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb76d585ce0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d585ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5840a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d584230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb76d59f7b0" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76d59f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb76d585500" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76d585500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d585880"/>
        <function-ref name="write" scoped="" ref="0x7fb76d585a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb76d580500" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb76d580500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d580880"/>
        <function-ref name="write" scoped="" ref="0x7fb76d580a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb76d58d0a0" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76d58d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58d420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb76d58a880" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb76d58a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d58ac00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d58ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb76d5a1e00" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb76d5a1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb76d5a0ae0" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d5a0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5a0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb76d5920a0" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb76d5920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d592420"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5925b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb76d59c940" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb76d59c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d59ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb76d592880" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb76d592880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d592c00"/>
        <function-ref name="write" scoped="" ref="0x7fb76d592d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb76d5860a0" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb76d5860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d586820"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5869b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb76d57e9b0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb76d57e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d57ed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d57d020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d57d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d57d340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d57d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fb76d9a9630" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d9a99b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d9a9b40"/>
        <function-ref name="write" scoped="" ref="0x7fb76d9a9cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d9a9e60"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d9a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76d9ab680" loc="40:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9ab680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76d9aba00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76d9abb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76d9abd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fb76d9a88c0" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fb76d9a88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d9a8c40"/>
        <function-ref name="write" scoped="" ref="0x7fb76d9a8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fb76d9a76f0" loc="43:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fb76d9a76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d9a7a70"/>
        <function-ref name="write" scoped="" ref="0x7fb76d9a7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d9ae960" loc="39:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d9ae960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d9aece0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d9aee70"/>
        <function-ref name="request" scoped="" ref="0x7fb76d9ab030"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d9ab1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d9ab350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fb76d9a6510" loc="44:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fb76d9a6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d9a6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fb76d990680" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d990680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d990a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d990b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fb76d9a0bb0" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fb76d9a0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d99f020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d99f1b0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d99f340"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d99f4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d99f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76d9a4920" loc="44:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d9a4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76d9a4ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76d9a4e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76d9a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fb76d999080" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb76d999080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb76d999400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fb76d98cb90" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fb76d98cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76d997020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76d9971b0"/>
        <function-ref name="isState" scoped="" ref="0x7fb76d997340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76d9974d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76d997660"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76d9977f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb76d99b400" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb76d99b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d99b780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d99b910"/>
        <function-ref name="request" scoped="" ref="0x7fb76d99baa0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d99bc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d99bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fb76d99e020" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fb76d99e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d99e3a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d99e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fb76d99edb0" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fb76d99edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d99d180"/>
        <function-ref name="write" scoped="" ref="0x7fb76d99d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76d997a70" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76d997a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76d997df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76d991020"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76d9911b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76d991340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76d9914d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76d991660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76d9917f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76d991e30"/>
        <function-ref name="set" scoped="" ref="0x7fb76d991980"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76d991b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76d991ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d9a1810" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d9a1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d9a1b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d9a1d20"/>
        <function-ref name="request" scoped="" ref="0x7fb76d9a0020"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d9a01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d9a0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fb76d987bd0" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fb76d987bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76d986020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76d9861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fb76d99dba0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fb76d99dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d99b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76d92c770" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76d92c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76d92caf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76d92cc80"/>
        <function-ref name="isState" scoped="" ref="0x7fb76d92ce10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76d924020"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76d9241b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76d924340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76d9271d0" loc="66:../../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76d9271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76d927550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76d9276e0"/>
        <function-ref name="isState" scoped="" ref="0x7fb76d927870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76d927a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76d927b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76d927d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76d923020" loc="66:../../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76d923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76d9233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76d923b70" loc="67:../../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76d923b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76d922020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76d9221b0"/>
        <function-ref name="isState" scoped="" ref="0x7fb76d922340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76d9224d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76d922660"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76d9227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb76d5cc020" loc="44:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d5cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d5cc3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d5cc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb76d9098f0" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb76d9098f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb76d909c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d90ac40" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d90ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d909020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d9091b0"/>
        <function-ref name="request" scoped="" ref="0x7fb76d909340"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d9094d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d909660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76bdf08f0" loc="82:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bdf08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76bdf0c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76bdf0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb76bdee2b0" loc="87:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb76bdee2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bdee630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76bdee7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb76bdeea50" loc="89:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76bdeea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76bdeedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb76bdef0c0" loc="83:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb76bdef0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb76bdef440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76bdf2c30" loc="81:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76bdf2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76bdf0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76bdf01b0"/>
        <function-ref name="request" scoped="" ref="0x7fb76bdf0340"/>
        <function-ref name="granted" scoped="" ref="0x7fb76bdf04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76bdf0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb76bdef6d0" loc="85:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76bdef6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb76bdefa50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb76bdefbe0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb76bdefd70"/>
        <function-ref name="write" scoped="" ref="0x7fb76bdee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb76d8a55e0" loc="74:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d8a55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76d8a5960"/>
        <function-ref name="configure" scoped="" ref="0x7fb76d8a5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb76d8a2510" loc="77:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d8a2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d8a2890"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d8a2a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb76d89f600" loc="80:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76d89f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76d89f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb76d8a5dd0" loc="75:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb76d8a5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb76d8a4180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb76d8a0370" loc="79:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb76d8a0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d8a06f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d8a0880"/>
        <function-ref name="request" scoped="" ref="0x7fb76d8a0a10"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d8a0ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d8a0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d8a9a20" loc="73:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d8a9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d8a9da0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d8a6020"/>
        <function-ref name="request" scoped="" ref="0x7fb76d8a61b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d8a6340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d8a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb76d8a4480" loc="76:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76d8a4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb76d8a4800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb76d8a4990"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb76d8a4b20"/>
        <function-ref name="write" scoped="" ref="0x7fb76d8a4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb76d89b6a0" loc="81:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76d89b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d89ba20"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d89bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb76d829c40" loc="76:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d829c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76d828020"/>
        <function-ref name="configure" scoped="" ref="0x7fb76d8281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb76d827700" loc="79:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb76d827700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d827aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d827c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb76d826e00" loc="82:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb76d826e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76d8241c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb76d828440" loc="77:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb76d828440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb76d8287c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fb76d824490" loc="83:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb76d824490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76d824810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76d8249a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76d824b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76d824cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76d824e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76d823020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76d8231b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76d823340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76d8234d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76d823660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76d8237f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76d823980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76d823b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76d823da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76d822020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76d8221b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76d822340"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76d8224d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76d822660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76d8227f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76d822980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76d822b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76d822ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76d822e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76d821020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76d8213b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76d821540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76d8216d0"/>
        <function-ref name="tx" scoped="" ref="0x7fb76d821860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76d8219f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76d821b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76d821d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76d820020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76d8201b0"/>
        <function-ref name="rx" scoped="" ref="0x7fb76d820340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76d8204d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76d820660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76d8207f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76d820980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76d820b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76d81f5a0" loc="85:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76d81f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76d81f920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76d81fab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76d81fc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76d81fdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76d81e020"/>
        <function-ref name="get" scoped="" ref="0x7fb76d81e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76d81e340"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76d81e980"/>
        <function-ref name="set" scoped="" ref="0x7fb76d81e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76d81e4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76d81e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb76d826060" loc="81:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb76d826060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d826400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d826590"/>
        <function-ref name="request" scoped="" ref="0x7fb76d826720"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d8268b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d826a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d82ae80" loc="75:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d82ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d829240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d8293d0"/>
        <function-ref name="request" scoped="" ref="0x7fb76d829560"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d8296f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d829880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb76d828a50" loc="78:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb76d828a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb76d828dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb76d827020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb76d8271b0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d827340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb76d820de0" loc="84:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76d820de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d81f180"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d81f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fb76d81ec50" loc="102:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fb76d81ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76d81d020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76d81d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fb76d80e8a0" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb76d80e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d80ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb76d8113b0" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76d8113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d811730"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d8118c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb76d818860" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76d818860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76d818be0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76d818d70"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76d815020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76d8151b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76d815340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76d8154d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76d815660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76d8157f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76d815980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76d815b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76d815ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76d815e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76d814020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76d8142b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76d814440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76d8145d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76d814760"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76d8148f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76d814a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76d814c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76d814da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76d813020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76d8131b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76d813340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76d8134d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76d813860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76d8139f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76d813b80"/>
        <function-ref name="tx" scoped="" ref="0x7fb76d813d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76d812020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76d8121b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76d812340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76d8124d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76d812660"/>
        <function-ref name="rx" scoped="" ref="0x7fb76d8127f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76d812980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76d812b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76d812ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76d812e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76d811020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb76d7d4670" loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb76d7d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d7d49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d7d4b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d7d4d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d7d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d7d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d7d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d7d34d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76d7d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d7d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d7d3980"/>
        <function-ref name="set" scoped="" ref="0x7fb76d7d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d7d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d7d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d7d2120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d7d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb76d808dc0" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb76d808dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d807180"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d807310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fb76d7d2670" loc="83:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fb76d7d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d7d29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d7d2b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d7d2d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d7d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d7d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d7d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d7d14d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76d7d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d7d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d7d1980"/>
        <function-ref name="set" scoped="" ref="0x7fb76d7d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d7d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d7d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d7d0120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d7d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fb76d7d0670" loc="84:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fb76d7d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d7d09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d7d0b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d7d0d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d7cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d7cf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d7cf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d7cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76d7cf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d7cf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d7cf980"/>
        <function-ref name="set" scoped="" ref="0x7fb76d7cfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d7cfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d7cfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d7ce120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d7ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fb76d80c020" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb76d80c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76d80c3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76d80c530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76d80c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76d80c850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76d80c9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76d80cb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76d80cd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76d80b020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76d80b1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76d80b340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76d80b4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76d80b660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76d80b7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76d80ba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76d80bc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76d80bda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76d80a020"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76d80a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76d80a340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76d80a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76d80a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76d80a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76d80a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76d80ab10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76d80aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76d809220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76d8093b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76d809540"/>
        <function-ref name="tx" scoped="" ref="0x7fb76d8096d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76d809860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76d8099f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76d809b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76d809d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76d808020"/>
        <function-ref name="rx" scoped="" ref="0x7fb76d8081b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76d808340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76d8084d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76d808660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76d8087f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76d808980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fb76d7de5b0" loc="79:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fb76d7de5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb76d7de930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb76d7deac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb76d7dec50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb76d7dede0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb76d805020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb76d8051b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb76d805340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb76d8054d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76d805660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb76d8057f0"/>
        <function-ref name="getData" scoped="" ref="0x7fb76d805980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb76d805b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb76d805ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb76d804020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb76d8041b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb76d804340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb76d8044d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb76d804660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb76d8047f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb76d804980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb76d804b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb76d804ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb76d804e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb76d7dc020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb76d7dc1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb76d7dc540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb76d7dc6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb76d7dc860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb76d7dc9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb76d7dcb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb76d7dcd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb76d7db020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb76d7db1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb76d7db340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb76d7db4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb76d7db660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb76d7db7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb76d7db980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb76d7dbb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb76d7dbca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb76d7dbe30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb76d7da020"/>
        <function-ref name="setData" scoped="" ref="0x7fb76d7da1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb76d7da340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb76d7da4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb76d7da660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb76d7da7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb76d7da980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb76d7dab10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb76d7d9420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb76d7d95b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb76d7d9740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb76d7d98d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb76d7d9a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb76d7d9bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb76d7d9d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb76d7d8020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb76d7d81b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb76d7d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fb76d7d6670" loc="81:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fb76d7d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d7d69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d7d6b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d7d6d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d7d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d7d51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d7d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d7d54d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76d7d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d7d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d7d5980"/>
        <function-ref name="set" scoped="" ref="0x7fb76d7d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d7d5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d7d5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d7d4120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d7d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb76d807750" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d807750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d807ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb76d7d8700" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb76d7d8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d7d8a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d7d8c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d7d8da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d7d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d7d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d7d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d7d74d0"/>
        <function-ref name="get" scoped="" ref="0x7fb76d7d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d7d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d7d7980"/>
        <function-ref name="set" scoped="" ref="0x7fb76d7d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d7d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d7d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d7d6120"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d7d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76bde52c0" loc="42:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bde52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76bde5640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76bde57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fb76bddd440" loc="46:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb76bddd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76bddd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76bdd6760" loc="51:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76bdd6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76bdd6ae0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76bdd6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fb76bddda50" loc="48:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb76bddda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb76bddddd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb76bddc020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb76bddc1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb76bddc340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb76bddc4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb76bddc660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb76bddc7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb76bddc980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76bddcb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb76bddcca0"/>
        <function-ref name="getData" scoped="" ref="0x7fb76bddce30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb76bddb020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb76bddb1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb76bddb440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb76bddb5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb76bddb760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb76bddb8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb76bddba80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb76bddbc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb76bddbda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb76bdda020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb76bdda1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb76bdda340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb76bdda4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb76bdda660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb76bdda9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb76bddab80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb76bddad10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb76bdd9020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb76bdd91b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb76bdd9340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb76bdd94d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb76bdd9660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb76bdd97f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb76bdd9980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb76bdd9b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb76bdd9ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb76bdd9e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb76bdd8020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb76bdd81b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb76bdd8340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb76bdd84d0"/>
        <function-ref name="setData" scoped="" ref="0x7fb76bdd8660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb76bdd87f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb76bdd8980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb76bdd8b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb76bdd8ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb76bdd8e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb76bdd7020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb76bdd75b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb76bdd7740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb76bdd78d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb76bdd7a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb76bdd7bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb76bdd7d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb76bdd6020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb76bdd61b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb76bdd6340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb76bdd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb76bddec10" loc="45:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76bddec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76bddd020"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76bddd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76bde7640" loc="41:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76bde7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76bde79c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76bde7b50"/>
        <function-ref name="request" scoped="" ref="0x7fb76bde7ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76bde7e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76bde5030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb76bde42b0" loc="44:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76bde42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76bde4630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76bde47c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76bde4950"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76bde4ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76bde4c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76bde4e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76bde3020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76bde31b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76bde3340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76bde34d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76bde3660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76bde37f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76bde3980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76bde3c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76bde3da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76bde2020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76bde21b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76bde2340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76bde24d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76bde2660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76bde27f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76bde2980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76bde2b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76bde2ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76bde2e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76bde1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76bde13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76bde1540"/>
        <function-ref name="tx" scoped="" ref="0x7fb76bde16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76bde1860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76bde19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76bde1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76bde1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76bdde020"/>
        <function-ref name="rx" scoped="" ref="0x7fb76bdde1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76bdde340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76bdde4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76bdde660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76bdde7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76bdde980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76bde5a60" loc="43:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76bde5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76bde5de0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76bde4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76d72d8a0" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76d72d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76d72dc20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76d72ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76d72b020" loc="45:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d72b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76d72b3a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76d72b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb76d732a80" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb76d732a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d732e00"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d72f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d72e5c0" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d72e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d72e940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d72ead0"/>
        <function-ref name="request" scoped="" ref="0x7fb76d72ec60"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d72edf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d72d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb76d72f9a0" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d72f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d72fd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76d72c130" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d72c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76d72c4b0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76d72c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb76d7164b0" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d7164b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76d716830"/>
        <function-ref name="userId" scoped="" ref="0x7fb76d7169c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb76d7285c0" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb76d7285c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d728960"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d728af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fb76d717e70" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb76d717e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d716220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb76d717020" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76d717020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76d7173c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fb76d717690" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fb76d717690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76d717a10"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76d717ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76d69dbf0" loc="92:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76d69dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76d69b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76d69b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76d69a930" loc="96:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76d69a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76d69acd0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76d69ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb76d69b400" loc="93:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76d69b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d69b780"/>
        <function-ref name="requested" scoped="" ref="0x7fb76d69b910"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d69baa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d69bc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76d69bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d69ee60" loc="91:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d69ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d69d230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d69d3c0"/>
        <function-ref name="request" scoped="" ref="0x7fb76d69d550"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d69d6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d69d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76d69a060" loc="94:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76d69a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76d69a3e0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76d69a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bd6f140" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bd6f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bd6f4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb76bd6f750" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76bd6f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76bd6fad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76bd6fc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76bd6fdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76bd6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76bd6b850" loc="55:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76bd6b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76bd6bbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76bd6bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76bd69590" loc="60:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76bd69590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76bd69930"/>
        <function-ref name="configure" scoped="" ref="0x7fb76bd69ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76bd69d50" loc="61:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76bd69d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76bd68100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76bd68290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76bd68420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76bd685b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb76bd6a020" loc="56:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76bd6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76bd6a3a0"/>
        <function-ref name="requested" scoped="" ref="0x7fb76bd6a530"/>
        <function-ref name="granted" scoped="" ref="0x7fb76bd6a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76bd6a850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76bd6a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76bd68800" loc="62:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76bd68800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76bd68b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76bd68d10"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76bd66020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76bd661b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76bd66340"/>
        <function-ref name="get" scoped="" ref="0x7fb76bd664d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76bd66660"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76bd66ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76bd66980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76bd667f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76bd66b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76bd6c970" loc="54:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76bd6c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76bd6cd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76bd6b020"/>
        <function-ref name="request" scoped="" ref="0x7fb76bd6b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76bd6b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76bd6b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76bd6ac30" loc="57:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76bd6ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76bd69020"/>
        <function-ref name="userId" scoped="" ref="0x7fb76bd691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb76bd65020" loc="75:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb76bd65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76bd653a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76bd65530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fb76d693880" loc="4:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb76d693880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb76d693c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb76d693d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb76d690020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb76d6901b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb76d690340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb76d6904d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb76d690660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb76d6907f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76d690980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb76d690b10"/>
        <function-ref name="getData" scoped="" ref="0x7fb76d690ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb76d690e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb76d68f020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb76d68f2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb76d68f440"/>
        <function-ref name="getIV" scoped="" ref="0x7fb76d68f5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb76d68f760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb76d68f8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb76d68fa80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb76d68fc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb76d68fda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb76d68e020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb76d68e1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb76d68e340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb76d68e4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb76d68e860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb76d68e9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb76d68eb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb76d68ed10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb76d68d020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb76d68d1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb76d68d340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb76d68d4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb76d68d660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb76d68d7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb76d68d980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb76d68db10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb76d68dca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb76d68de30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb76d68c020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb76d68c1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb76d68c340"/>
        <function-ref name="setData" scoped="" ref="0x7fb76d68c4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb76d68c660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb76d68c7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb76d68c980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb76d68cb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb76d68cca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb76d68ce30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb76d68b420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb76d68b5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb76d68b740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb76d68b8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb76d68ba60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb76d68bbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb76d68bd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb76d68a020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb76d68a1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb76d68a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fb76d680250" loc="41:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fb76d680250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76d6805d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76d680760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76d6808f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76d680a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76d680c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76d680da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76d67f020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76d67f1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76d67f340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76d67f4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76d67f660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76d67f7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76d67f980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76d67fc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76d67fda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76d67e020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76d67e1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76d67e340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76d67e4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76d67e660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76d67e7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76d67e980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76d67eb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76d67eca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76d67ee30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76d67d220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76d67d3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76d67d540"/>
        <function-ref name="tx" scoped="" ref="0x7fb76d67d6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76d67d860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76d67d9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76d67db80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76d67dd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76d67c020"/>
        <function-ref name="rx" scoped="" ref="0x7fb76d67c1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76d67c340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76d67c4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76d67c660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76d67c7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76d67c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb76d67acb0" loc="43:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb76d67acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d6790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d679230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d6793c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d679550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d6796e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d679870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d679a00"/>
        <function-ref name="get" scoped="" ref="0x7fb76d679b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d679d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d678020"/>
        <function-ref name="set" scoped="" ref="0x7fb76d6781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d678340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d6784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d678760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d6788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fb76d687430" loc="39:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fb76d687430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb76d6877b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb76d687940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb76d687ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb76d687c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb76d687df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb76d686020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb76d6861b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb76d686340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76d6864d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb76d686660"/>
        <function-ref name="getData" scoped="" ref="0x7fb76d6867f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb76d686980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb76d686b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb76d686da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb76d685020"/>
        <function-ref name="getIV" scoped="" ref="0x7fb76d6851b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb76d685340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb76d6854d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb76d685660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb76d6857f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb76d685980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb76d685b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb76d685ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb76d685e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb76d684020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb76d6843b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb76d684540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb76d6846d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb76d684860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb76d6849f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb76d684b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb76d684d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb76d683020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb76d6831b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb76d683340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb76d6834d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb76d683660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb76d6837f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb76d683980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb76d683b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb76d683ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb76d683e30"/>
        <function-ref name="setData" scoped="" ref="0x7fb76d682020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb76d6821b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb76d682340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb76d6824d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb76d682660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb76d6827f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb76d682980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb76d681020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb76d6811b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb76d681340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb76d6814d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb76d681660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb76d6817f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb76d681980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb76d681b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb76d681ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb76d681e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb76d67cd40" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb76d67cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76d67b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76d67b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76d67b400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76d67b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76d67b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76d67b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76d67ba40"/>
        <function-ref name="get" scoped="" ref="0x7fb76d67bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76d67bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76d67a020"/>
        <function-ref name="set" scoped="" ref="0x7fb76d67a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76d67a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76d67a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76d67a760"/>
        <function-ref name="clr" scoped="" ref="0x7fb76d67a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb76d565c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d565c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d564210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb76d570da0" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb76d570da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb76d568b50" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d568b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d567020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb76d563670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76d563670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5639f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d563b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb76d55ce50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb76d55ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55a210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb76d563e50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb76d563e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d561210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb76d54f2f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb76d54f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d54f670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d54f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb76d5512f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76d5512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d551670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d551800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb76d56d120" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb76d56d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb76d557670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb76d557670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5579f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d557b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb76d5522f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76d5522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d552670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d552800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb76d567c60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb76d567c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d566020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb76d566c60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d566c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d565020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb76d55d670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb76d55d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb76d55fe50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb76d55fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55e210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb76d561670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d561670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5619f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d561b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76d571760" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d571760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76d571ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76d571c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76d571e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb76d56caa0" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76d56caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb76d56b120" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb76d56b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb76d556a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76d556a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d556df0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d555020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb76d56b870" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb76d56b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb76d552ad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76d552ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d552e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb76d56ddc0" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d56ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb76d558e50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb76d558e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d557210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb76d566480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76d566480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d566800"/>
        <function-ref name="write" scoped="" ref="0x7fb76d566990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb76d567480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d567480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d567800"/>
        <function-ref name="write" scoped="" ref="0x7fb76d567990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb76d570750" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d570750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d570ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb76d559e50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76d559e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d558210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb76d55a670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb76d55a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb76d558670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76d558670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5589f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d558b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb76d550ad0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb76d550ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d550e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d54f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb76d551ad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76d551ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d551e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d550020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb76d55e670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb76d55e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb76d55ae50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb76d55ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d559210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb76d553ad0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb76d553ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d553e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d552020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb76d560670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb76d560670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5609f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d560b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb76d54fad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb76d54fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d54fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d54e020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d54e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d54e340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d54e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb76d570100" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76d570100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d570480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb76d568370" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb76d568370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5686f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d568880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb76d565480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76d565480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d565800"/>
        <function-ref name="write" scoped="" ref="0x7fb76d565990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb76d55de50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb76d55de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55c210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb76d561e50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d561e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d560210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb76d55c670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb76d55c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb76d564670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d564670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5649f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d564b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb76d56e450" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb76d56e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb76d564e50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76d564e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d563210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d572a80" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d572a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d572e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d571020"/>
        <function-ref name="request" scoped="" ref="0x7fb76d5711b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d571340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d5714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb76d56a020" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb76d56a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb76d56acc0" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb76d56acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5680a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb76d5532f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb76d5532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d553670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d553800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb76d555ad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d555ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d555e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d553020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb76d56c450" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76d56c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb76d5552f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76d5552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d555670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d555800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb76d5502f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb76d5502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d550670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d550800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb76d55ee50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76d55ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55d210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb76d559670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb76d559670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5599f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d559b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb76d56eaa0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb76d56eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb76d56d770" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d56d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb76d560e50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb76d560e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55f210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb76d56a670" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb76d56a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d56a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb76d55f670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb76d55f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d55f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d55fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb76d557e50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb76d557e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d556610"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5567a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb76d54e7a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb76d54e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d54eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d54ecb0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d54ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d54c020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d54c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb76d538c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76d538c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d537210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb76d543da0" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb76d543da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d542180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb76d53cb50" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76d53cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d53b020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d53b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb76d536670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76d536670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5369f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d536b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb76d52fe50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb76d52fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52e210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb76d536e50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb76d536e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d535210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb76d5222f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb76d5222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d522670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d522800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb76d5252f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76d5252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d525670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d525800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb76d541120" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb76d541120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5414a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb76d52a670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb76d52a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb76d5262f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76d5262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d526670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d526800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb76d53bc60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb76d53bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d53a020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d53a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb76d53ac60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76d53ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d538020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb76d530670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb76d530670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5309f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d530b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb76d533e50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb76d533e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d531210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb76d535670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb76d535670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5359f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d535b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76d544760" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76d544760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76d544ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76d544c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76d544e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb76d540aa0" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76d540aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d540e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb76d53e120" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb76d53e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d53e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb76d529a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76d529a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d529df0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d528020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb76d53e870" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb76d53e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d53ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb76d526ad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76d526ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d526e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d525020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb76d541dc0" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76d541dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d540180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb76d52be50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb76d52be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52a210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb76d53a480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76d53a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d53a800"/>
        <function-ref name="write" scoped="" ref="0x7fb76d53a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb76d53b480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76d53b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d53b800"/>
        <function-ref name="write" scoped="" ref="0x7fb76d53b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb76d543750" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb76d543750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d543ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb76d52de50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76d52de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52b210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb76d52e670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb76d52e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb76d52b670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76d52b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb76d523ad0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb76d523ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d523e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d522020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb76d525ad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76d525ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d525e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d523020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb76d531670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb76d531670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5319f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d531b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb76d52ee50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb76d52ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52d210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb76d527ad0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb76d527ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d527e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d526020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb76d534670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb76d534670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5349f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d534b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb76d522ad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb76d522ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d522e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d521020"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5211b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d521340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d5214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb76d543100" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76d543100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d543480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb76d53c370" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb76d53c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d53c6f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d53c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb76d538480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76d538480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d538800"/>
        <function-ref name="write" scoped="" ref="0x7fb76d538990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb76d530e50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb76d530e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52f210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb76d535e50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb76d535e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d534210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb76d52f670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb76d52f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb76d537670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb76d537670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5379f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d537b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb76d542450" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb76d542450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5427d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb76d537e50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76d537e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d536210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76d5459e0" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76d5459e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76d545d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76d544020"/>
        <function-ref name="request" scoped="" ref="0x7fb76d5441b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76d544340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76d5444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb76d53d020" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb76d53d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d53d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb76d53dcc0" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb76d53dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d53c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb76d5272f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb76d5272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d527670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d527800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb76d528ad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb76d528ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d528e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76d527020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb76d540450" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76d540450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d5407d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb76d5282f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76d5282f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d528670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d528800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb76d5232f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb76d5232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d523670"/>
        <function-ref name="write" scoped="" ref="0x7fb76d523800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb76d531e50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76d531e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d530210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb76d52d670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb76d52d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d52d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d52db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb76d542aa0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb76d542aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d542e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb76d541770" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb76d541770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d541af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb76d534e50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb76d534e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d533210"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb76d53d670" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb76d53d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76d53d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb76d533670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb76d533670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d5339f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d533b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb76d52ae50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb76d52ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76d529610"/>
        <function-ref name="write" scoped="" ref="0x7fb76d5297a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb76d5217a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb76d5217a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76d521b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76d521cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb76d521e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76d520020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76d5201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fb76d519b20" loc="54:../../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb76d519b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb76d516020"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d5161b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb76d516340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb76d5164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7fb76d4f4020" loc="45:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7fb76d4f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7fb76d4f43a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7fb76d4f4530"/>
        <function-ref name="startDAO" scoped="" ref="0x7fb76d4f46c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7fb76d4f3020" loc="48:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7fb76d4f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d4f33a0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d4f3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76dcd76f0" loc="44:../../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76dcd76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76dcd7a70"/>
        <function-ref name="stop" scoped="" ref="0x7fb76dcd7c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7fb76d425270" loc="57:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7fb76d425270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fb76d4255f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7fb76d425780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fb76d425910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7fb76d4290f0" loc="55:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7fb76d4290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76d427260"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d428660"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d429ce0"/>
        <function-ref name="put" scoped="" ref="0x7fb76d428ae0"/>
        <function-ref name="size" scoped="" ref="0x7fb76d4281e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7fb76d431bb0" loc="52:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7fb76d431bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d430020"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d4301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb76d431410" loc="51:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76d431410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76d431790"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76d431920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7fb76d4222f0" loc="109:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7fb76d4222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76d422670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76d422800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7fb76d43dae0" loc="49:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7fb76d43dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d438110"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d43a5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d4394a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d439020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d438a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d438590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d43aa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d43b750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d439ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d43bc20"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d43a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7fb76d42f5a0" loc="54:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7fb76d42f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fb76d42d4a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fb76d42b260"/>
        <function-ref name="element" scoped="" ref="0x7fb76d42b8d0"/>
        <function-ref name="full" scoped="" ref="0x7fb76d42e680"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d42d020"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76d42db50"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d42e200"/>
        <function-ref name="size" scoped="" ref="0x7fb76d42eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76d430400" loc="53:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76d430400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76d430780"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d430910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76d430aa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76d430c30"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76d430dc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76d42f020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76d42f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7fb76d422ad0" loc="87:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7fb76d422ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76d422e50"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76d421020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7fb76d4434b0" loc="44:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7fb76d4434b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7fb76d443830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7fb76d4439c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7fb76d443b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7fb76d442720" loc="48:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7fb76d442720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d43ec40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d43f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d43e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d43fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d43d590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d43d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d43f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d440390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d43e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d440860"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d440d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7fb76d436020" loc="50:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7fb76d436020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d433630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d435a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d434920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d4344a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d431020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d433ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d434020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d436c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d433020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d435110"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d4355e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7fb76d427980" loc="56:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7fb76d427980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7fb76d427d00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7fb76d426e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7fb76d425020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7fb76d426340"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76d4264d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7fb76d426660"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76d4267f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7fb76d426980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7fb76d426b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7fb76d426ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76d426020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7fb76d4261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7fb76d425b60" loc="58:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7fb76d425b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7fb76d423020"/>
        <function-ref name="delTLV" scoped="" ref="0x7fb76d4231b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7fb76d423340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7fb76d423590" loc="59:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d423590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7fb76d423910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7fb76d423aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7fb76d423c30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7fb76d423dc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7fb76d422020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76d443da0" loc="45:../../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76d443da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76d442180"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d442310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76d41dbd0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76d41dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d418110"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d41b6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d41a4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d41a020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d418a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d418590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d41bb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d41c860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d41aab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d41cd30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d41b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76d416560" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76d416560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d412a20"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d414020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d414da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d414920"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d4114a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d411020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d4144a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d4151b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d412410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d415680"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d415b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76d40f020" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76d40f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d40b630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d40ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d40c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d40c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d40a020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d40bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d40c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d40fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d40b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d40e110"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d40e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76d406510" loc="31:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76d406510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76d406890"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76d406a20"/>
        <function-ref name="start" scoped="" ref="0x7fb76d406bb0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d406d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7fb76d4016e0" loc="36:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76d4016e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7fb76d401a60"/>
        <function-ref name="initiate" scoped="" ref="0x7fb76d401bf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7fb76d401d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7fb76d3ff930" loc="35:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7fb76d3ff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7fb76d3ffcb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7fb76d3ffe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7fb76d405d40" loc="33:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7fb76d405d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d4030e0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d403270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7fb76d4009d0" loc="41:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7fb76d4009d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76d400d50"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d3fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7fb76d403560" loc="34:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d403560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7fb76d4038e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7fb76d403a70"/>
        <function-ref name="delRoute" scoped="" ref="0x7fb76d403c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7fb76d403d90"/>
        <function-ref name="addRoute" scoped="" ref="0x7fb76d402020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fb76d400130" loc="40:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76d400130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76d4004b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d400640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d405540" loc="32:../../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d405540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d4058c0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d405a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76d3fba10" loc="17:../../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76d3fba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76d3fbd90"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d3fa020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76d3fa1b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76d3fa340"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76d3fa4d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76d3fa660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76d3fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76d3f9bf0" loc="20:../../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76d3f9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76d3f7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76d3f71b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76d3f7340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76d3f74d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76d3f7660"/>
        <function-ref name="get" scoped="" ref="0x7fb76d3f77f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76d3f7980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76d3f6020"/>
        <function-ref name="set" scoped="" ref="0x7fb76d3f7b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76d3f7ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76d3f7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7fb76d3faae0" loc="18:../../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7fb76d3faae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d3fae60"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d3f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7fb76d3f92d0" loc="19:../../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7fb76d3f92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7fb76d3f9650"/>
        <function-ref name="delTLV" scoped="" ref="0x7fb76d3f97e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7fb76d3f9970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d3fb1d0" loc="14:../../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d3fb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d3fb550"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d3fb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7fb76d3e0890" loc="22:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7fb76d3e0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7fb76d3e0c10"/>
        <function-ref name="initiate" scoped="" ref="0x7fb76d3e0da0"/>
        <function-ref name="linkResult" scoped="" ref="0x7fb76d3de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7fb76d3dc1d0" loc="28:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7fb76d3dc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d3dc550"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d3dc6e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d3dc870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7fb76d3d6790" loc="31:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76d3d6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7fb76e49b110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76d3d3860"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d3d5cb0"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d3d53b0"/>
        <function-ref name="put" scoped="" ref="0x7fb76d3d3170"/>
        <function-ref name="size" scoped="" ref="0x7fb76d3d5830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7fb76d3bde40" loc="95:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7fb76d3bde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76d3bc1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76d3bc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7fb76d3e1a50" loc="21:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7fb76d3e1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7fb76d3e1dd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7fb76d3e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7fb76d3dea90" loc="24:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7fb76d3dea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d3dee10"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d3dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76d3dd2a0" loc="25:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76d3dd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76d3dd620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76d3dcb20" loc="29:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76d3dcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76d3db020"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d3db1b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76d3db340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76d3db4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76d3db660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76d3db7f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76d3db980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7fb76d3d21c0" loc="34:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7fb76d3d21c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d3ce630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d3d0c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d3cf9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d3cf550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d3cd020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d3ceab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d3cf0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d3d2db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d3ce020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d3d02e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d3d07b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7fb76d3fcd20" loc="20:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d3fcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7fb76d3e10e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7fb76d3e1270"/>
        <function-ref name="delRoute" scoped="" ref="0x7fb76d3e1400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7fb76d3e1590"/>
        <function-ref name="addRoute" scoped="" ref="0x7fb76d3e1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7fb76d3dbc30" loc="30:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7fb76d3dbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7fb76d3d6020"/>
        <function-ref name="delTLV" scoped="" ref="0x7fb76d3d61b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7fb76d3d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d3de290" loc="23:../../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d3de290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d3de610"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d3de7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7fb76d34f020" loc="11:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7fb76d34f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d34f3a0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d34f530"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d34f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7fb76d348720" loc="15:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7fb76d348720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d348aa0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d348c30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d348dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7fb76d350020" loc="10:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d350020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7fb76d350d00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7fb76d350530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7fb76d3506c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7fb76d350850"/>
        <function-ref name="matchContext" scoped="" ref="0x7fb76d3509e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7fb76d3503a0"/>
        <function-ref name="getContext" scoped="" ref="0x7fb76d350b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76d34f980" loc="12:../../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76d34f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76d34fd00"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d34e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7fb76d34dda0" loc="28:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7fb76d34dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d346180"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d346310"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d3464a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7fb76d339300" loc="45:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7fb76d339300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7fb76d339780"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d339910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76d339aa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76d339c30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76d339dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb76d33c450" loc="40:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76d33c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76d33c7d0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76d33c960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7fb76d33b900" loc="43:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7fb76d33b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d33bc80"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d33be10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d33a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7fb76d3420a0" loc="35:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7fb76d3420a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d342420"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d3425b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76d33a2d0" loc="44:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76d33a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76d33a650"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d33a7e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76d33a970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76d33ab00"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76d33ac90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76d33ae20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76d339020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7fb76d343060" loc="33:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7fb76d343060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d3433e0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d343570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7fb76d3467a0" loc="29:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d3467a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7fb76d3454d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7fb76d346cb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7fb76d346e40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7fb76d345020"/>
        <function-ref name="matchContext" scoped="" ref="0x7fb76d3451b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7fb76d346b20"/>
        <function-ref name="getContext" scoped="" ref="0x7fb76d345340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7fb76d3428a0" loc="36:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7fb76d3428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d342c20"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d342db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7fb76d343860" loc="34:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7fb76d343860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d343be0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d343d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7fb76d341270" loc="38:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7fb76d341270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d33e6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d340cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d33fa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d33f5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d33c020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d33eb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d33f170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d341e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d33e0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d340360"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d340830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7fb76d33cc50" loc="42:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76d33cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7fb76d33b020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7fb76d33b1b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7fb76d33b340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7fb76d33b4d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7fb76d33b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7fb76d306380" loc="194:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7fb76d306380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76d306700"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76d306890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76d345790" loc="30:../../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76d345790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76d345b10"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d345ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d2aba30" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d2aba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d2abdd0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d275020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7fb76d2a5280" loc="50:../../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7fb76d2a5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d2a5600"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d2a5790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76d2a42d0" loc="54:../../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76d2a42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76d2a4650"/>
        <function-ref name="changed" scoped="" ref="0x7fb76d2a47e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76d2a4970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76d2a4b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76d2a4c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76d2a4e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76d2a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76d2a32a0" loc="55:../../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76d2a32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76d2a3620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76d2a37b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76d2a3940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76d2a3ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76d2a3c60"/>
        <function-ref name="get" scoped="" ref="0x7fb76d2a3df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76d2a2020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76d2a2660"/>
        <function-ref name="set" scoped="" ref="0x7fb76d2a21b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76d2a2340"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76d2a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7fb76d2a5a80" loc="53:../../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d2a5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d2a5e00"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d2a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7fb76bc319f0" loc="36:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7fb76bc319f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc31d70"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76bc311f0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76bc311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc31590"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc31720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d2749b0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d2749b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d274d50"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d273020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7fb76bc26820" loc="36:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7fb76bc26820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc26ba0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc26d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76bc26020" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76bc26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc263c0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc26550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d2729b0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d2729b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d272d50"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d270020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7fb76bc1b020" loc="36:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7fb76bc1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc1b3a0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc1b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76bc1c6a0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76bc1c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc1ca40"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc1cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76d26f9b0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76d26f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d26fd50"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d26e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7fb76bc115e0" loc="36:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7fb76bc115e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc11960"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc11af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76bc13db0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76bc13db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76bc11180"/>
        <function-ref name="recv" scoped="" ref="0x7fb76bc11310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76d26d7b0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76d26d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d26ac40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d26b260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d26a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d26bb60"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d268590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d268110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d26b6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d26c400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d26a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d26c8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d26cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76d255020" loc="35:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76d255020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76d2553a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76d255530"/>
        <function-ref name="start" scoped="" ref="0x7fb76d2556c0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d255850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7fb76d253020" loc="37:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76d253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7fb76d25b8c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7fb76d25a090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76d252170"/>
        <function-ref name="get" scoped="" ref="0x7fb76d253c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7fb76d255af0" loc="36:../../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7fb76d255af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d255e70"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d254030"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d2541c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76d24d230" loc="46:../../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76d24d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76d24d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb76d24d870" loc="47:../../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76d24d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76d24dbf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76d24dd80"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76d24c020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76d24c1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76d24c340"/>
        <function-ref name="get" scoped="" ref="0x7fb76d24c4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76d24c660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76d24cca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76d24c7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76d24c980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76d24cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76d2346d0" loc="43:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76d2346d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76d234a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76d234be0"/>
        <function-ref name="start" scoped="" ref="0x7fb76d234d70"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d233020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7fb76d20e5f0" loc="68:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7fb76d20e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76d20c710"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d20db10"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d20d210"/>
        <function-ref name="put" scoped="" ref="0x7fb76d20c020"/>
        <function-ref name="size" scoped="" ref="0x7fb76d20d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7fb76d231940" loc="49:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76d231940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7fb76d25b8c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7fb76d25a090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76d230a70"/>
        <function-ref name="get" scoped="" ref="0x7fb76d230560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fb76d22f060" loc="53:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7fb76d22f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76d22f3e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76d22f570"/>
        <function-ref name="start" scoped="" ref="0x7fb76d22f700"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d22f890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7fb76d233d60" loc="47:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7fb76d233d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d231180"/>
        <function-ref name="recv" scoped="" ref="0x7fb76d231310"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d2314a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7fb76d222020" loc="62:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7fb76d222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7fb76d2223a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7fb76d222530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7fb76d212cb0" loc="64:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76d212cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb76d21e0a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb76d21e230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb76d21e3c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb76d21e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76d233720" loc="44:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76d233720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76d233aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7fb76d208c50" loc="70:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7fb76d208c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fb76d205ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fb76d203880"/>
        <function-ref name="element" scoped="" ref="0x7fb76d202020"/>
        <function-ref name="full" scoped="" ref="0x7fb76d206ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d205660"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76d2031d0"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d206860"/>
        <function-ref name="size" scoped="" ref="0x7fb76d2051e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7fb76d202900" loc="73:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7fb76d202900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76d1fee80"/>
        <function-ref name="fired" scoped="" ref="0x7fb76d2004a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76d1fe260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76d200da0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76d1fd7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76d1fd320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76d200920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76d201560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76d1fe870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76d201a30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76d200020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fb76cf856e0" loc="438:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7fb76cf856e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cf85a60"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cf85bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7fb76d22c4e0" loc="60:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76d22c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7fb76d223340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7fb76d22c9f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7fb76d22cb80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7fb76d22cd10"/>
        <function-ref name="matchContext" scoped="" ref="0x7fb76d223020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7fb76d22c860"/>
        <function-ref name="getContext" scoped="" ref="0x7fb76d2231b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7fb76d21ea10" loc="67:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7fb76d21ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76d210c00"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d210090"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d216750"/>
        <function-ref name="put" scoped="" ref="0x7fb76d210510"/>
        <function-ref name="size" scoped="" ref="0x7fb76d216bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76d1fdbc0" loc="75:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76d1fdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76d1fc020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76d1fc1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76d1fc340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76d1fc4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76d1fc660"/>
        <function-ref name="get" scoped="" ref="0x7fb76d1fc7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76d1fc980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76d1fb020"/>
        <function-ref name="set" scoped="" ref="0x7fb76d1fcb10"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76d1fcca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76d1fce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7fb76d22d0f0" loc="56:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7fb76d22d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76d22d470"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76d22d600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76d22d790"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76d22d920"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76d22dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7fb76d22fbd0" loc="55:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb76d22fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76d22e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76d22e1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76d22e340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76d22e4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76d22e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7fb76d221020" loc="63:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb76d221020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb76d2213a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb76d221530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb76d2216c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb76d221850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb76d2219e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7fb76d20a150" loc="69:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7fb76d20a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76d208260"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76d209660"/>
        <function-ref name="empty" scoped="" ref="0x7fb76d20ad40"/>
        <function-ref name="put" scoped="" ref="0x7fb76d209ae0"/>
        <function-ref name="size" scoped="" ref="0x7fb76d2091e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7fb76d22de20" loc="57:../../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fb76d22de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76d22c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76cf56420" loc="19:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf56420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cf567a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cf56930"/>
        <function-ref name="start" scoped="" ref="0x7fb76cf56ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cf56c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb76cf52a30" loc="23:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb76cf52a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cf52db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb76cf53020" loc="21:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb76cf53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76cf533a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76cf53530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf536c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf53850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76cf539e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb76cf53d00" loc="22:../../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb76cf53d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cf520a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf52230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf523c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cf52550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cf526e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76cf51b40" loc="43:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf51b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cf4e020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cf4e1b0"/>
        <function-ref name="start" scoped="" ref="0x7fb76cf4e340"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cf4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb76cf36170" loc="55:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cf36170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb76cf364f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb76cf3e470" loc="57:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb76cf3e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb76cf3e7f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb76cf3e980"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb76cf3eb10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb76cf3eca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb76cf3ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb76cf40640" loc="53:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cf40640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cf409c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cf40b50"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cf40ce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cf40e70"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cf47030"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cf471c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb76cf4ad10" loc="50:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cf4ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cf490e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf49270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf49400"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cf49590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cf49720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb76cf367f0" loc="56:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cf367f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb76cf36b70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb76cf36d00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb76cf3e020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb76cf3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb76cf4b820" loc="47:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb76cf4b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cf4bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb76cf46080" loc="54:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cf46080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76cf46400"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76cf46590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76cf46720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76cf4ed00" loc="45:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76cf4ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76cf4c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76cf4c230"/>
        <function-ref name="request" scoped="" ref="0x7fb76cf4c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76cf4c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76cf4c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb76cf4ca00" loc="46:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb76cf4ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cf4cd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf4b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf4b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cf4b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cf4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb76cf4a020" loc="48:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb76cf4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76cf4a3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76cf4a530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf4a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf4a850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76cf4a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb76cf49a90" loc="51:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cf49a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cf49e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76cf39b30" loc="44:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf39b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cf34020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cf341b0"/>
        <function-ref name="start" scoped="" ref="0x7fb76cf34340"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cf344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb76cf29230" loc="47:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cf29230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb76cf295b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb76cf29740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb76cf298d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb76cf29a60"/>
        <function-ref name="setCca" scoped="" ref="0x7fb76cf29bf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb76cf29d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cf34790" loc="45:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cf34790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cf34b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf34ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf34e30"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cf33020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cf331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cf33490" loc="46:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cf33490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cf33810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76cf32da0" loc="39:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76cf32da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cf27180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cf27310"/>
        <function-ref name="start" scoped="" ref="0x7fb76cf274a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cf27630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb76cf26650" loc="41:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cf26650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb76cf269d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb76cf26b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb76cf26cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb76cf26e80"/>
        <function-ref name="setCca" scoped="" ref="0x7fb76cf25030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb76cf251c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fb76cf22e00" loc="47:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fb76cf22e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb76cf201c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb76cf20350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb76cf204e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb76cf20670"/>
        <function-ref name="setCca" scoped="" ref="0x7fb76cf20800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb76cf20990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb76cf17b00" loc="50:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cf17b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cf17e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cf16030"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cf161c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cf16350"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cf164e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cf16670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fb76cf22080" loc="46:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb76cf22080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cf22400"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cf22590"/>
        <function-ref name="modify" scoped="" ref="0x7fb76cf22720"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cf228b0"/>
        <function-ref name="resend" scoped="" ref="0x7fb76cf22a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cf278f0" loc="40:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cf278f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cf27c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf27e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cf26020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cf261b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cf26340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb76cf20c60" loc="48:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76cf20c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76cf18020"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76cf181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fb76cf233e0" loc="45:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fb76cf233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cf23760"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cf238f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76cf0f130" loc="51:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cf0f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cf0f4b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cf0f640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cf0f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fb76cf241a0" loc="44:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb76cf241a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb76cf24520"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb76cf246b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb76cf24840"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb76cf249d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb76cf24b60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb76cf24cf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb76cf24e80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb76cf23030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76cf18470" loc="49:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76cf18470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76cf187f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76cf18980"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76cf18b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76cf18ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76cf18e30"/>
        <function-ref name="get" scoped="" ref="0x7fb76cf17020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76cf171b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76cf177f0"/>
        <function-ref name="set" scoped="" ref="0x7fb76cf17340"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76cf174d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76cf17660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb76cf254b0" loc="43:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76cf254b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76cf25830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76cf259c0"/>
        <function-ref name="request" scoped="" ref="0x7fb76cf25b50"/>
        <function-ref name="granted" scoped="" ref="0x7fb76cf25ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76cf25e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fb76cf0fb90" loc="52:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fb76cf0fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cf150a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cf15230"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cf153c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cf15550"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cf156e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cf15870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fb76cf0a5d0" loc="76:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fb76cf0a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cf0a950"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cf0aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fb76cf0b660" loc="75:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fb76cf0b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cf0b9e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cf0bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fb76cf0d730" loc="74:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fb76cf0d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cf0dab0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cf0dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb76cebf020" loc="46:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76cebf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb76cebf3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb76cebf530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb76cebf6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb76cebf850"/>
        <function-ref name="setCca" scoped="" ref="0x7fb76cebf9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb76cebfb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fb76cebeca0" loc="47:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb76cebeca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb76cebd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fb76cec0300" loc="45:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb76cec0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cec0680"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cec0810"/>
        <function-ref name="modify" scoped="" ref="0x7fb76cec09a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cec0b30"/>
        <function-ref name="resend" scoped="" ref="0x7fb76cec0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76cec39b0" loc="44:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76cec39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cec3d30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cec0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fb76cebd470" loc="48:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fb76cebd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb76cebd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb76ceb2cf0" loc="51:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb76ceb2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb76ceb10a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb76ceb1230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb76ceb13c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb76ceb1550"/>
        <function-ref name="setCca" scoped="" ref="0x7fb76ceb16e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb76ceb1870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fb76cea9200" loc="58:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb76cea9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb76cea87c0"/>
        <function-ref name="clear" scoped="" ref="0x7fb76ce9f020"/>
        <function-ref name="isValid" scoped="" ref="0x7fb76cea8090"/>
        <function-ref name="set" scoped="" ref="0x7fb76ce9f750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fb76ce8c990" loc="78:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76ce8c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce8cd10"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fb76ce8b380" loc="79:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76ce8b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce8b700"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce8b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fb76ceb1c90" loc="52:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb76ceb1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb76ceb00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fb76ce8fe60" loc="72:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb76ce8fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ce8e210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fb76ce9d1e0" loc="60:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fb76ce9d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb76ce9d560"/>
        <function-ref name="disable" scoped="" ref="0x7fb76ce9d6f0"/>
        <function-ref name="captured" scoped="" ref="0x7fb76ce9d880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb76ce9da10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fb76ceaf020" loc="55:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fb76ceaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76ceac870"/>
        <function-ref name="fired" scoped="" ref="0x7fb76cead840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76ceac220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76ceadd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76ceacd30"/>
        <function-ref name="start" scoped="" ref="0x7fb76ceafe30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cead380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb76ceab210" loc="56:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76ceab210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76ceab590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76ceab720"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76ceab8b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76ceaba40"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76ceabbd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76ceabd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fb76ce91d80" loc="68:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76ce91d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce90180"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce90310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fb76ce906b0" loc="69:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76ce906b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce90a30"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce90bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fb76ce84780" loc="83:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76ce84780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76ce84b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb76ce84c90"/>
        <function-ref name="sfd" scoped="" ref="0x7fb76ce84e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76ceb2020" loc="50:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76ceb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76ceb23a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76ceb2530"/>
        <function-ref name="modify" scoped="" ref="0x7fb76ceb26c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76ceb2850"/>
        <function-ref name="resend" scoped="" ref="0x7fb76ceb29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fb76ce924e0" loc="66:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76ce924e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76ce92860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76ce929f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76ce92b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fb76ce8e5c0" loc="73:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76ce8e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ce8e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb76ce99080" loc="62:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb76ce99080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76ce99400"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76ce99590"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76ce99720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76ce998b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76ce99a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76ce99bd0"/>
        <function-ref name="set" scoped="" ref="0x7fb76ce99d60"/>
        <function-ref name="clr" scoped="" ref="0x7fb76ce94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76ceb3020" loc="48:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76ceb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76ceb33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76ceaa0c0" loc="57:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76ceaa0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76ceaa440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76ceaa5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76ceaa760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fb76ce96570" loc="59:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76ce96570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76ce968f0"/>
        <function-ref name="isSet" scoped="" ref="0x7fb76ce96a80"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76ce96c10"/>
        <function-ref name="set" scoped="" ref="0x7fb76ce96da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fb76ce8ed00" loc="74:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76ce8ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce8d410"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce8d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb76ce936e0" loc="65:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb76ce936e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76ce93a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76ce93bf0"/>
        <function-ref name="request" scoped="" ref="0x7fb76ce93d80"/>
        <function-ref name="granted" scoped="" ref="0x7fb76ce92020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76ce921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fb76ce9dd60" loc="61:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fb76ce9dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76ce9c210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76ce9c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76ce9c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76ce9c6c0"/>
        <function-ref name="get" scoped="" ref="0x7fb76ce9c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76ce9c9e0"/>
        <function-ref name="set" scoped="" ref="0x7fb76ce9cb70"/>
        <function-ref name="clr" scoped="" ref="0x7fb76ce9cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fb76ce8bbf0" loc="80:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76ce8bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce8a020"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fb76ce8a530" loc="81:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb76ce8a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce8a8b0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce8aa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fb76ce8f020" loc="70:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76ce8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ce8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fb76ce94370" loc="63:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fb76ce94370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76ce946f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76ce94880"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76ce94a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76ce94ba0"/>
        <function-ref name="get" scoped="" ref="0x7fb76ce94d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76ce93020"/>
        <function-ref name="set" scoped="" ref="0x7fb76ce931b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76ce93340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76ce88110" loc="84:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76ce88110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76ce88490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76ce88620"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76ce887b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76ce88940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76ce88ad0"/>
        <function-ref name="get" scoped="" ref="0x7fb76ce88c60"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76ce88df0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76ce874d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76ce87020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76ce871b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76ce87340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fb76ce8c0c0" loc="77:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76ce8c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ce8c440"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce8c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76ceb36a0" loc="49:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76ceb36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76ceb3a20"/>
        <function-ref name="stop" scoped="" ref="0x7fb76ceb3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fb76ce91020" loc="67:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb76ce91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76ce913a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76ce91530"/>
        <function-ref name="write" scoped="" ref="0x7fb76ce916c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76ce91850"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76ce919e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fb76ce8f730" loc="71:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb76ce8f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ce8fab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fb76ce8d930" loc="76:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb76ce8d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ce8dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fb76ceb04b0" loc="53:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fb76ceb04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb76ceb0830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb76cde8c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76cde8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde7210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb76cdf2020" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb76cdf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb76cdebc70" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76cdebc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdea020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb76cde6670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76cde6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde69f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb76cddee50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb76cddee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cddd210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb76cde6e50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb76cde6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde4210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb76cdd22f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cdd22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd2670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb76cdd42f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76cdd42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd4670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb76cdf0370" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb76cdf0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb76cdda670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb76cdda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdda9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb76cdd52f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76cdd52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd5670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb76cdeac60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb76cdeac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde9020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb76cde9c60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76cde9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde8020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb76cde0670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb76cde0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde09f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb76cde2e50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb76cde2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde1210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb76cde4670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb76cde4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde49f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76cdf48f0" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76cdf48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76cdf4c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76cdf4e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76cdf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb76cdefd00" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76cdefd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdee0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb76cdee370" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb76cdee370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb76cdd9a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76cdd9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd9df0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb76cdeeac0" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb76cdeeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdeee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb76cdd5ad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cdd5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd5e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb76cdef060" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76cdef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdef3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb76cddbe50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb76cddbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdda210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb76cde9480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76cde9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde9800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb76cdea480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76cdea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdea800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdea990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb76cdf3940" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb76cdf3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb76cddce50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76cddce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cddb210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb76cddd670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb76cddd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cddd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb76cddb670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76cddb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cddb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb76cdd3ad0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb76cdd3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd3e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb76cdd4ad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76cdd4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd4e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb76cde1670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb76cde1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde19f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb76cddde50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb76cddde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cddc210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb76cdd6ad0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb76cdd6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd6e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb76cde3670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb76cde3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde39f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb76cdd2ad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cdd2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76cdd2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76cdd0020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd01b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76cdd0340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76cdd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb76cdf32f0" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76cdf32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb76cdeb490" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb76cdeb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdeb810"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdeb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb76cde8480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76cde8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde8800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb76cde0e50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb76cde0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdde210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb76cde4e50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb76cde4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde3210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb76cdde670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb76cdde670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdde9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb76cde7670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb76cde7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde79f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb76cdf2670" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb76cdf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb76cde7e50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76cde7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde6210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76cdf5c30" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76cdf5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76cdf4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76cdf41b0"/>
        <function-ref name="request" scoped="" ref="0x7fb76cdf4340"/>
        <function-ref name="granted" scoped="" ref="0x7fb76cdf44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76cdf4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb76cded160" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb76cded160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cded4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb76cdede00" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb76cdede00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdeb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb76cdd62f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb76cdd62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd6670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb76cdd8ad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb76cdd8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd8e50"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb76cdef6b0" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76cdef6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdefa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb76cdd82f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76cdd82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd8670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb76cdd32f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb76cdd32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd3670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb76cde1e50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76cde1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde0210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb76cddc670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb76cddc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cddc9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cddcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb76cdf2cc0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb76cdf2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb76cdf09c0" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb76cdf09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdf0d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb76cde3e50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb76cde3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde2210"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb76cded7b0" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb76cded7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdedb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb76cde2670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb76cde2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cde29f0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cde2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb76cddae50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb76cddae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdd9610"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb76cdd07a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb76cdd07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76cdd0b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76cdd0cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdd0e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76cdcf020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76cdcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fb76cdc4df0" loc="42:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76cdc4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cdc11c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb76cdc1350"/>
        <function-ref name="sfd" scoped="" ref="0x7fb76cdc14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cdc17c0" loc="43:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cdc17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cdc1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fb76cdc0020" loc="44:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fb76cdc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb76cdc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76cdc45c0" loc="41:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76cdc45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cdc4940"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cdc4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fb76cdb9380" loc="54:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fb76cdb9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76cdb9700"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76cdb9890"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76cdb9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76cdb9bb0"/>
        <function-ref name="get" scoped="" ref="0x7fb76cdb9d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76cdb8020"/>
        <function-ref name="set" scoped="" ref="0x7fb76cdb81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76cdb8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fb76cdb2b90" loc="64:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb76cdb2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb76cdb0020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb76cdb01b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb76cdb0340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb76cdb04d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb76cdb0660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb76cdb07f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb76cdb0980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb76cdb0b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb76cdb0ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb76cdb0e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb76cdaf020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb76cdaf1b0"/>
        <function-ref name="sync" scoped="" ref="0x7fb76cdaf340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb76cdaf5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb76cdaf760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fb76cd9a9d0" loc="148:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fb76cd9a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cd9ad50"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cd99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fb76cdafd70" loc="65:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb76cdafd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb76cdad330"/>
        <function-ref name="clear" scoped="" ref="0x7fb76cdada60"/>
        <function-ref name="isValid" scoped="" ref="0x7fb76cdaeba0"/>
        <function-ref name="set" scoped="" ref="0x7fb76cdac210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fb76cdb86b0" loc="55:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fb76cdb86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76cdb8a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76cdb8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76cdb8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76cdb7020"/>
        <function-ref name="get" scoped="" ref="0x7fb76cdb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76cdb7340"/>
        <function-ref name="set" scoped="" ref="0x7fb76cdb74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb76cdb7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fb76cdaacb0" loc="69:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76cdaacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cda90a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cda9230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fb76cda9590" loc="70:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76cda9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cda9910"/>
        <function-ref name="write" scoped="" ref="0x7fb76cda9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fb76cda86d0" loc="72:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cda86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cda8a50"/>
        <function-ref name="write" scoped="" ref="0x7fb76cda8be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb76cdb3330" loc="62:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cdb3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cdb36b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cdb3840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cdb39d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cdb3b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cdb3cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cdb3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fb76cdbc550" loc="49:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb76cdbc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cdbc8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb76cdbca60"/>
        <function-ref name="sfd" scoped="" ref="0x7fb76cdbcbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fb76cdb43a0" loc="60:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb76cdb43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdb4720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb76cdba020" loc="53:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb76cdba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76cdba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76cdba530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76cdba6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76cdba850"/>
        <function-ref name="get" scoped="" ref="0x7fb76cdba9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76cdbab70"/>
        <function-ref name="set" scoped="" ref="0x7fb76cdbad00"/>
        <function-ref name="clr" scoped="" ref="0x7fb76cdb9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fb76cda7020" loc="73:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cda7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cda73a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cda7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76cdbd620" loc="47:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76cdbd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76cdbd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76cdb21e0" loc="63:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cdb21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cdb2560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cdb26f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cdb2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cdbb020" loc="50:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cdbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cdbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb76cdb66e0" loc="58:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb76cdb66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76cdb6a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76cdb6bf0"/>
        <function-ref name="request" scoped="" ref="0x7fb76cdb6d80"/>
        <function-ref name="granted" scoped="" ref="0x7fb76cdb5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76cdb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fb76cda9e00" loc="71:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76cda9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cda81c0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cda8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fb76cdb5530" loc="59:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cdb5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76cdb58b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76cdb5a40"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdb5bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76cdb5d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76cdb4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fb76cda78b0" loc="74:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76cda78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cda7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fb76cdbb7c0" loc="51:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fb76cdbb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb76cdbbb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76cda6150" loc="76:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76cda6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76cda64d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76cda6660"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76cda67f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76cda6980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76cda6b10"/>
        <function-ref name="get" scoped="" ref="0x7fb76cda6ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76cda6e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76cda54d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76cda5020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76cda51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76cda5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fb76cdaa3e0" loc="68:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76cdaa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cdaa760"/>
        <function-ref name="write" scoped="" ref="0x7fb76cdaa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fb76cdacb10" loc="67:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb76cdacb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdaa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fb76cdb7a50" loc="56:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb76cdb7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76cdb7dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fb76cdb6020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb76cdb61b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb76cdb6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fb76cdb4ad0" loc="61:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76cdb4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76cdb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76cdbdca0" loc="48:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76cdbdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cdbc0a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cdbc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb76cd3aa70" loc="44:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cd3aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb76cd3adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb76cd3e670" loc="41:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd3e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cd3e9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cd3eb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cd3ed10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cd3b020"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cd3b1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cd3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb76cd39550" loc="46:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb76cd39550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb76cd37b00"/>
        <function-ref name="clear" scoped="" ref="0x7fb76cd362a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fb76cd373d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76cd369d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fb76cd3a0c0" loc="43:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd3a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cd3a440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cd3a5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cd3a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fb76cd31480" loc="48:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76cd31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cd31800"/>
        <function-ref name="isSet" scoped="" ref="0x7fb76cd31990"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cd31b20"/>
        <function-ref name="set" scoped="" ref="0x7fb76cd31cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb76cd35660" loc="47:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb76cd35660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb76cd33ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fb76cd32460"/>
        <function-ref name="isValid" scoped="" ref="0x7fb76cd335b0"/>
        <function-ref name="set" scoped="" ref="0x7fb76cd32b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb76cd3b6e0" loc="42:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb76cd3b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76cd3ba60"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76cd3bbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76cd3bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb76cd2a020" loc="49:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb76cd2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb76cd2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb76cd30d20" loc="46:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cd30d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cd2c0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cd2c270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cd2c400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cd2c590"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cd2c720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cd2c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb76cd214a0" loc="56:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76cd214a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76cd21820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76cd219b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cd21b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cd21cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76cd21e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb76cd2aa80" loc="51:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb76cd2aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb76cd28020"/>
        <function-ref name="clear" scoped="" ref="0x7fb76cd28750"/>
        <function-ref name="isValid" scoped="" ref="0x7fb76cd298d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76cd28e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fb76cd2b640" loc="48:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cd2b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cd2b9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cd2bb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cd2bce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fb76cd238b0" loc="53:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb76cd238b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cd23c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fb76cd23dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cd21020"/>
        <function-ref name="set" scoped="" ref="0x7fb76cd211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fb76cd203b0" loc="57:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fb76cd203b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cd1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fb76cd1f6e0" loc="58:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fb76cd1f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cd1e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb76cd27af0" loc="52:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb76cd27af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb76cd240d0"/>
        <function-ref name="clear" scoped="" ref="0x7fb76cd24800"/>
        <function-ref name="isValid" scoped="" ref="0x7fb76cd25970"/>
        <function-ref name="set" scoped="" ref="0x7fb76cd23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb76cd2cc50" loc="47:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb76cd2cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76cd2b020"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76cd2b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76cd2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb76cccfcf0" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb76cccfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76ccce980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76cccd020" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76cccd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cccde30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76cccc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76cccc340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76cccccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76ccc80b0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76ccc80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76ccc5630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76ccc7b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76ccc6920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76ccc64a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76ccc3020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76ccc5ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76ccc6020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76ccc8ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76ccc5020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76ccc71b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76ccc7680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb76ccb3620" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb76ccb3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb3ba0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb76ccbe940" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb76ccbe940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb76ccb7620" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb76ccb7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb79a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb76ccb1060" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb76ccb1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb13e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb76ccaa840" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb76ccaa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccaabc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccaad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb76ccb1840" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb76ccb1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb1bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb76cc9ec60" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb76cc9ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cc9d020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb76cca0c60" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb76cca0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cc9f020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb76ccbdcc0" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb76ccbdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb76cca5060" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb76cca5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca53e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb76cca2c60" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb76cca2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca0020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb76ccb5620" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb76ccb5620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb59a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb76ccb4620" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb76ccb4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb49a0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb76ccab060" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb76ccab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccab3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccab570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb76ccad840" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb76ccad840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccadbc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccadd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb76ccb0060" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb76ccb0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb03e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb76ccbf2b0" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb76ccbf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb76ccbf630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb76ccbf7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb76ccbf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb76ccba6b0" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb76ccba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbaa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb76ccbad00" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb76ccbad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccb91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb76cca4480" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb76cca4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca4800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb76ccb9490" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb76ccb9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccb9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb76cca0480" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb76cca0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca0800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb76ccbc9c0" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb76ccbc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbcd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb76cca6840" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb76cca6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca6bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb76ccb5e00" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb76ccb5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb41c0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb4350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb76ccb7e00" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb76ccb7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb51c0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb5350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb76ccbe2f0" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb76ccbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbe670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb76cca7840" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb76cca7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca7bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb76cca9060" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb76cca9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca93e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb76cca6060" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb76cca6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca63e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb76cc9e480" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb76cc9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cc9e800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb76cc9f480" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb76cc9f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cc9f800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb76ccac060" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb76ccac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccac3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccac570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb76cca9840" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb76cca9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca9bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb76cca2480" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb76cca2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca2800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb76ccaf060" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb76ccaf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccaf3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccaf570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb76cc9d480" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb76cc9d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76cc9d800"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76cc9d990"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9db20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76cc9dcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76cc9de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb76ccbfc20" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb76ccbfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb76ccb8e00" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb76ccb8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb71c0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb7350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb76ccb4e00" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb76ccb4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb31c0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb3350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb76ccab840" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb76ccab840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccabbc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccabd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb76ccb0840" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb76ccb0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb0bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb76ccaa060" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb76ccaa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccaa3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccaa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb76ccb2060" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb76ccb2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb23e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb76ccbd020" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb76ccbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb76ccb2840" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb76ccb2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccb2bc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccb2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76ccc0520" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76ccc0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76ccc08a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76ccc0a30"/>
        <function-ref name="request" scoped="" ref="0x7fb76ccc0bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76ccc0d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76ccbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb76ccb9ae0" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb76ccb9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccb9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb76ccb87b0" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb76ccb87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccb8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb76cca3c60" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb76cca3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca2020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb76cca3480" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb76cca3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca3800"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb76ccba060" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb76ccba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccba3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb76cca4c60" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb76cca4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca3020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb76cc9fc60" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb76cc9fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cc9e020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb76ccac840" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb76ccac840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccacbc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccacd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb76cca7060" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb76cca7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca73e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb76ccbd670" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb76ccbd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb76ccbc370" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb76ccbc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccbc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb76ccaf840" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb76ccaf840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccafbc0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccafd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb76ccb8160" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb76ccb8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb76ccb84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb76ccad060" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb76ccad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76ccad3e0"/>
        <function-ref name="write" scoped="" ref="0x7fb76ccad570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb76cca5840" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb76cca5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76cca4020"/>
        <function-ref name="write" scoped="" ref="0x7fb76cca41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb76cc9c160" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb76cc9c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb76cc9c4e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb76cc9c670"/>
        <function-ref name="write" scoped="" ref="0x7fb76cc9c800"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb76cc9c990"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76cc9cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76cc75390" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76cc75390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cc75710"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cc758a0"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cc75a30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cc75bc0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cc75d50"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cc74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cc6bb50" loc="44:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cc6bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc6a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc6a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc6a340"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc6a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cc6ede0" loc="40:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cc6ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc6b180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc6b310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc6b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc6b630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc6b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cc62b40" loc="45:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cc62b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc61020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc611b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc61340"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc614d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cc63660" loc="40:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cc63660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc639e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc63b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc63d00"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc62020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb76cc60760" loc="47:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb76cc60760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb76cc60ae0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb76cc60c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76cc62430" loc="41:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76cc62430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76cc627b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76cc5f020" loc="48:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cc5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc5f3a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cc5f530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cc5f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fb76cc618f0" loc="46:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76cc618f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cc61c70"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cc61e00"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cc60020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cc601b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cc60340"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cc604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76cc64690" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76cc64690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cc64a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cc64ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cc64d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cc4e020"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cc4e1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cc4e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb76cc47950" loc="47:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc47950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc47cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cc4aaa0" loc="42:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cc4aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc4ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fb76cc47200" loc="43:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb76cc47200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc47580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb76cc413f0" loc="49:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc413f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc41770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76cc42b70" loc="45:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76cc42b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76cc41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cc46e30" loc="43:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cc46e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc421e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76cc41a70" loc="50:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cc41a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc41df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cc40020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cc401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fb76cc42570" loc="44:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb76cc42570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc428f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb76cc13020" loc="75:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc133a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cc136b0" loc="76:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cc136b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc13a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc13bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc13d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc12020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cc178e0" loc="65:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cc178e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc17c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc17df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc16020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc161b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb76cc16c90" loc="68:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cc16c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc150a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc15230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc153c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc15550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc156e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cc165e0" loc="66:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cc165e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc16960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76cc18be0" loc="64:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76cc18be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76cc17020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76cc171b0"/>
        <function-ref name="request" scoped="" ref="0x7fb76cc17340"/>
        <function-ref name="granted" scoped="" ref="0x7fb76cc174d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76cc17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb76cc15a50" loc="69:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cc15a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc15dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb76cc14170" loc="71:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb76cc14170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76cc144f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76cc14680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc14810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc149a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76cc14b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cc09d70" loc="58:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cc09d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc08180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc08310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc084a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc08630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc087c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb76cc08b10" loc="59:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb76cc08b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fb76cbd9db0" loc="184:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fb76cbd9db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cbd8180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cbd8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb76cc072f0" loc="60:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cc072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cc07670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cc07800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cc07990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cc07b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cc07cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cc07e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb76cc0ba20" loc="51:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb76cc0ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc0bda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc0a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc0a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc0a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76cc06b70" loc="62:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76cc06b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76cc05020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76cc051b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76cc05340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76cc054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76cc06170" loc="61:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cc06170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc064f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cc06680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cc06810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb76cc0b370" loc="49:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb76cc0b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc0b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76cc0d7b0" loc="46:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76cc0d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76cc0db30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76cc0dcc0"/>
        <function-ref name="request" scoped="" ref="0x7fb76cc0de50"/>
        <function-ref name="granted" scoped="" ref="0x7fb76cc0c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76cc0c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb76cc0c4d0" loc="48:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb76cc0c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cc0c850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc0c9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc0cb70"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cc0cd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cc0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb76cc0a840" loc="52:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb76cc0a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cc0abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb76cc09020" loc="54:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb76cc09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76cc093a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76cc09530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cc096c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cc09850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76cc099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76cbb9dd0" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76cbb9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76cbb8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb76cbb8410" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76cbb8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76cbb8790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76cbb8920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76cbb8ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76cbb8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76cbadb80" loc="46:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76cbadb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cbac020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cbac1b0"/>
        <function-ref name="start" scoped="" ref="0x7fb76cbac340"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cbac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cbab860" loc="51:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cbab860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cbabbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cbabd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cbaa020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cbaa1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cbaa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb76cbaa690" loc="52:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb76cbaa690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cbaaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cbb1ce0" loc="43:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cbb1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cbae0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cbae230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cbae3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cbae550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cbae6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb76cbad080" loc="45:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cbad080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb76cbad400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb76cbad590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb76cbad720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb76cbad8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fb76cbac800" loc="47:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fb76cbac800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cbacb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cbacd10"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cbab020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cbab1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cbab340"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cbab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fb76cbaad90" loc="53:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fb76cbaad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cba9180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cba9310"/>
        <function-ref name="start" scoped="" ref="0x7fb76cba94a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cba9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76cbae980" loc="44:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76cbae980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76cbaed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb76cba62d0" loc="41:../../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cba62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb76cba6650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb76cba67e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb76cba6970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb76cba6b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76cba8580" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76cba8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cba8900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cba8a90"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cba8c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cba8db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cb9d020"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cb9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cb98d70" loc="47:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cb98d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cb97180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cb97310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cb974a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cb97630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cb977c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cb992a0" loc="42:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cb992a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cb99620"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cb997b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cb99940"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cb99ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cb99c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb76cb98020" loc="43:../../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb76cb983a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb76cb98530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb76cb986c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb76cb98850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb76cb989e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76cb93dd0" loc="47:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76cb93dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cb92180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cb92310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cb924a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cb92630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cb927c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7fb76cb882a0" loc="77:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7fb76cb882a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76cb88620"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76cb887b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7fb76cb90650" loc="50:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7fb76cb90650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76cb8cc40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76cb8e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76cb8c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76cb8eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76cb8b590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76cb8b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76cb8e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76cb8f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76cb8c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76cb8f860"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cb8fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76cb963b0" loc="42:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76cb963b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76cb96730"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cb968c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76cb96a50"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76cb96be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76cb96d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7fb76cb92af0" loc="48:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fb76cb92af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cb92e70"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cb91030"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cb911c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cb91350"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cb914e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cb91670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb76cb8ba30" loc="51:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb76cb8ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb76cb8bdb0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb76cb8a020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb76cb8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fb76cb919a0" loc="49:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cb919a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76cb91d20"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76cb90020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76cb901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb76cb93080" loc="43:../../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb93080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb76cb93400"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb76cb93590"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb76cb93720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb76cb938b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb76cb93a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb76cb5d350" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb76cb5d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb76cb5d6d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb76cb5d860"/>
        <function-ref name="isState" scoped="" ref="0x7fb76cb5d9f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb76cb5db80"/>
        <function-ref name="requestState" scoped="" ref="0x7fb76cb5dd10"/>
        <function-ref name="forceState" scoped="" ref="0x7fb76cb5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76cb5b750" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76cb5b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76cb57c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb76cb591e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76cb57020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76cb59ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76cb56590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76cb56110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76cb59660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76cb5a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76cb57630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76cb5a860"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cb5ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb76cf54dd0" loc="11:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb76cf54dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb76cb43180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb76cb43310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb76cb434a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb76cb43630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb76cb42670" loc="13:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76cb42670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76cb429f0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76cb42b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76cb42d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb76cb438f0" loc="12:../../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb76cb438f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb76cb43c70"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb76cb43e00"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb76cb42020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb76cb421b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb76cb42340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7fb76cb3e020" loc="12:../../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7fb76cb3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7fb76cb3e3a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7fb76cb3e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb76cb39c70" loc="10:../../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb76cb39c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb76cb38020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb76cb381b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb76cb38340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb76cb384d0"/>
        <function-ref name="getPower" scoped="" ref="0x7fb76cb38660"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb76cb387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7fb76cb39450" loc="9:../../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7fb76cb39450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7fb76cb397d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7fb76cb39960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76cb3fe70" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76cb3fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76cb30390"/>
        <function-ref name="fired" scoped="" ref="0x7fb76cb32970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76cb31720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76cb312a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76cb30c90"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76cb30810"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76cb32df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76cb33a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76cb31d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76cb32020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cb324f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76cb28a40" loc="42:../../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76cb28a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cb02b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76cb02020"/>
        <function-ref name="empty" scoped="" ref="0x7fb76cb04670"/>
        <function-ref name="put" scoped="" ref="0x7fb76cb024a0"/>
        <function-ref name="size" scoped="" ref="0x7fb76cb04af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76bb2c210" loc="56:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76bb2c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76bb29330"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76bb2a780"/>
        <function-ref name="empty" scoped="" ref="0x7fb76bb2ce00"/>
        <function-ref name="put" scoped="" ref="0x7fb76bb2ac00"/>
        <function-ref name="size" scoped="" ref="0x7fb76bb2a300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bb2daf0" loc="55:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bb2daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bb2de70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76cafe020" loc="42:../../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76cafe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cafc110"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76cafd550"/>
        <function-ref name="empty" scoped="" ref="0x7fb76cafec10"/>
        <function-ref name="put" scoped="" ref="0x7fb76cafd9d0"/>
        <function-ref name="size" scoped="" ref="0x7fb76cafd0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76bb19d80" loc="56:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76bb19d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76bb17e70"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76bb17300"/>
        <function-ref name="empty" scoped="" ref="0x7fb76bb189a0"/>
        <function-ref name="put" scoped="" ref="0x7fb76bb17780"/>
        <function-ref name="size" scoped="" ref="0x7fb76bb18e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bb19690" loc="55:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bb19690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bb19a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fb76caf8850" loc="43:../../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76caf8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7fb76df03d00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fb76cadc6e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fb76cada490"/>
        <function-ref name="element" scoped="" ref="0x7fb76cadab00"/>
        <function-ref name="full" scoped="" ref="0x7fb76cadd900"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76cadc260"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76cadcd90"/>
        <function-ref name="empty" scoped="" ref="0x7fb76cadd480"/>
        <function-ref name="size" scoped="" ref="0x7fb76caddd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76cad7020" loc="42:../../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76cad7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76cad4110"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76cad5550"/>
        <function-ref name="empty" scoped="" ref="0x7fb76cad7c10"/>
        <function-ref name="put" scoped="" ref="0x7fb76cad59d0"/>
        <function-ref name="size" scoped="" ref="0x7fb76cad50d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76bafb020" loc="56:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76bafb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76baf8110"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76bafa550"/>
        <function-ref name="empty" scoped="" ref="0x7fb76bafbc10"/>
        <function-ref name="put" scoped="" ref="0x7fb76bafa9d0"/>
        <function-ref name="size" scoped="" ref="0x7fb76bafa0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bafc900" loc="55:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bafc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bafcc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76caca440" loc="11:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76caca440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76caca7c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76caca950"/>
        <function-ref name="start" scoped="" ref="0x7fb76cacaae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cacac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7fb76cac61a0" loc="16:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7fb76cac61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76cac6520"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76cac66b0"/>
        <function-ref name="start" scoped="" ref="0x7fb76cac6840"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cac69d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7fb76cac6dd0" loc="17:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7fb76cac6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cac5180"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cac5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76cac55c0" loc="18:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76cac55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76cac5940"/>
        <function-ref name="changed" scoped="" ref="0x7fb76cac5ad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76cac5c60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76cac5df0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76cac4020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76cac41b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76cac4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7fb76cac78c0" loc="15:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7fb76cac78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cac7c40"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cac7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fb76cac7020" loc="14:../../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76cac7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76cac73a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76cac7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7fb76caab020" loc="15:../../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7fb76caab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7fb76caab3a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7fb76caab530"/>
        <function-ref name="findTLV" scoped="" ref="0x7fb76caab6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76ca92a40" loc="42:../../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76ca92a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7fb76e49b110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76ca8fb90"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76ca8f020"/>
        <function-ref name="empty" scoped="" ref="0x7fb76ca91670"/>
        <function-ref name="put" scoped="" ref="0x7fb76ca8f4a0"/>
        <function-ref name="size" scoped="" ref="0x7fb76ca91af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76bae0d10" loc="56:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76bae0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7fb76e49b110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76badde10"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76badd2a0"/>
        <function-ref name="empty" scoped="" ref="0x7fb76bade940"/>
        <function-ref name="put" scoped="" ref="0x7fb76badd720"/>
        <function-ref name="size" scoped="" ref="0x7fb76badedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76bae0620" loc="55:../../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76bae0620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76bae09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb76ca8d970" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb76ca8d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e6a8df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb76e4ce200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76ca89e80"/>
        <function-ref name="fired" scoped="" ref="0x7fb76ca8b4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb76ca89260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb76ca8bda0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb76ca887a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb76ca88320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76ca8b920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb76ca8c5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb76ca89870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb76ca8ca70"/>
        <function-ref name="stop" scoped="" ref="0x7fb76ca8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fb76ca7cae0" loc="43:../../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76ca7cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fb76ca7a990"/>
        <function-ref name="enqueue" scoped="" ref="0x7fb76ca79740"/>
        <function-ref name="element" scoped="" ref="0x7fb76ca79db0"/>
        <function-ref name="full" scoped="" ref="0x7fb76ca7bbd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76ca7a510"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76ca79090"/>
        <function-ref name="empty" scoped="" ref="0x7fb76ca7b750"/>
        <function-ref name="size" scoped="" ref="0x7fb76ca7a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76ca754a0" loc="42:../../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76ca754a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76ca72570"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76ca749d0"/>
        <function-ref name="empty" scoped="" ref="0x7fb76ca740d0"/>
        <function-ref name="put" scoped="" ref="0x7fb76ca74e50"/>
        <function-ref name="size" scoped="" ref="0x7fb76ca74550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7fb76babe020" loc="56:../../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7fb76babe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7fb76e3e9020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7fb76e3e94f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76babb110"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76babd550"/>
        <function-ref name="empty" scoped="" ref="0x7fb76babec10"/>
        <function-ref name="put" scoped="" ref="0x7fb76babd9d0"/>
        <function-ref name="size" scoped="" ref="0x7fb76babd0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76babf900" loc="55:../../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76babf900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76babfc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7fb76ca6a540" loc="8:../../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7fb76ca6a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fb76ca6a8c0"/>
        <function-ref name="OCP" scoped="" ref="0x7fb76ca6aa50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7fb76ca6abe0"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76ca6ad70"/>
        <function-ref name="resetRank" scoped="" ref="0x7fb76ca67020"/>
        <function-ref name="getOCP" scoped="" ref="0x7fb76ca671b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7fb76ca67340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7fb76ca674d0"/>
        <function-ref name="getParent" scoped="" ref="0x7fb76ca67660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7fb76ca677f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7fb76ca60260" loc="43:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7fb76ca60260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76ca605e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7fb76ca609b0" loc="44:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7fb76ca609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7fb76ca60d30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7fb76ca5f020"/>
        <function-ref name="startDAO" scoped="" ref="0x7fb76ca5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7fb76ca66360" loc="40:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7fb76ca66360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7fb76ca666e0"/>
        <function-ref name="OCP" scoped="" ref="0x7fb76ca66870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7fb76ca66a00"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76ca66b90"/>
        <function-ref name="resetRank" scoped="" ref="0x7fb76ca66d20"/>
        <function-ref name="getOCP" scoped="" ref="0x7fb76ca63020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7fb76ca631b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7fb76ca63340"/>
        <function-ref name="getParent" scoped="" ref="0x7fb76ca634d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7fb76ca63660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7fb76ca628b0" loc="42:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7fb76ca628b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7fb76ca62c30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76ca61ca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7fb76ca61e30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7fb76ca611b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76ca61340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7fb76ca614d0"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76ca61660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7fb76ca617f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7fb76ca61020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7fb76ca61980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7fb76ca61b10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7fb76ca62dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7fb76ca63990" loc="41:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7fb76ca63990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7fb76ca63d10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7fb76ca62020"/>
        <function-ref name="delRoute" scoped="" ref="0x7fb76ca621b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7fb76ca62340"/>
        <function-ref name="addRoute" scoped="" ref="0x7fb76ca624d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7fb76ca5f540" loc="45:../../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7fb76ca5f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7fb76ca5f8c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7fb76ca5fa50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7fb76ca5fbe0"/>
        <function-ref name="hasParent" scoped="" ref="0x7fb76ca5fd70"/>
        <function-ref name="validInstance" scoped="" ref="0x7fb76ca5d020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7fb76ca5d1b0"/>
        <function-ref name="getRank" scoped="" ref="0x7fb76ca5d340"/>
        <function-ref name="getEtx" scoped="" ref="0x7fb76ca5d4d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7fb76ca5d660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7fb76ca5d7f0"/>
        <function-ref name="isParent" scoped="" ref="0x7fb76ca5d980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7fb76ca5db10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7fb76ca5dca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7fb76ca5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76ca24840" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76ca24840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76ca24be0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76ca24d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7fb76baaaae0" loc="36:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7fb76baaaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76baaae60"/>
        <function-ref name="recv" scoped="" ref="0x7fb76baa8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76baaa2e0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76baaa2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76baaa680"/>
        <function-ref name="recv" scoped="" ref="0x7fb76baaa810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76ca0d5d0" loc="46:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76ca0d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76ca0d950"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76ca0dae0"/>
        <function-ref name="start" scoped="" ref="0x7fb76ca0dc70"/>
        <function-ref name="stop" scoped="" ref="0x7fb76ca0de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb76ca0a600" loc="47:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76ca0a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76ca0a980"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76ca0ab10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76ca0aca0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76ca0ae30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76ca09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb76ca09e10" loc="49:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76ca09e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76ca081c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76ca08350"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76ca084e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76ca08670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76ca08800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76ca09800" loc="48:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76ca09800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76ca09b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c9f7300" loc="53:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c9f7300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c9f7680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c9f7810"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c9f79a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c9f7b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c9f7cc0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c9f7e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c9f4020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c9f4660"/>
        <function-ref name="set" scoped="" ref="0x7fb76c9f41b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c9f4340"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c9f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb76ca06800" loc="51:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76ca06800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76ca06b80"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76ca06d10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76c9f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb76ca07020" loc="50:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb76ca07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb76ca073a0"/>
        <function-ref name="source" scoped="" ref="0x7fb76ca07530"/>
        <function-ref name="address" scoped="" ref="0x7fb76ca076c0"/>
        <function-ref name="destination" scoped="" ref="0x7fb76ca07850"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76ca079e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb76ca07b70"/>
        <function-ref name="type" scoped="" ref="0x7fb76ca07d00"/>
        <function-ref name="setType" scoped="" ref="0x7fb76ca06020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb76ca061b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb76ca06340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb76ca064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb76c9974a0" loc="54:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb76c9974a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c997820"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c9979b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c997b40"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c997cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c997e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb76c996120" loc="55:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb76c996120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76c9964a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb76c9f2300" loc="47:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76c9f2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c9f26a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c9f2830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c9f29c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c9f2b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c9f2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb76c999d60" loc="50:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76c999d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c998180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76c998310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c9984a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c998630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76c9987c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76c99b0d0" loc="48:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76c99b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76c99b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb76c998a10" loc="51:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb76c998a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76c998d90"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76c997020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76c9971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb76c99b6c0" loc="49:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb76c99b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb76c99ba40"/>
        <function-ref name="source" scoped="" ref="0x7fb76c99bbd0"/>
        <function-ref name="address" scoped="" ref="0x7fb76c99bd60"/>
        <function-ref name="destination" scoped="" ref="0x7fb76c999020"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76c9991b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb76c999340"/>
        <function-ref name="type" scoped="" ref="0x7fb76c9994d0"/>
        <function-ref name="setType" scoped="" ref="0x7fb76c999660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb76c9997f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb76c999980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb76c999b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76c994b90" loc="50:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76c994b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76c990020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76c9901b0"/>
        <function-ref name="start" scoped="" ref="0x7fb76c990340"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c9904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76c98f790" loc="52:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76c98f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fb76e6bd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c98fb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c98fca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c98fe30"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c98e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c98e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c994540" loc="49:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c994540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c9948c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76c990c60" loc="51:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76c990c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fb76e6bd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76c98f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c98c2b0" loc="56:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c98c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c98c630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c98c7c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c98c950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c98cae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c98cc70"/>
        <function-ref name="get" scoped="" ref="0x7fb76c98ce00"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c98b020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c98b660"/>
        <function-ref name="set" scoped="" ref="0x7fb76c98b1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c98b340"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c98b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fb76c988970" loc="55:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fb76c988970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fb76e6bd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fb76c988cf0"/>
        <function-ref name="offset" scoped="" ref="0x7fb76c988e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fb76c98c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb76c9857c0" loc="66:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76c9857c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76c985b40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76c985cd0"/>
        <function-ref name="start" scoped="" ref="0x7fb76c985e60"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c983020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fb76c91f6e0" loc="332:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fb76c91f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c91fa60"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c91fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fb76c973860" loc="74:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fb76c973860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c973be0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c973d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fb76c9564f0" loc="191:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fb76c9564f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c956870"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c956a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c985170" loc="65:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c985170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c9854f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fb76c96f480" loc="75:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fb76c96f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fb76c96f800"/>
        <function-ref name="flush" scoped="" ref="0x7fb76c96f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fb76c922c70" loc="322:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fb76c922c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c921020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c9211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fb76c97d020" loc="72:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fb76c97d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fb76c97d3a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fb76c97d530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fb76c97d6c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fb76c97d850"/>
        <function-ref name="putData" scoped="" ref="0x7fb76c97d9e0"/>
        <function-ref name="putDone" scoped="" ref="0x7fb76c97db70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fb76c97dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c979020" loc="73:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c979020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c9793a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c979530"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c9796c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c979850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c9799e0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c979b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c979d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c9734d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c973020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c9731b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c973340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fb76c91ba00" loc="341:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fb76c91ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c91bd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c91a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fb76c97e720" loc="67:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fb76c97e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fb76c97eaa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7fb76c97ec30"/>
        <function-ref name="startSend" scoped="" ref="0x7fb76c97edc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fb76c982020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fb76c97ac40" loc="68:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fb76c97ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fb76c981020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fb76c9811b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fb76c981340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fb76c850020" loc="275:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fb76c850020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c8503a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c850530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76c855de0" loc="51:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76c855de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fb76e6bd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c8541c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c854350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c8544e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c854670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c854800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fb76c850800" loc="158:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fb76c850800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c850b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c850d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb76c8556c0" loc="50:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb76c8556c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fb76e6bd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb76c855a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fb76c854c20" loc="54:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fb76c854c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fb76e6bd8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fb76c853020"/>
        <function-ref name="offset" scoped="" ref="0x7fb76c8531b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fb76c853340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c852920" loc="57:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c852920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c852ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c852e30"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c851020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c8511b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c851340"/>
        <function-ref name="get" scoped="" ref="0x7fb76c8514d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c851660"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c851ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c851980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c8517f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c851b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fb76c853e80" loc="56:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fb76c853e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fb76c852220"/>
        <function-ref name="nextByte" scoped="" ref="0x7fb76c8523b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fb76c852540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fb76c8526d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fb76c853590" loc="55:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fb76c853590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fb76c853910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fb76c853aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fb76c853c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fb76c840d20" loc="50:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb76c840d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c8490e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb76c849270"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c849400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb76c849590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb76c849720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb76c8498b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c849a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fb76c84ee00" loc="48:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fb76c84ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fb76c84b1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fb76c84b350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fb76c84b4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fb76c84b670"/>
        <function-ref name="putData" scoped="" ref="0x7fb76c84b800"/>
        <function-ref name="putDone" scoped="" ref="0x7fb76c84b990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fb76c84bb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c849cc0" loc="51:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c849cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c8480a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c848230"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c8483c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c848550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c8486e0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c848870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c848a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c83d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c848b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c848d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c83d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb76c821020" loc="6:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb76c821020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c8213a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb76c821530"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c8216c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb76c821850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb76c823890" loc="5:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb76c823890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c823c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb76c823da0"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c822020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb76c8221b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb76c822340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb76c8224d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c822660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76c823080" loc="4:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76c823080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c823400"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c823590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76c693c70" loc="45:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c693c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76c692020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76c6921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb76c690440" loc="47:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb76c690440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c6907c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb76c690950"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c690ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb76c690c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb76c68f020" loc="49:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c68f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76c68f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb76c692440" loc="46:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb76c692440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c6927c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb76c692950"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c692ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb76c692c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb76c692e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb76c690020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c6901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76c693020" loc="44:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76c693020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c6933a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c693530"/>
        <function-ref name="request" scoped="" ref="0x7fb76c6936c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c693850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c6939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb76c811a30" loc="42:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c811a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76c811db0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76c80f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb76c80d020" loc="44:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb76c80d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c80d3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb76c80d530"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c80d6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb76c80d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb76c80a450" loc="47:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c80a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76c80a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb76c80f860" loc="43:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb76c80f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c80fbe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb76c80fd70"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c80e020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb76c80e1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb76c80e340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb76c80e4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c80e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb76c80c1d0" loc="46:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb76c80c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c80c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c80c6e0"/>
        <function-ref name="request" scoped="" ref="0x7fb76c80c870"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c80ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c80cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76c8127a0" loc="41:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76c8127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c812b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c812cb0"/>
        <function-ref name="request" scoped="" ref="0x7fb76c812e40"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c811020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c8111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb76c8091d0" loc="48:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76c8091d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c809550"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c8096e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb76c79edc0" loc="44:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c79edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76c79d180"/>
        <function-ref name="configure" scoped="" ref="0x7fb76c79d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb76c79c890" loc="46:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb76c79c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c79cc30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb76c79cdc0"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c79b020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb76c79b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb76c79a3e0" loc="49:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c79a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76c79a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fb76c79aa50" loc="50:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb76c79aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76c79add0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76c799020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76c7991b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76c799340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76c7994d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76c799660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76c7997f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76c799980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76c799b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76c799ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76c799e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76c798020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76c7981b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76c798440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76c7985d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76c798760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76c7988f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76c798a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76c798c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76c798da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76c797020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76c7971b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76c797340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76c7974d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76c797660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76c7979f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76c797b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76c797d10"/>
        <function-ref name="tx" scoped="" ref="0x7fb76c796020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76c7961b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76c796340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76c7964d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76c796660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76c7967f0"/>
        <function-ref name="rx" scoped="" ref="0x7fb76c796980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76c796b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76c796ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76c796e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76c795020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76c7951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb76c79d6d0" loc="45:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb76c79d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c79da70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb76c79dc00"/>
        <function-ref name="receive" scoped="" ref="0x7fb76c79dd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb76c79c020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb76c79c1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb76c79c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c79c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76c793020" loc="52:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76c793020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76c793e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76c792800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76c792340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76c792cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb76c79b5b0" loc="48:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb76c79b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c79b950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c79bae0"/>
        <function-ref name="request" scoped="" ref="0x7fb76c79bc70"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c79be00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c79a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76c79e020" loc="43:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76c79e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c79e3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c79e550"/>
        <function-ref name="request" scoped="" ref="0x7fb76c79e6e0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c79e870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c79ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb76c7955b0" loc="51:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb76c7955b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c795950"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c795ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c791120" loc="53:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c791120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c7914a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c791630"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c7917c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c791950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c791ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c791c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c791e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c7904d0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c7901b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c790020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c790340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb76c782860" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76c782860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c782be0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c782d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fb76c785500" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c785500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c785880"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c785a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb76c785d30" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76c785d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76c7880e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76c788270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76c788400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76c788590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76c788720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76c7888b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76c788a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76c788bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76c788d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76c787020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76c7871b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76c787340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76c7874d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76c787760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76c7878f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76c787a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76c787c10"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76c787da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76c784020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76c7841b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76c784340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76c7844d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76c784660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76c7847f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76c784980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76c784d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76c783020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76c7831b0"/>
        <function-ref name="tx" scoped="" ref="0x7fb76c783340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76c7834d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76c783660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76c7837f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76c783980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76c783b10"/>
        <function-ref name="rx" scoped="" ref="0x7fb76c783ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76c783e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76c782020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76c7821b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76c782340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76c7824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb76c774990" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb76c774990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76c774d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76c773020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76c7731b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76c773340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76c7734d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76c773660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76c7737f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c773980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76c773b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76c773ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c773e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76c772020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76c7721b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76c772440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76c7725d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb76c778130" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb76c778130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c7784b0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c778640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fb76c772990" loc="81:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fb76c772990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76c772d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76c771020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76c7711b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76c771340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76c7714d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76c771660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76c7717f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c771980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76c771b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76c771ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c771e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76c770020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76c7701b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76c770440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76c7705d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fb76c770990" loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fb76c770990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76c770d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76c76f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76c76f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76c76f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76c76f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76c76f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76c76f7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c76f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76c76fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76c76fca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c76fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76c76e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76c76e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76c76e440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76c76e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fb76c77d550" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb76c77d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76c77d8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76c77da60"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76c77dbf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76c77dd80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76c77c020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76c77c1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76c77c340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76c77c4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76c77c660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76c77c7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76c77c980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76c77cb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76c77cca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76c77b020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76c77b1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76c77b340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76c77b4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76c77b660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76c77b7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76c77b980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76c77bb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76c77bca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76c77be30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76c77a020"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76c77a1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76c77a540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76c77a6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76c77a860"/>
        <function-ref name="tx" scoped="" ref="0x7fb76c77a9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76c77ab80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76c77ad10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76c779020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76c7791b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76c779340"/>
        <function-ref name="rx" scoped="" ref="0x7fb76c7794d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76c779660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76c7797f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76c779980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76c779b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76c779ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fb76c780bc0" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c780bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c77d020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c77d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fb76c776990" loc="79:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fb76c776990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76c776d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76c775020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76c7751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76c775340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76c7754d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76c775660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76c7757f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c775980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76c775b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76c775ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c775e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76c774020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76c7741b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76c774440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76c7745d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb76c778a00" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb76c778a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb76c778d80"/>
        <function-ref name="isInput" scoped="" ref="0x7fb76c777020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb76c7771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb76c777340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb76c7774d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb76c777660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb76c7777f0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c777980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb76c777b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb76c777ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76c777e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb76c776020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb76c7761b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb76c776440"/>
        <function-ref name="clr" scoped="" ref="0x7fb76c7765d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb76c6ef110" loc="43:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76c6ef110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb76e4ce640"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb76e4ce9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76c6ee020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76c6ee9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76c6ee4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76c6eee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76ba2c5d0" loc="43:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76ba2c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76ba2c950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76ba2cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76ba267c0" loc="48:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76ba267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76ba26b40"/>
        <function-ref name="configure" scoped="" ref="0x7fb76ba26cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb76ba26020" loc="46:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76ba26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76ba263a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76ba26530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76ba2e880" loc="42:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76ba2e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76ba2ec00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76ba2ed90"/>
        <function-ref name="request" scoped="" ref="0x7fb76ba2c020"/>
        <function-ref name="granted" scoped="" ref="0x7fb76ba2c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76ba2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb76ba2b5a0" loc="45:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76ba2b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76ba2b920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76ba2bab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76ba2bc40"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76ba2bdd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76ba2a020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76ba2a1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76ba2a340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76ba2a4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76ba2a660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76ba2a7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76ba2a980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76ba2ab10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76ba2aca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76ba29020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76ba291b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76ba29340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76ba294d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76ba29660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76ba297f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76ba29980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76ba29b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76ba29ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76ba29e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76ba28020"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76ba281b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76ba28540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76ba286d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76ba28860"/>
        <function-ref name="tx" scoped="" ref="0x7fb76ba289f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76ba28b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76ba28d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76ba27020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76ba271b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76ba27340"/>
        <function-ref name="rx" scoped="" ref="0x7fb76ba274d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76ba27660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76ba277f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76ba27980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76ba27b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76ba27ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76ba2cd70" loc="44:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76ba2cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76ba2b180"/>
        <function-ref name="userId" scoped="" ref="0x7fb76ba2b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76c6d4510" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c6d4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76c6d4890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76c6d4a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76c6d2af0" loc="45:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c6d2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76c6d2e70"/>
        <function-ref name="configure" scoped="" ref="0x7fb76c6d1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb76c6d6510" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb76c6d6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c6d6890"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c6d6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76c6d5280" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76c6d5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c6d5600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c6d5790"/>
        <function-ref name="request" scoped="" ref="0x7fb76c6d5920"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c6d5ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c6d5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76c6d4d20" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6d4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76c6d20e0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76c6d2270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb76c6ce120" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76c6ce4a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76c6ce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb76c6d0230" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb76c6d0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c6d05d0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c6d0760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fb76c6cfad0" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb76c6cfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76c6cfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb76c6d0b60" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb76c6d0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb76c6cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fb76c6cf2f0" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fb76c6cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76c6cf670"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76c6cf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76c6cbbd0" loc="92:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76c6cbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76c6c9020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76c6c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76c6c8930" loc="96:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76c6c8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76c6c8cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76c6c8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb76c6c9400" loc="93:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76c6c9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c6c9780"/>
        <function-ref name="requested" scoped="" ref="0x7fb76c6c9910"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c6c9aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c6c9c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76c6c9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76c6cce30" loc="91:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76c6cce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c6cb210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c6cb3a0"/>
        <function-ref name="request" scoped="" ref="0x7fb76c6cb530"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c6cb6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c6cb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76c6c8060" loc="94:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6c8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76c6c83e0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76c6c8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76b9c2ca0" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76b9c2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76b9c10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb76b9c1330" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76b9c1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76b9c16b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76b9c1840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76b9c19d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76b9c1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76b9be3a0" loc="55:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76b9be3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76b9be740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76b9be8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76b9bc210" loc="60:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76b9bc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76b9bc5b0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76b9bc740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76b9bc9d0" loc="61:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76b9bc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76b9bcd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76b9ba020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76b9ba1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76b9ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb76b9beb20" loc="56:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76b9beb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76b9bd020"/>
        <function-ref name="requested" scoped="" ref="0x7fb76b9bd1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76b9bd340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76b9bd4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76b9bd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76b9ba590" loc="62:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76b9ba590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76b9ba910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76b9baaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76b9bac30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76b9badc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76b9b9020"/>
        <function-ref name="get" scoped="" ref="0x7fb76b9b91b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76b9b9340"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76b9b9980"/>
        <function-ref name="set" scoped="" ref="0x7fb76b9b9660"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76b9b94d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76b9b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76b9bf540" loc="54:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76b9bf540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76b9bf8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76b9bfa70"/>
        <function-ref name="request" scoped="" ref="0x7fb76b9bfc00"/>
        <function-ref name="granted" scoped="" ref="0x7fb76b9bfd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76b9be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76b9bd8b0" loc="57:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76b9bd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76b9bdc30"/>
        <function-ref name="userId" scoped="" ref="0x7fb76b9bddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb76b9b9c50" loc="75:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb76b9b9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76b9b8020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76b9b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb76c6ad400" loc="72:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76c6ad400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb76c6ad780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb76c6ad9d0" loc="73:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76c6ad9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c6add50"/>
        <function-ref name="requested" scoped="" ref="0x7fb76c6ac020"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c6ac1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c6ac340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76c6ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fb76c6c3b20" loc="70:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76c6c3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c6ad020"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c6ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb76c6ac720" loc="74:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76c6ac720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76c6acaa0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76c6acc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb76b989b00" loc="62:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76b989b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb76b989e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb76b9880f0" loc="63:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76b9880f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76b988470"/>
        <function-ref name="requested" scoped="" ref="0x7fb76b988600"/>
        <function-ref name="granted" scoped="" ref="0x7fb76b988790"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76b988920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76b988ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fb76b9893a0" loc="60:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76b9893a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76b989720"/>
        <function-ref name="stop" scoped="" ref="0x7fb76b9898b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb76b988d00" loc="64:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76b988d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76b9870a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76b987230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fb76c68b920" loc="3:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb76c68b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb76c68bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb76c68a020" loc="4:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76c68a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76c68a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76c68a530"/>
        <function-ref name="request" scoped="" ref="0x7fb76c68a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76c68a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76c68a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76c68b0c0" loc="2:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76c68b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c68b440"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c68b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fb76c6798c0" loc="47:../../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fb76c6798c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fb76c679c40"/>
        <function-ref name="offset" scoped="" ref="0x7fb76c679dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fb76c676020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7fb76c664020" loc="9:../../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7fb76c664020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7fb76c6643a0"/>
        <function-ref name="bind" scoped="" ref="0x7fb76c664530"/>
        <function-ref name="sendtov" scoped="" ref="0x7fb76c6646c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7fb76c664850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7fb76c65f7f0" loc="13:../../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76c65f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7fb76d256700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7fb76d256bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c65e990"/>
        <function-ref name="get" scoped="" ref="0x7fb76c65e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7fb76c662a20" loc="12:../../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7fb76c662a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7fb76c662da0"/>
        <function-ref name="bind" scoped="" ref="0x7fb76c65f020"/>
        <function-ref name="sendtov" scoped="" ref="0x7fb76c65f1b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7fb76c65f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7fb76c658850" loc="15:../../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7fb76c658850"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7fb76d256700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7fb76d256bd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c657990"/>
        <function-ref name="get" scoped="" ref="0x7fb76c657480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c658020" loc="14:../../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c658020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fb76eb9eb80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c6583a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76c656600" loc="19:../../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76c656600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76c656980"/>
        <function-ref name="changed" scoped="" ref="0x7fb76c656b10"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76c656ca0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76c656e30"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76c655020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76c6551b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76c655340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7fb76c65a020" loc="13:../../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7fb76c65a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7fb76c65a3a0"/>
        <function-ref name="bind" scoped="" ref="0x7fb76c65a530"/>
        <function-ref name="sendtov" scoped="" ref="0x7fb76c65a6c0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7fb76c65a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7fb76c657e20" loc="18:../../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76c657e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c6561c0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76c656350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fb76c60ac80" loc="44:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb76c60ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb76c6090a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fb76c60b020" loc="41:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb76c60b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb76c60b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7fb76c60b650" loc="42:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7fb76c60b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7fb76c60b9d0"/>
        <function-ref name="changed" scoped="" ref="0x7fb76c60bb60"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7fb76c60bcf0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7fb76c60be80"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76c60a030"/>
        <function-ref name="removeAddress" scoped="" ref="0x7fb76c60a1c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7fb76c60a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7fb76c60a620" loc="43:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7fb76c60a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7fb76c60a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7fb76c6093a0" loc="45:../../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7fb76c6093a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7fb76c6081b0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7fb76c6098b0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7fb76c609a40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7fb76c609bd0"/>
        <function-ref name="matchContext" scoped="" ref="0x7fb76c609d60"/>
        <function-ref name="getPrefix" scoped="" ref="0x7fb76c609720"/>
        <function-ref name="getContext" scoped="" ref="0x7fb76c608020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7fb76c5fb130" loc="44:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7fb76c5fb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7fb76c5fb4b0"/>
        <function-ref name="setRoot" scoped="" ref="0x7fb76c5fb640"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7fb76c5fb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb76c60e8f0" loc="43:../../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76c60e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76c60ec70"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c60ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76c5f9980" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76c5f9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c5f9d20"/>
        <function-ref name="recv" scoped="" ref="0x7fb76c5f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7fb76b979500" loc="36:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7fb76b979500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76b979880"/>
        <function-ref name="recv" scoped="" ref="0x7fb76b979a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7fb76b97ace0" loc="35:../../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7fb76b97ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76b9790a0"/>
        <function-ref name="recv" scoped="" ref="0x7fb76b979230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb76c57c870" loc="49:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76c57c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c57cbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c57cd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c57a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c57a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c57a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb76c57a590" loc="50:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76c57a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c57a910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76c57aaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c57ac30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c57adc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76c579020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb76c579270" loc="51:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb76c579270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb76c5795f0"/>
        <function-ref name="source" scoped="" ref="0x7fb76c579780"/>
        <function-ref name="address" scoped="" ref="0x7fb76c579910"/>
        <function-ref name="destination" scoped="" ref="0x7fb76c579aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76c579c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb76c579dc0"/>
        <function-ref name="type" scoped="" ref="0x7fb76c578020"/>
        <function-ref name="setType" scoped="" ref="0x7fb76c5781b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb76c578340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb76c5784d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb76c578660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb76c5788f0" loc="52:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb76c5788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb76c578c70"/>
        <function-ref name="noAck" scoped="" ref="0x7fb76c578e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb76c577020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb76b9690c0" loc="44:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76b9690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76b969440"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76b9695d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76b969760"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76b9698f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76b969a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fb76b969d30" loc="46:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76b969d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76b9680e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76b968270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76b968400"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76b968590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76b968720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb76b968970" loc="47:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb76b968970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb76b968cf0"/>
        <function-ref name="source" scoped="" ref="0x7fb76b968e80"/>
        <function-ref name="address" scoped="" ref="0x7fb76b967030"/>
        <function-ref name="destination" scoped="" ref="0x7fb76b9671c0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76b967350"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb76b9674e0"/>
        <function-ref name="type" scoped="" ref="0x7fb76b967670"/>
        <function-ref name="setType" scoped="" ref="0x7fb76b967800"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb76b967990"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb76b967b20"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb76b967cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76c5d6ce0" loc="44:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76c5d6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c5d30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c5d3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c5d33c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c5d3550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c5d36e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb76c588400" loc="48:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76c588400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c5887a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c588930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c588ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c588c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c588de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb76c589580" loc="46:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb76c589580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c589920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c589ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c589c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c589dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c588020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb76c586720" loc="50:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76c586720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c586aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76c586c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c586dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c585020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76c5851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fb76c585480" loc="169:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fb76c585480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c585800"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c585990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fb76c585c60" loc="126:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fb76c585c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c584020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c5841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb76c587060" loc="49:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb76c587060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb76c5873e0"/>
        <function-ref name="source" scoped="" ref="0x7fb76c587570"/>
        <function-ref name="address" scoped="" ref="0x7fb76c587700"/>
        <function-ref name="destination" scoped="" ref="0x7fb76c587890"/>
        <function-ref name="setSource" scoped="" ref="0x7fb76c587a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb76c587bb0"/>
        <function-ref name="type" scoped="" ref="0x7fb76c587d40"/>
        <function-ref name="setType" scoped="" ref="0x7fb76c586020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb76c5861b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb76c586340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb76c5864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fb76c574760" loc="43:../../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76c574760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fb76c5525f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fb76c551020"/>
        <function-ref name="element" scoped="" ref="0x7fb76c5514f0"/>
        <function-ref name="full" scoped="" ref="0x7fb76c554810"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76c552170"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76c552a70"/>
        <function-ref name="empty" scoped="" ref="0x7fb76c554390"/>
        <function-ref name="size" scoped="" ref="0x7fb76c554c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76c54aca0" loc="93:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76c54aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fb76c54bae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fb76c5484a0"/>
        <function-ref name="element" scoped="" ref="0x7fb76c548970"/>
        <function-ref name="full" scoped="" ref="0x7fb76c54cd40"/>
        <function-ref name="maxSize" scoped="" ref="0x7fb76c54b660"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76c548020"/>
        <function-ref name="empty" scoped="" ref="0x7fb76c54c8c0"/>
        <function-ref name="size" scoped="" ref="0x7fb76c54b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb76c548df0" loc="94:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb76c548df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb76c5461c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c546350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c5464e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb76c546670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb76c546800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb76c546a90" loc="95:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb76c546a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76c546e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb76c545020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb76c5451b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb76c545340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb76c5454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fb76c541d10" loc="114:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fb76c541d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76c5400e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76c540270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c550cc0" loc="89:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c550cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c54d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76c545750" loc="96:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76c545750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76c545ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76c545c60"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76c545df0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76c544020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76c5441b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76c544340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76c5444d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76c544b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76c544660"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76c5447f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76c544980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fb76c54a400" loc="90:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb76c54a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb76c54a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fb76c5272a0" loc="43:../../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb76c5272a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb76c527620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76c5265a0" loc="94:../../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76c5265a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76c526920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fb76c526c00" loc="95:../../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb76c526c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb76c523020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fb76c51eb90" loc="39:../../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb76c51eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb76c51b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fb76c51b3c0" loc="40:../../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fb76c51b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76c51b740"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76c51b8d0"/>
        <function-ref name="start" scoped="" ref="0x7fb76c51ba60"/>
        <function-ref name="stop" scoped="" ref="0x7fb76c51bbf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb76e6a4640" loc="62:../../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fb76e6a5270" loc="60:../../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fb76e6765b0" loc="48:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fb76e679870" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fb76e678e60" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fb76e679190" loc="42:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fb76e678020" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fb76e67a350" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fb76e67aa30" loc="41:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fb76e678740" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fb76e81d020" loc="62:../../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fb76eae2c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fb76e6252a0" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb76e625020" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fb76e6295d0" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb76e66e180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb76e66ebd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb76e625b10" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fb76e624a00" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fb76e626790" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb76e624270" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fb76e629d70" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fb76e627540" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fb76e626020" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb76e66e180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb76e66ebd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb76e627d10" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb76e66e180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb76e66ebd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb76e616270" loc="44:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fb76e6148c0" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fb76e614640" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb76e6134e0" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb76e613260" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb76e615e40" loc="73:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb76e615580" loc="68:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fb76e616c20" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb76e6169a0" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb76e61d560" loc="40:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fb76e61c020" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb76e61dc60" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fb76e61ca00" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb76e61c780" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fb76e61b410" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb76e61b190" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb76e61bb00" loc="45:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb76e62ead0" loc="52:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb76e62c400" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fb76e62c180" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb76e62d270" loc="53:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb76e674d50" loc="45:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb76e62d9b0" loc="54:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb76e631c50" loc="47:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb76e62e3e0" loc="51:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb76e631510" loc="46:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb76e630390" loc="48:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fb76e630ca0" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb76e630a20" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fb76e62ce10" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fb76e62cb90" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb76e5ed1f0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fb76e740a80" loc="85:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fb76e73d1f0" loc="86:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fb76e7402b0" loc="79:../../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fb76e959810" loc="52:../../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb76eb9c020" loc="57:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fb76eb9b020" loc="72:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fb76eb9c790" loc="65:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fb76eb90270" loc="67:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fb76eb90ac0" loc="75:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7fb76e44c750" loc="43:../../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7fb76e458930" loc="41:../../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7fb76e44c070" loc="42:../../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fb76e446020" loc="113:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb76e447c50" loc="113:../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fb76e445520" loc="138:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb76e4452a0" loc="138:../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb76e447270" loc="104:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb76e446870" loc="130:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb76e3cb0b0" loc="65:../../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e419df0" loc="65:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fb76e3c92a0" loc="78:../../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3c9020" loc="78:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb76e3c7620" loc="126:../../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3c7020" loc="126:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e3c7350" loc="126:../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb76e3c66d0" loc="106:../../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fb76e3c8730" loc="94:../../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3c8170" loc="94:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e3c84a0" loc="94:../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb76e3d5a60" loc="80:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76e3d5110" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fb76e3d5490" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e3d57c0" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb76e3d0620" loc="135:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3d0020" loc="135:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e3d0350" loc="135:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb76e3cf6d0" loc="123:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb76e3d32a0" loc="96:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3d3020" loc="96:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76e3d17f0" loc="110:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3d1210" loc="110:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb76e3d1560" loc="110:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7fb76e3dc810" loc="47:../../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7fb76e3dc120" loc="44:../../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7fb76e3dd980" loc="41:../../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fb76e3e6820" loc="52:../../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fb76e3e6020" loc="46:../../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7fb76e4402c0" loc="18:../../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7fb76e4a3140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fb76e4417f0" loc="18:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7fb76e4a3140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb76e441b40" loc="18:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e440020" loc="19:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7fb76e441020" loc="12:../../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7fb76e44ac90" loc="12:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7fb76e43f130" loc="21:../../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7fb76e4a3140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fb76e440a80" loc="21:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7fb76e4a3140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7fb76e440e80" loc="22:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7fb76e43d6e0" loc="29:../../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7fb76e4a3140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fb76e43f8c0" loc="29:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7fb76e4a3140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb76e43fc10" loc="29:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e43d020" loc="30:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7fb76e43d430" loc="30:../../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb76e449070" loc="95:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb76e449880" loc="105:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76e46c510" loc="53:../../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76e46c510"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb76e4641f0" loc="136:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb76e469aa0" loc="83:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fb76e467860" loc="114:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb76e467290" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb76e4675d0" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fb76e468aa0" loc="98:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fb76e463270" loc="151:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fb76e464980" loc="144:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb76e4682b0" loc="92:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fb76e46b0b0" loc="64:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb76e46ce00" loc="64:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fb76e466820" loc="129:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb76e466250" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb76e466590" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fb76e46bb70" loc="73:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb76e46b8f0" loc="73:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb76e469390" loc="78:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fb76e3d9980" loc="78:../../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76e3d9020" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb76e3d9370" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76e3d96a0" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fb76e47d0e0" loc="61:../../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fb76e47d890" loc="67:../../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fb76e47c0e0" loc="72:../../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fb76e47b070" loc="83:../../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fb76e4797d0" loc="100:../../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb76e478020" loc="117:../../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fb76e47c870" loc="77:../../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb76e478b90" loc="134:../../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb76e478910" loc="134:../../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fb76e47e8e0" loc="56:../../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fb76e47b850" loc="89:../../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fb76e479020" loc="94:../../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7fb76e452ba0" loc="53:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7fb76e450510" loc="54:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7fb76e450290" loc="54:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7fb76e450c20" loc="55:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7fb76e457030" loc="42:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7fb76e454400" loc="46:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7fb76e454180" loc="46:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7fb76e44f350" loc="57:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7fb76e455270" loc="44:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7fb76e454be0" loc="47:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7fb76e4524a0" loc="49:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7fb76e453380" loc="49:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7fb76e4536f0" loc="49:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7fb76e453a80" loc="50:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7fb76e453e00" loc="50:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7fb76e4521e0" loc="51:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7fb76e4559c0" loc="45:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7fb76e457ad0" loc="43:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7fb76e457850" loc="43:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7fb76e45a900" loc="41:../../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb76e37f0e0" loc="44:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb76e37f810" loc="45:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb76e380270" loc="42:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb76e37e760" loc="47:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb76e380970" loc="43:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb76e37e020" loc="46:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb76e382440" loc="40:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb76e382b10" loc="41:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb76e3537c0" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb76e352020" loc="80:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fb76e34eb10" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb76e34e890" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb76e354020" loc="58:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb76e350020" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fb76e34d490" loc="117:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb76e352760" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb76e353020" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fb76e34f770" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fb76e3547c0" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb76e356020" loc="48:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fb76e3507a0" loc="92:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fb76e34e020" loc="101:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fb76e34f020" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb76e356750" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76e105c40" loc="53:../../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76e105c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb76e1015a0" loc="61:../../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76e0fc5d0" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76e0fc5d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb76e0fc810" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb76e0f7390" loc="109:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb76e0f93b0" loc="78:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fb76e0f89d0" loc="103:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb76e0f8400" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fb76e0f8740" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb76e0f9b90" loc="88:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fb76e0f7b80" loc="116:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb76e0fa390" loc="66:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb76e0fa110" loc="66:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e0fc810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb76e0fabc0" loc="73:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76e08b4f0" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76e08b4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb76e08b730" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e08b730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb76e08a070" loc="64:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76e08b730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb76e089190" loc="76:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb76e08a8f0" loc="71:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb76e0898f0" loc="82:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fb76df61160" loc="53:../../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb76df61160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fb76df61ca0" loc="64:../../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb76df61160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fb76df61a20" loc="64:../../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb76df61160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7fb76df3f550" loc="102:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7fb76df46350" loc="77:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7fb76df3e020" loc="104:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7fb76df3fc60" loc="104:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7fb76df43780" loc="94:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7fb76df40df0" loc="100:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7fb76df40b70" loc="100:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7fb76df474d0" loc="71:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7fb76df46da0" loc="80:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7fb76df46b20" loc="80:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7fb76df425a0" loc="97:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7fb76df43e60" loc="95:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7fb76df40420" loc="99:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7fb76df42d50" loc="99:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7fb76df40190" loc="99:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7fb76df44800" loc="83:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7fb76df44580" loc="83:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7fb76df43020" loc="90:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7fb76df3ebc0" loc="106:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7fb76df3e940" loc="106:../../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7fb76df47bd0" loc="74:../../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7fb76df4d9d0" loc="17:../../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76df4d750" loc="17:../../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7fb76df48020" loc="23:../../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7fb76f253a20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7fb76df49150" loc="23:../../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7fb76df49490" loc="23:../../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76df497d0" loc="24:../../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7fb76f253a20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7fb76df49be0" loc="24:../../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7fb76dee2360" loc="28:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7fb76dee4c70" loc="28:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7fb76dee20d0" loc="29:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7fb76dee43e0" loc="13:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7fb76def3ce0" loc="13:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7fb76dee4150" loc="14:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7fb76dee1360" loc="39:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fb76dee2cc0" loc="39:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7fb76dee10d0" loc="39:../../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7fb76def5b90" loc="29:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76def5910" loc="29:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fb76deee7b0" loc="54:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7fb76deee530" loc="54:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7fb76def0c10" loc="44:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76def0990" loc="44:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7fb76def2660" loc="34:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76def23e0" loc="34:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fb76def0110" loc="39:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7fb76def2e30" loc="39:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7fb76deefe70" loc="52:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7fb76deef6c0" loc="50:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76deef440" loc="50:../../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7fb76ded1e80" loc="23:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7fb76decf600" loc="24:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7fb76ded16b0" loc="21:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7fb76ded27b0" loc="21:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76ded2b00" loc="21:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7fb76ded1020" loc="22:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7fb76ded1400" loc="22:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7fb76ded6be0" loc="11:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7fb76e4c9a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7fb76e4c7020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76ded6540" loc="11:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7fb76ded6950" loc="12:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7fb76e4c9a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7fb76e4c7020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7fb76ded5ab0" loc="17:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76ded54b0" loc="17:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7fb76ded5820" loc="17:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7fb76ded3860" loc="18:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7fb76ded31f0" loc="18:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7fb76ded35d0" loc="18:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7fb76ded2020" loc="20:../../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7fb76deda950" loc="27:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7fb76deecb30" loc="10:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7fb76deec8b0" loc="10:../../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7fb76deddc80" loc="14:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7fb76dedda00" loc="14:../../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7fb76dedb390" loc="21:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7fb76dedba60" loc="22:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7fb76dedd270" loc="11:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7fb76ded8350" loc="29:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb76ded80d0" loc="29:../../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7fb76dedc420" loc="16:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7fb76dedcc10" loc="18:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7fb76deda1f0" loc="24:../../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7fb76defb2e0" loc="8:../../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7fb76e3e0ec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7fb76e3de520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7fb76defb020" loc="8:../../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7fb76dee62e0" loc="22:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7fb76e43aa30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7fb76dee6020" loc="22:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7fb76dee9c40" loc="18:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7fb76e43aa30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7fb76dee9610" loc="18:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7fb76dee9970" loc="18:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7fb76deead40" loc="16:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7fb76e43a6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fb76deeaac0" loc="16:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7fb76e43a6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7fb76dee7760" loc="20:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7fb76e43aa30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7fb76e43a6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fb76dee74a0" loc="20:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7fb76e43a6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7fb76deea2d0" loc="10:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7fb76e43a6f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7fb76deeb490" loc="10:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7fb76deeb7f0" loc="10:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7fb76deebc30" loc="11:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7fb76deea020" loc="11:../../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7fb76def97e0" loc="14:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7fb76defed90" loc="14:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7fb76def9180" loc="15:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7fb76def9540" loc="15:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7fb76def6a20" loc="21:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76def60d0" loc="21:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7fb76def6420" loc="22:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7fb76def6780" loc="23:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7fb76def8970" loc="17:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7fb76def8020" loc="17:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7fb76e4c0770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7fb76def8370" loc="18:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7fb76def86d0" loc="19:../../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7fb76dcd3830" loc="20:../../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76dcd35b0" loc="20:../../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7fb76dccd560" loc="5:../../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fb76e4ca210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fb76dcca560" loc="10:../../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fb76dccce80" loc="8:../../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fb76e4ca630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76dcccc00" loc="8:../../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fb76e4ca630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fb76dccc490" loc="7:../../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb76e4cb670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7fb76e4caa70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fb76dccdcf0" loc="6:../../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fb76e4ca630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fb76dc89a70" loc="48:../../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb76e4cb670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fb76e4cbdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fb76dc7c640" loc="106:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fb76dc7c060" loc="106:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fb76dc7c3b0" loc="106:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fb76dc7d020" loc="93:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fb76dc7e690" loc="87:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fb76dc7e020" loc="87:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fb76dc7e400" loc="87:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fb76dc85a40" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb76dc857c0" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fb76dc7d8a0" loc="98:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fb76dc81540" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fb76dc812c0" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fb76dc83b90" loc="61:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fb76dc83910" loc="61:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fb76dc7b8a0" loc="117:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fb76dc806b0" loc="78:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fb76dc80430" loc="78:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fb76dc7b070" loc="112:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fb76dc82350" loc="66:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb76e4cb670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fb76e4cbdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fb76dc82b40" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fb76dc85020" loc="54:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fb76dc831f0" loc="60:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fb76dc81ce0" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb76dc545d0" loc="49:../../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb76dc545d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fb76dc4c020" loc="55:../../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb76dc4cd50" loc="63:../../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb76dc545d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb76dc4c7a0" loc="63:../../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb76dc4cac0" loc="63:../../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb76dc545d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fb76dc52960" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fb76dc50a80" loc="97:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fb76dc502b0" loc="90:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fb76dc530e0" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fb76dc52120" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fb76dc51270" loc="76:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fb76dc51a90" loc="83:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fb76dc53940" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb76dc59b60" loc="120:../../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fb76dc5ab60" loc="97:../../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fb76dc5a1f0" loc="88:../../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb76dc59390" loc="102:../../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb76dc585e0" loc="128:../../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb76dc292a0" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76dc29020" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb76dc29d80" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76dc29b00" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fb76dc32af0" loc="50:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fb76dc31ab0" loc="60:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fb76dc31350" loc="55:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fb76dc322b0" loc="45:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fb76dc38b50" loc="45:../../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fb76dc32020" loc="45:../../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fb76dc22540" loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb76dc2d2c0" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb76dc2f3d0" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fb76dc2fc40" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76dc2d020" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb76dc2ca80" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb76dc2db90" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fb76dc2c490" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76dc2c7e0" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb76dc34190" loc="68:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb76dc36960" loc="61:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fb76dc361f0" loc="54:../../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fb76dc398d0" loc="53:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fb76db15bb0" loc="54:../../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb76db14d70" loc="66:../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb76db145c0" loc="61:../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb76db14340" loc="61:../../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fb76db15350" loc="53:../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb76daf2a60" loc="52:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb76daef540" loc="72:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb76daf22d0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fb76daf1cf0" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fb76daf1a70" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fb76daf5b00" loc="42:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fb76daf12b0" loc="59:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fb76d9dd270" loc="24:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fb76d9ddac0" loc="31:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fb76d9db350" loc="39:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fb76d9b5b60" loc="62:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d9b5580" loc="62:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76d9b58d0" loc="62:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fb76d9b0dd0" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d9b0490" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76d9b07e0" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb76d9b0b30" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb76d9b26b0" loc="82:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d9b20d0" loc="82:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76d9b2420" loc="82:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fb76d9b7730" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb76e6fd300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d9b7150" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76d9b74a0" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb76d9b32c0" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d9b4930" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb76d9b4c80" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb76d9b3020" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb76d996df0" loc="76:../../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fb76d996480" loc="76:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fb76d996810" loc="76:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76d996b50" loc="76:../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76d9943c0" loc="88:../../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fb76d9926a0" loc="88:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fb76d992a30" loc="88:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76d992d70" loc="88:../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb76d994110" loc="89:../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fb76d99ac90" loc="45:../../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fb76d99aa10" loc="45:../../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fb76d98c7f0" loc="71:../../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fb76d98ed40" loc="56:../../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fb76d98c020" loc="66:../../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fb76d98dc70" loc="66:../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fb76d98d4d0" loc="61:../../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fb76d998a80" loc="45:../../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fb76d998800" loc="45:../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fb76d98e560" loc="51:../../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fb76d98e2e0" loc="51:../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fb76d8b26f0" loc="53:../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb76d8b1070" loc="61:../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fb76d8aa710" loc="39:../../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb76d8e4020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb76d8e4440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fb76d8ae2a0" loc="62:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d8ae020" loc="62:../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fb76d8ad680" loc="74:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d8ad400" loc="74:../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fb76d8aeb10" loc="68:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb76d8ac2a0" loc="81:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d8ac020" loc="81:../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fb76d8a3ca0" loc="65:../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fb76d8a3480" loc="59:../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fb76d89b2a0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d89b020" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fb76d89c780" loc="49:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fb76d876af0" loc="213:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fb76d882790" loc="143:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fb76d88e610" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d901080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb76d9018c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb76d88e390" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d901080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb76d9018c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fb76d884800" loc="123:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fb76d88ca90" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d8fc080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb76d8fc8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb76d88c810" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d8fc080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb76d8fc8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fb76d87be70" loc="180:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fb76d878480" loc="197:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fb76d88c070" loc="65:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d8fe020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb76d8fe7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fb76d88b2b0" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d8fc080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb76d8fc8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fb76d887020" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fb76d888d30" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fb76d888610" loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fb76d87b740" loc="179:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fb76d88d840" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d8fe020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb76d8fe7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb76d88d5c0" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d8fe020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb76d8fe7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fb76d889420" loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fb76d87a5d0" loc="181:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fb76d889e00" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fb76d889b80" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fb76d8858c0" loc="113:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fb76d884070" loc="118:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fb76d87d840" loc="177:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fb76d87f790" loc="163:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fb76d8837a0" loc="133:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fb76d87b020" loc="178:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fb76d880020" loc="148:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fb76d87acf0" loc="182:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb76d887800" loc="103:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb76d907dd0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fb76d903680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fb76d8794c0" loc="187:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fb76d876350" loc="207:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fb76d88bc50" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fb76d88b9d0" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fb76d8754d0" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d875250" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fb76d88edf0" loc="55:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb76d901080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb76d9018c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fb76d883020" loc="128:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fb76d880770" loc="153:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fb76d87d020" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb76d8d3e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb76d8d12b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb76d87ecf0" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb76d8d3e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb76d8d12b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fb76d87e2a0" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb76d8e4020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb76d8e4440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb76d87e020" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb76d8e4020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb76d8e4440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fb76d875d90" loc="231:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fb76d879cb0" loc="192:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fb76d885020" loc="108:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fb76d878be0" loc="202:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fb76d87f020" loc="158:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fb76d882020" loc="138:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb76d80e600" loc="39:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fb76d7e6070" loc="80:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fb76d7f9b10" loc="31:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fb76d7eed50" loc="62:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76d7eead0" loc="62:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fb76d801270" loc="11:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fb76d7ea350" loc="71:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fb76d7f3cf0" loc="49:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fb76d7fbc50" loc="28:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fb76d7f89c0" loc="34:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb76d7fcc00" loc="25:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fb76d7fc980" loc="25:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fb76d7fd120" loc="21:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fb76d7f6790" loc="41:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fb76d7edc80" loc="66:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fb76d7e88f0" loc="78:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fb76d7ee390" loc="61:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fb76d7e3b60" loc="91:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fb76d7de270" loc="100:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fb76d8000e0" loc="14:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fb76d7f6020" loc="38:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fb76d7f4910" loc="45:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fb76d7fb500" loc="27:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fb76d802020" loc="7:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fb76d7efba0" loc="58:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb76d7ef920" loc="58:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fb76d8067e0" loc="6:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fb76d7ebb80" loc="69:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fb76d7e67d0" loc="81:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fb76d7e0350" loc="94:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fb76d7dfa90" loc="97:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fb76d7e9270" loc="74:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fb76d7e5020" loc="83:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fb76d7ed520" loc="65:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fb76d7e4bb0" loc="87:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fb76d800800" loc="15:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fb76d7f1020" loc="53:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fb76d7e4020" loc="86:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fb76d7e8190" loc="77:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fb76d7f3520" loc="46:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fb76d7f32a0" loc="46:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fb76d7e0af0" loc="95:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fb76d7ef1f0" loc="57:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fb76d7eaac0" loc="72:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fb76d802aa0" loc="8:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb76d8bfb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fb76d8bd020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb76d802820" loc="8:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb76d8bfb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fb76d8bd020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fb76d7f7870" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fb76d7ff980" loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb76d7ff700" loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fb76d7f4120" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76d7f6e70" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fb76d7e33b0" loc="90:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fb76d7fc270" loc="24:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fb76d7ff020" loc="18:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fb76d7f19e0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fb76d7f1760" loc="54:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fb76d8019a0" loc="12:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fb76d7e5740" loc="84:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fb76d7e99e0" loc="75:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fb76d7eb420" loc="68:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fb76d7f2740" loc="50:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fb76d7f24c0" loc="50:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fb76d7f7120" loc="35:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fb76d7f93b0" loc="29:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fb76d7df2b0" loc="96:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fb76d7fdaa0" loc="22:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb76d7fd820" loc="22:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fb76d7e1350" loc="92:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fb76d7f8270" loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fb76d7e1b10" loc="93:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fb76d741780" loc="90:../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fb76d740020" loc="98:../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb76d70b900" loc="56:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fb76d70aa20" loc="73:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb76d70b070" loc="46:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb76d70a1f0" loc="65:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb76d708390" loc="81:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fb76d6feb50" loc="79:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb76d707b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb76d6fe8d0" loc="79:../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb76d707b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fb76d703b80" loc="53:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fb76d7006b0" loc="62:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb76d707b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb76d700430" loc="62:../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb76d707b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fb76d6fe020" loc="70:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fb76d707b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fb76d4cfd80" loc="50:../../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4cfd80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb76d4c80e0" loc="97:../../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4cfd80"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fb76d4cb8a0" loc="80:../../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fb76d4cc6b0" loc="61:../../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7fb76d4c9350" loc="89:../../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4cfd80"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fb76d4c90d0" loc="89:../../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4cfd80"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fb76d4cb020" loc="72:../../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fb76d4d9020" loc="43:../../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4d9020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fb76d4d6790" loc="80:../../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4d9020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fb76d4d42a0" loc="97:../../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4d9020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fb76d4d4020" loc="97:../../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4d9020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fb76f24ac30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7fb76f24ac30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fb76d4d22a0" loc="108:../../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4d9020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb76d4d2020" loc="108:../../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fb76d4d7070" loc="57:../../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fb76d4d6020" loc="72:../../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fb76d4d5390" loc="88:../../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76d4d9020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fb76d4d98d0" loc="50:../../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fb76d4d77f0" loc="65:../../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7fb76d402cc0" loc="43:../../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7fb76d3ff5a0" loc="50:../../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7fb76d3dad30" loc="18:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7fb76d3da330" loc="18:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7fb76e4a6cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7fb76d3da740" loc="19:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7fb76d3daa90" loc="20:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7fb76d3d78e0" loc="28:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7fb76d3d9e70" loc="28:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb76d3d7210" loc="29:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7fb76d3d7640" loc="30:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76d3d9740" loc="22:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7fb76d3d94c0" loc="22:../../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7fb76d34b760" loc="18:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7fb76e4c7d50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7fb76d34ed20" loc="18:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7fb76e4c7d50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7fb76d34b170" loc="19:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7fb76e4911b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7fb76d34b4c0" loc="20:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7fb76d348480" loc="28:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7fb76d3499d0" loc="28:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7fb76e4a3aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb76d349d40" loc="29:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7fb76d3481e0" loc="30:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7fb76e4925e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76d3492a0" loc="22:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7fb76d349020" loc="22:../../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7fb76df04870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7fb76d2548f0" loc="24:../../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7fb76d2548f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7fb76d250b20" loc="34:../../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb76d250450" loc="29:../../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7fb76d2548f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7fb76d2501d0" loc="29:../../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7fb76d2548f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7fb76d220c80" loc="8:../../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d220a00" loc="8:../../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7fb76d2202a0" loc="6:../../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d220020" loc="6:../../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fb76d2132b0" loc="65:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d214bd0" loc="65:../../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fb76d213020" loc="65:../../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fb76d212430" loc="71:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d2121b0" loc="71:../../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fb76d2143e0" loc="57:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fb76d2159e0" loc="52:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fb76d215760" loc="52:../../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb76d22b890" loc="75:../../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d22b2d0" loc="75:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76d22b600" loc="75:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb76d224020" loc="125:../../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d225890" loc="125:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76d225bc0" loc="125:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb76d225020" loc="112:../../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb76d229b90" loc="89:../../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d229910" loc="89:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76d22a0c0" loc="100:../../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d227a80" loc="100:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb76d227dd0" loc="100:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fb76d219680" loc="65:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d219400" loc="65:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fb76d21d770" loc="46:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d21d150" loc="46:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fb76d21d4e0" loc="46:../../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fb76d21a650" loc="59:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d21a3d0" loc="59:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fb76d21cb70" loc="53:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d21c550" loc="53:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fb76d21c8e0" loc="53:../../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fb76d218650" loc="71:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76d2183d0" loc="71:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fb76cf38780" loc="47:../../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf38500" loc="47:../../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fb76cf45be0" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf45600" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fb76cf45950" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fb76cf403a0" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf41d50" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fb76cf40110" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fb76cf446e0" loc="64:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fb76f245110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf44460" loc="64:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fb76cf412a0" loc="75:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf41020" loc="75:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fb76cf48dd0" loc="47:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf48b50" loc="47:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fb76cf422a0" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf42020" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fb76cf3d2e0" loc="59:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf3d060" loc="59:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fb76cf3c510" loc="71:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf3c290" loc="71:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fb76cf3b680" loc="85:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf3b400" loc="85:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fb76cf2ae40" loc="95:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf2abc0" loc="95:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fb76cf2c120" loc="81:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf2de80" loc="81:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fb76cf2e7a0" loc="66:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fb76cf2e520" loc="66:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fb76cf30bd0" loc="60:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fb76cf30950" loc="60:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fb76cf2d2a0" loc="73:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fb76cf2d020" loc="73:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fb76cf2a020" loc="88:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf2cd40" loc="88:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb76cf1d040" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf1fa50" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fb76cf1fd80" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb76cf1c350" loc="65:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fb76cf1ac50" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb76cf1be00" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb76cf1a680" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76cf1a9b0" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76cf1b600" loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb76cf1b020" loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb76cf1b370" loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fb76cf1dad0" loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fb76cf1d850" loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fb76cf12ae0" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf12820" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fb76cf12020" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fb76e6fa160"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fb76e6f9ac0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf13be0" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fb76cf10de0" loc="53:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fb76e6f8610"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fb76e6f54f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cf10ae0" loc="53:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fb76cebe890" loc="43:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fb76cea7020" loc="35:../../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb76cea7020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb76cea7260" loc="35:../../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76cea7260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fb76cea40b0" loc="63:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76cea7260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cea5e00" loc="63:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fb76cea32a0" loc="70:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cea3020" loc="70:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fb76cea7e20" loc="49:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cea7ba0" loc="49:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb76cea2610" loc="78:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76cea7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76cea2020" loc="78:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fb76cea2380" loc="78:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb76cea7260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fb76ce84420" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fb76ce85a20" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fb76ce84190" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fb76ce85270" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fb76ce86a00" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb76ce86780" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb76f244920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fb76ce9acb0" loc="58:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76ce9aa30" loc="58:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fb76ce9ec90" loc="50:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76ce9ea10" loc="50:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb76ce97c80" loc="72:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76ce97a00" loc="72:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb76ce98ca0" loc="65:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76ce98a20" loc="65:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fb76c9f9840" loc="177:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76c9f95c0" loc="177:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fb76ca02350" loc="88:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76ca020d0" loc="88:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fb76ca05790" loc="68:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fb76ca032a0" loc="78:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76ca03020" loc="78:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fb76c9fec40" loc="121:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76c9fe660" loc="121:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fb76c9fe9b0" loc="121:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fb76ca01760" loc="103:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76ca01180" loc="103:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fb76ca014d0" loc="103:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb76e6be560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fb76c9fc2e0" loc="147:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76c9fc060" loc="147:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fb76c9fa680" loc="162:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76c9fa0d0" loc="162:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fb76c9fa3f0" loc="162:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb76e6bfd50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fb76c9fd0b0" loc="136:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76c9ffe00" loc="136:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fb76c9f6d00" loc="187:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb76c9f6720" loc="187:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fb76c9f6a70" loc="187:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fb76c9f5b50" loc="195:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb76e6be180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fb76c988020" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76c989960" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fb76c989ce0" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fb76c98a020" loc="15:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fb76c989020" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb76c98a8b0" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb76e6af0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb76e6ae6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fb76c98ac20" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fb76c96f190" loc="54:../../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fb76c9729e0" loc="49:../../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fb76c978270" loc="56:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fb76c9776c0" loc="72:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fb76c975390" loc="94:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76c975110" loc="94:../../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fb76c976020" loc="79:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fb76c978de0" loc="65:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76c978b60" loc="65:../../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fb76c975bf0" loc="100:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fb76c9768d0" loc="85:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fb76c980c10" loc="71:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fb76c97f590" loc="81:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fb76c9802a0" loc="62:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fb76c980020" loc="62:../../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fb76c97e2a0" loc="91:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb76c97e020" loc="91:../../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fb76c97c020" loc="62:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fb76c97cc40" loc="69:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb76c97c9c0" loc="69:../../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fb76c97a730" loc="80:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb76c97a4b0" loc="80:../../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb76c84add0" loc="48:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb76c84a800" loc="48:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76c84ab40" loc="48:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fb76c842ac0" loc="79:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb76c842840" loc="79:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fb76c841930" loc="90:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb76c841360" loc="90:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76c8416a0" loc="90:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fb76c843740" loc="65:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fb76c8402c0" loc="99:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb76c83f920" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76c83fc60" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb76c840020" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fb76c842070" loc="72:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb76c845720" loc="57:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb76c846db0" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb76c845130" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb76c845480" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb76c81f5b0" loc="50:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb76c81f330" loc="50:../../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fb76c81fdf0" loc="59:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fb76c81ecf0" loc="69:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb76c81e700" loc="69:../../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fb76c81ea60" loc="69:../../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb76f244160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fb76c81cb50" loc="79:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fb76c814420" loc="39:../../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb76d8d3e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb76d8d12b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb76c786860" loc="95:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb76c7850e0" loc="105:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fb76c6bf470" loc="62:../../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fb76c573b80" loc="43:../../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76c573b80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fb76c56d350" loc="80:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76c573b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fb76c56c580" loc="97:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb76eb97c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76c573b80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fb76c56c300" loc="97:../../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76c573b80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fb76c56b020" loc="108:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76c573b80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb76c56cd50" loc="108:../../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fb76c570bd0" loc="57:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fb76c56fba0" loc="72:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fb76c56db10" loc="88:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fb76c573b80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fb76c570460" loc="50:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb76eb9f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fb76c56f390" loc="65:../../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb76f244520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fb76c54a0b0" loc="49:../../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fb76c54ddd0" loc="49:../../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
